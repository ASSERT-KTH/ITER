bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
2	[BUG]  [BUGGY]  ||!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
3	[BUG]  [BUGGY]  ||!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
4	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
5	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
6	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
7	[BUG]  [BUGGY]  if(!modules.containsKey(name))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(name))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(name))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
8	[BUG]  [BUGGY]  if(module  ==  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
9	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
10	[BUG]  [BUGGY]  if(module.getModuleCount()  ==  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  ==  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  ==  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
11	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
12	[BUG]  [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(module!=    null)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
13	[BUG]  [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(module!=    null)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
14	[BUG]  [BUGGY]  if(module  >=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  >=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  >=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(module!=    null)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
15	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }	  if(module!=    null)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
16	[BUG]  [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }	  if(module!=    null)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
17	[BUG]  [BUGGY]  var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test  =	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
18	[BUG]  [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
19	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  a$$module$test  =  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  a$$module$test  =  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  a$$module$test  =  }	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
20	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  a$$module$test  =!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  a$$module$test  =!=  illegal  start  of  expression  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  a$$module$test  =!=  illegal  start  of  expression	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
21	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  a$$module$test  =	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
22	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  a$$module$test  =  [Delete]  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  a$$module$test  =  [Delete]  illegal  start  of  expression  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  a$$module$test  =  [Delete]  illegal  start  of  expression	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
23	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
24	[BUG]  [BUGGY]  if(this.module!=  module)  {  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  module)  {  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
25	[BUG]  [BUGGY]  if(module.getType()  ==  Token.NAME)  {  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getType()  ==  Token.NAME)  {  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getType()  ==  Token.NAME)  {  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
26	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
27	[BUG]  [BUGGY]  if(module.modules!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.modules!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.modules!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
28	[BUG]  [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
29	[BUG]  [BUGGY]  if(this.module!=  module)  {  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  module)  {  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
30	[BUG]  [BUGGY]  if(module.modules  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.modules  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.modules  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
31	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
32	[BUG]  [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
33	[BUG]  [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
34	[BUG]  [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
35	[BUG]  [BUGGY]  if(this.reportDependencies  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
36	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
37	[BUG]  [BUGGY]  var  a$$module$test=  ==  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  ==  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  ==  }	  var    module$test=    {    }    ;var    a$$module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
38	[BUG]  [BUGGY]  var  a$$module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  }	  var    module$test=    {    }    ;var    a$$module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
39	[BUG]  [BUGGY]  var  a$$module$test=  >>  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  >>  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  >>  }	  var    module$test=    {    }    ;var    a$$module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
40	[BUG]  [BUGGY]  var  a$$module$test=!=  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=!=  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=!=  }	  var    module$test=    {    }    ;var    a$$module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
41	[BUG]  [BUGGY]  var  a$$module$test=  >=  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  >=  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  >=  }	  var    module$test=    {    }    ;var    a$$module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
42	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
43	[BUG]  [BUGGY]  if(!modules.containsKey(name))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(name))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(name))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
44	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
45	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
46	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
47	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
48	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
50	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
51	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
53	[BUG]  [BUGGY]  this.module$test  =  compiler.getModules().iterator().next();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  compiler.getModules().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  compiler.getModules().iterator().next();	  this.module$test    =    module.getModules().iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
54	[BUG]  [BUGGY]  this.module$test  =  module.getModules().iterator();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getModules().iterator();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getModules().iterator();	  this.module$test    =    module.getModules().iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
55	[BUG]  [BUGGY]  this.module$test  =  modules.getModules().iterator().next();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  modules.getModules().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  modules.getModules().iterator().next();	  this.module$test    =    module.getModules().iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
56	[BUG]  [BUGGY]  this.module$test  =  module.getModuleStructure().iterator().next();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getModuleStructure().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getModuleStructure().iterator().next();	  this.module$test    =    module.getModules().iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
57	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
58	[BUG]  [BUGGY]  ||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
59	[BUG]  [BUGGY]  ||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
60	[BUG]  [BUGGY]  ||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
61	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
62	[BUG]  [BUGGY]  if(module  ==  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  this.module  =  module.getModule();  }	  if(module!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
63	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  modules.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.module  =  modules.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  modules.getModule();  }	  if(module!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
64	[BUG]  [BUGGY]  This.module  =  module.getModule();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  This.module  =  module.getModule();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	This.module  =  module.getModule();	  if(module!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
65	[BUG]  [BUGGY]  System.err.println( "Failed  to  report  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  System.err.println( "Failed  to  report  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	System.err.println( "Failed  to  report  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    report    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
66	[BUG]  [BUGGY]  Error.println( "Failed  to  report  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Error.println( "Failed  to  report  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Error.println( "Failed  to  report  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    report    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
67	[BUG]  [BUGGY]  Error( "Failed  to  report  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Error( "Failed  to  report  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Error( "Failed  to  report  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    report    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
68	[BUG]  [BUGGY]  ger.println( "Failed  to  report  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ger.println( "Failed  to  report  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	ger.println( "Failed  to  report  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    report    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
69	[BUG]  [BUGGY]  Reporterr.println( "Failed  to  report  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Reporterr.println( "Failed  to  report  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Reporterr.println( "Failed  to  report  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    report    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
70	[BUG]  [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
72	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i  +  1);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i  +  1);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i  +  1);  if(module!=  null)  {  module.addModule(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
76	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  for(JSModule    module    :    module.modules())    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
77	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules())  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules())  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules())  {  this.modules.add(module);  }	  for(JSModule    module    :    module.modules())    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
78	[BUG]  [BUGGY]  for(JSModule  module  :  compiler.modules())  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  compiler.modules())  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  compiler.modules())  {  this.modules.add(module);  }	  for(JSModule    module    :    module.modules())    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
79	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules())  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules())  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules())  {  this.modules.add(module,  reportDependencies);  }	  for(JSModule    module    :    module.modules())    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
80	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules.values())  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules.values())  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules.values())  {  this.modules.add(module);  }	  for(JSModule    module    :    module.modules())    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
81	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.modules.add(module);  }	  for(JSModule    module    :    module.modules())    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
82	[BUG]  [BUGGY]  for(JSModule  module  :  compiler.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  compiler.getModules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  compiler.getModules())  {  this.module  =  module;  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
83	[BUG]  [BUGGY]  for(JSModule  module  :  modules.get(0))  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.get(0))  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.get(0))  {  this.module  =  module;  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
84	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules.get(0))  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules.get(0))  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules.get(0))  {  this.module  =  module;  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
85	[BUG]  [BUGGY]  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.module.getModules())  {  this.module  =  module;  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
86	[BUG]  [BUGGY]  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	System.err.println( "Failed  to  add  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
87	[BUG]  [BUGGY]  Error.println( "Failed  to  add  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Error.println( "Failed  to  add  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Error.println( "Failed  to  add  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
88	[BUG]  [BUGGY]  log(Level.WARNING,  reportDependencies))  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  log(Level.WARNING,  reportDependencies))  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	log(Level.WARNING,  reportDependencies))  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
89	[BUG]  [BUGGY]  Error( "Failed  to  add  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Error( "Failed  to  add  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Error( "Failed  to  add  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
90	[BUG]  [BUGGY]  Context.err.println( "Failed  to  add  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Context.err.println( "Failed  to  add  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Context.err.println( "Failed  to  add  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
91	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;  }	  var    module$test=    ==    }    ;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
92	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  ==  }  ;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  var  module$test=  ==  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  var  module$test=  ==  }  ;  }	  var    module$test=    ==    }    ;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
93	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  var  module$test=  {  }  ;  }	  var    module$test=    ==    }    ;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
94	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;	  var    module$test=    ==    }    ;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
95	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  ==  }  ;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  var  module$test=  ==  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  var  module$test=  ==  }  ;  }	  var    module$test=    ==    }    ;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
96	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  System.err.println( "Failed  to  parse  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	System.err.println( "Failed  to  parse  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    parse    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
97	[BUG]  [BUGGY]  Error.println( "Failed  to  parse  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Error.println( "Failed  to  parse  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Error.println( "Failed  to  parse  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    parse    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
98	[BUG]  [BUGGY]  log(Level.WARNING,  reportDependencies))  {  System.err.println( "Failed  to  parse  module: "  +  filenamePrefix);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  log(Level.WARNING,  reportDependencies))  {  System.err.println( "Failed  to  parse  module: "  +  filenamePrefix);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	log(Level.WARNING,  reportDependencies))  {  System.err.println( "Failed  to  parse  module: "  +  filenamePrefix);  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    parse    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
99	[BUG]  [BUGGY]  Error( "Failed  to  parse  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Error( "Failed  to  parse  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Error( "Failed  to  parse  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    parse    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
100	[BUG]  [BUGGY]  Context.err.println( "Failed  to  parse  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Context.err.println( "Failed  to  parse  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Context.err.println( "Failed  to  parse  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    parse    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
101	[BUG]  [BUGGY]  if(module.getModule()!=  null  ||  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null  ||  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null  ||  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    &&    module.getModule()    instanceof    Module)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
102	[BUG]  [BUGGY]  if(module.getModule()  ==  null  &&  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null  &&  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null  &&  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    &&    module.getModule()    instanceof    Module)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
103	[BUG]  [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()  instanceof  Module  ||  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()  instanceof  Module  ||  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null  &&  module.getModule()  instanceof  Module  ||  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    &&    module.getModule()    instanceof    Module)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
104	[BUG]  [BUGGY]  if(module.getModule()  ==  null  ||  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null  ||  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null  ||  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    &&    module.getModule()    instanceof    Module)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
105	[BUG]  [BUGGY]  ||  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    &&    module.getModule()    instanceof    Module)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
106	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(module$test!=  null)  {  var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  else  if(module$test!=  null)  {  var  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  else  if(module$test!=  null)  {  var  a$$module$test  =	  var    module$test=    {    }    else    if(module$test    ==    null)    {    var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
107	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  {  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=1  {	  var    module$test=    {    }    else    if(module$test    ==    null)    {    var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
108	[BUG]  [BUGGY]  var  a$$module$test=  {  }  else  if(module$test  ==  null)  {  var  module$test  =  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  }  else  if(module$test  ==  null)  {  var  module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  }  else  if(module$test  ==  null)  {  var  module$test  =	  var    module$test=    {    }    else    if(module$test    ==    null)    {    var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
109	[BUG]  [BUGGY]  var  a$$module$test=  ==  }  ;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  ==  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  ==  }  ;	  var    module$test=    ==    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
110	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
111	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
112	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
113	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
116	[BUG]  [BUGGY]  if(module.getModule()  ==  null  ||  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null  ||  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null  ||  module.getModule()!=  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()    >=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
117	[BUG]  [BUGGY]  if(module$test!=  null)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  this.module$test=1;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  this.module$test=1;  }	  var    module$test=    {    }    if(module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
118	[BUG]  [BUGGY]  if(module$test  ==  null)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  this.module$test=1;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  this.module$test=1;  }	  var    module$test=    {    }    if(module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
119	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=1  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=1	  var    module$test=    {    }    if(module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
120	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  ;var  module$test=  {  }  ;var  a$$module$test=1  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  module$test=  {  }  ;var  a$$module$test=1	  var    module$test=    {    }    if(module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
121	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=1  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=1	  var    module$test=    {    }    if(module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
122	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildTo  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildTo  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildTo	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
123	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
124	[BUG]  [BUGGY]  if(this.reportDependencies  ==  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies  ==  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies  ==  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
125	[BUG]  [BUGGY]  if(this.reportDependencies  ==  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies  ==  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies  ==  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
127	[BUG]  [BUGGY]  for(JSModule  module  :  modules.keySet().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.keySet().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.keySet().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  for(JSModule    module    :    modules.iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
128	[BUG]  [BUGGY]  for(JSModule  module  :  modules.entrySet().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.entrySet().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.entrySet().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  for(JSModule    module    :    modules.iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
129	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  for(JSModule    module    :    modules.iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
130	[BUG]  [BUGGY]  for(JSModule  module  :  modules.values().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.values().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.values().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  for(JSModule    module    :    modules.iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
131	[BUG]  [BUGGY]  for(JSModule  module  :  modules.values().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.values().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.values().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  for(JSModule    module    :    modules.iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module,    filenamePrefix,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
133	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module,    filenamePrefix,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
134	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module,    filenamePrefix,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
135	[BUG]  [BUGGY]  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	module.addChildToFront(module,  filenamePrefix,  reportDependencies);	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module,    filenamePrefix,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module,    filenamePrefix,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
137	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module,    filenamePrefix,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
138	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
139	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
140	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
141	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module  ==  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module  ==  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module  ==  null)  {  module.addChildToBack	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
142	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
143	[BUG]  [BUGGY]  this.module  =  compiler.getModules();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  compiler.getModules();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  compiler.getModules();	  this.module    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
144	[BUG]  [BUGGY]  this.module  =  module.getModule(false);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module.getModule(false);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module.getModule(false);	  this.module    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
145	[BUG]  [BUGGY]  this.module  =  module.getModule( "module$test ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module.getModule( "module$test ");  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module.getModule( "module$test ");	  this.module    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
146	[BUG]  [BUGGY]  this.module  =  module.getModule(null);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module.getModule(null);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module.getModule(null);	  this.module    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
147	[BUG]  [BUGGY]  this.module  =  module.getModule( "module_test ");  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module.getModule( "module_test ");  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module.getModule( "module_test ");	  this.module    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
148	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
149	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
150	[BUG]  [BUGGY]  if(module.getModule()  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
151	[BUG]  [BUGGY]  if(this.module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
152	[BUG]  [BUGGY]  if(module.length()  ==  0)  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.length()  ==  0)  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.length()  ==  0)  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.substring(0,    module.length()    -    1))    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
153	[BUG]  [BUGGY]  for(JSModule  module  :  module.substring(0,  module.length()))  {  this.module$test  =  module.substring(0,  module.length());  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.substring(0,  module.length()))  {  this.module$test  =  module.substring(0,  module.length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.substring(0,  module.length()))  {  this.module$test  =  module.substring(0,  module.length());  }	  if(reportDependencies)    {    for(JSModule    module    :    module.substring(0,    module.length()    -    1))    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
154	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.substring(0,  module.length()))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.substring(0,  module.length()))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.substring(0,  module.length()))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.substring(0,    module.length()    -    1))    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
155	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.substring(0,    module.length()    -    1))    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
156	[BUG]  [BUGGY]  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.substring(0,    module.length()    -    1))    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
157	[BUG]  [BUGGY]  if(module.getModuleCount()  ==  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  ==  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  ==  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module.getModuleCount()    >    1)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
158	[BUG]  [BUGGY]  if(module.getModuleCount()  >=  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >=  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >=  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module.getModuleCount()    >    1)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
159	[BUG]  [BUGGY]  if(module.getModuleCount()!=  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()!=  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()!=  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module.getModuleCount()    >    1)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
160	[BUG]  [BUGGY]  if(module.getModuleCount()  >  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  if(module.getModuleCount()    >    1)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
161	[BUG]  [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
162	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
163	[BUG]  [BUGGY]  if(this.module!=  null)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
165	[BUG]  [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
166	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
167	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
168	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
169	[BUG]  [BUGGY]  var  a$$module$test=  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {	  var    modules$test=    {    }    ;var    a$$module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
170	[BUG]  [BUGGY]  var  a$$module$test=  ==  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  ==  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  ==	  var    modules$test=    {    }    ;var    a$$module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
171	[BUG]  [BUGGY]  ;var  a$$module$test=  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ;var  a$$module$test=  {  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	;var  a$$module$test=  {	  var    modules$test=    {    }    ;var    a$$module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
172	[BUG]  [BUGGY]  null  a$$module$test=  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  null  a$$module$test=  {  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	null  a$$module$test=  {	  var    modules$test=    {    }    ;var    a$$module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
173	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
174	[BUG]  [BUGGY]  if(module.getModule()  ==  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
175	[BUG]  [BUGGY]  if(this.module!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
176	[BUG]  [BUGGY]  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".js   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
177	[BUG]  [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".js   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
178	[BUG]  [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".js   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
179	[BUG]  [BUGGY]  ||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".js   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
180	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".js   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
181	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
183	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
184	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
186	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
187	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
188	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
189	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
190	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
191	[BUG]  [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(this.module$test    ==    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
192	[BUG]  [BUGGY]  if(module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(this.module$test    ==    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
193	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(this.module$test    ==    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
194	[BUG]  [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }	  if(this.module$test    ==    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
195	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
196	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
197	[BUG]  [BUGGY]  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
198	[BUG]  [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
199	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
200	[BUG]  [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
201	[BUG]  [BUGGY]  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
202	[BUG]  [BUGGY]  if(module.getModuleCount()  >  1)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  1)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  1)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module.getModuleCount()    >    0)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
203	[BUG]  [BUGGY]  if(module.getModuleCount()  ==  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  ==  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  ==  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module.getModuleCount()    >    0)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
204	[BUG]  [BUGGY]  if(module.getModuleCount()  ==  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  ==  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  ==  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(modul	  if(module.getModuleCount()    >    0)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
205	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module.getModuleCount()    >    0)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
206	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(modul	  if(module.getModuleCount()    >    0)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
207	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
208	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
209	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
210	[BUG]  [BUGGY]  if(!modules.contains(module))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
211	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
212	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
213	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
214	[BUG]  [BUGGY]  if(module.getModules()  >=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  >=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  >=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
215	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
216	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
217	[BUG]  [BUGGY]  ||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
218	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
219	[BUG]  [BUGGY]  if(this.reportDependencies!=  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
220	[BUG]  [BUGGY]  if(this.reportDependencies  ==  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies  ==  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies  ==  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
221	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
222	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
223	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  module.moduleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  module.moduleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  module.moduleCount();  ++i)  {  this.modules.add(module);  }	  for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.getCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.getCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.getCount();  ++i)  {  this.modules.add(module);  }	  for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
225	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.modules.length;  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.modules.length;  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.modules.length;  ++i)  {  this.modules.add(module);  }	  for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
226	[BUG]  [BUGGY]  if(reportDependencies)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
227	[BUG]  [BUGGY]  if(this.modules  ==  null)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules  ==  null)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules  ==  null)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
228	[BUG]  [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
229	[BUG]  [BUGGY]  if(module  <  null)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
230	[BUG]  [BUGGY]  if(module.isModule())  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
231	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
232	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(modul  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(modul	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
233	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
234	[BUG]  [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
235	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
236	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
237	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  if(this.module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  if(this.module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  if(this.module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(modul	  if(this.module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
238	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(this.module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
239	[BUG]  [BUGGY]  for(JSModule  module  :  this.module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.module.getModule())  {  this.module  =  module.getModule();  }	  for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
240	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules())  {  this.module  =  module.getModule();  }	  for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
241	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModule())  {  this.module  =  module.getModule();  }	  for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
242	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModule(0))  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModule(0))  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModule(0))  {  this.module  =  module.getModule();  }	  for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
243	[BUG]  [BUGGY]  ||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
244	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
245	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }	  if(module.isModule())    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
246	[BUG]  [BUGGY]  if(module.isModule()  ||  module.isModule())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule()  ||  module.isModule())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule()  ||  module.isModule())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(module.isModule())    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
247	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  modules.get(0))  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  modules.get(0))  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  modules.get(0))  {  this.module$test  =  module.getModules();  }	  if(module.isModule())    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
248	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  this.module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  this.module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  this.module.getModules())  {  this.module$test  =  module.getModules();  }	  if(module.isModule())    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
249	[BUG]  [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(module!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
250	[BUG]  [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(module!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
251	[BUG]  [BUGGY]  var  a$$module$test=  [Delete]  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  [Delete]  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  [Delete]	  var    module$test=    {    }    ;var    a$$module$test=    ==    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
252	[BUG]  [BUGGY]  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ;var  a$$module$test=  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	;var  a$$module$test=	  var    module$test=    {    }    ;var    a$$module$test=    ==    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
253	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length());  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length());  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
254	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
255	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
256	[BUG]  [BUGGY]  for(JSModule  module  :  this.module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
257	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
258	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules().iterator().next();  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules().iterator().next();	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
259	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
260	[BUG]  [BUGGY]  For(JSModule  module  :  module.getModules().iterator().next();  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  For(JSModule  module  :  module.getModules().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	For(JSModule  module  :  module.getModules().iterator().next();	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
261	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules().iterator().next();  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules().iterator().next();	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
262	[BUG]  [BUGGY]  if(this.reportDependencies  ==  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies  ==  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies  ==  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
263	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
264	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
265	[BUG]  [BUGGY]  if(module.getModule()  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
266	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
267	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
268	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
269	[BUG]  [BUGGY]  if(module.getModule()  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
270	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  this.module$test=1;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  this.module$test=1;  }	  var    module$test=    {    }    if(this.module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
271	[BUG]  [BUGGY]  a$$module$test=  {  }  ;var  module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  a$$module$test=  {  }  ;var  module$test=  {  }  ;var  a$$module$test=1  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	a$$module$test=  {  }  ;var  module$test=  {  }  ;var  a$$module$test=1	  var    module$test=    {    }    if(this.module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
272	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test=1  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test=1	  var    module$test=    {    }    if(this.module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
273	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=1  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=1	  var    module$test=    {    }    if(this.module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
274	[BUG]  [BUGGY]  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModule();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
275	[BUG]  [BUGGY]  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.module.getModules())  {  this.module  =  module.getModule();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
276	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules.get(0))  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules.get(0))  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules.get(0))  {  this.module  =  module.getModule();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
277	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules)  {  this.module  =  module.getModule();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
278	[BUG]  [BUGGY]  if(module$test  ==  null)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  this.module$test  =  module.getModules();  }	  this.module$test    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
279	[BUG]  [BUGGY]  this.module$test  =  compiler.getModules();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  compiler.getModules();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  compiler.getModules();	  this.module$test    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
280	[BUG]  [BUGGY]  this.module$test  =  module.getModule();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getModule();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getModule();	  this.module$test    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
281	[BUG]  [BUGGY]  this.module$test  =  module.getModuleSupplier();  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getModuleSupplier();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getModuleSupplier();	  this.module$test    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
282	[BUG]  [BUGGY]  if(module$test  ==  null)  {  this.module$test  =  module.getModules();  }  else  {  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  this.module$test  =  module.getModules();  }  else  {  goog.provide( "module$test ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  this.module$test  =  module.getModules();  }  else  {  goog.provide( "module$test ");  }	  this.module$test    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
283	[BUG]  [BUGGY]  this.module$test  =  module.getModuleStructure();  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getModuleStructure();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getModuleStructure();	  this.module$test    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
284	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules())  {  this.module  =  module;  }	  for(JSModule    module    :    module.modules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
285	[BUG]  [BUGGY]  for(JSModule  module  :  modules.modules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.modules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.modules())  {  this.module  =  module;  }	  for(JSModule    module    :    module.modules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
286	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules)  {  this.module  =  module;  }	  for(JSModule    module    :    module.modules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
287	[BUG]  [BUGGY]  for(JSModule  module  :  modules.values())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.values())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.values())  {  this.module  =  module;  }	  for(JSModule    module    :    module.modules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
288	[BUG]  [BUGGY]  for(JSModule  module  :  compiler.modules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  compiler.modules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  compiler.modules())  {  this.module  =  module;  }	  for(JSModule    module    :    module.modules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
289	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
290	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
291	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
292	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module,  reportDependencies);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
293	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
294	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
295	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  var  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
296	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  var  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
297	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
298	[BUG]  [BUGGY]  &&  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  module$test=  {  }  ;	  ||    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
299	[BUG]  [BUGGY]  ||  a$$module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  a$$module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  a$$module$test=  {  }  ;	  ||    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
300	[BUG]  [BUGGY]  if(module$test  ==  null)  {  ||  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  ||  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  ||  module$test=  {  }  ;  }	  ||    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
301	[BUG]  [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  module$test=  {  }  ;  }	  ||    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
302	[BUG]  [BUGGY]  if(module$test  ==  null)  {  ||  module$test=  {  }  ;  }  else  {  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  ||  module$test=  {  }  ;  }  else  {  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  ||  module$test=  {  }  ;  }  else  {  goog.provide( "module$test   ");var  module$test=  {  }  ;  }	  ||    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
303	[BUG]  [BUGGY]  ||  this.module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  this.module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  this.module$test=  {  }  ;	  ||    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
304	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
305	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
306	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
307	[BUG]  [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
308	[BUG]  [BUGGY]  if(module.length()  ==  0)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.length()  ==  0)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.length()  ==  0)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
309	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
310	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
311	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
312	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(module!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
313	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(module!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
314	[BUG]  [BUGGY]  if(module  <  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
315	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add	  if(module!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
316	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(	  if(module!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
317	[BUG]  [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  this.module)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(this.module!=    module)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
318	[BUG]  [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  this.module)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }	  if(this.module!=    module)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
319	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
320	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
321	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
322	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
323	[BUG]  [BUGGY]  &&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
324	[BUG]  [BUGGY]  if(modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
325	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
326	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
327	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
328	[BUG]  [BUGGY]  ;var  a$$module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ;var  a$$module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	;var  a$$module$test=  {  }	  var    modules$test=    {    }    ;var    a$$module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
329	[BUG]  [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  this.module)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }	  if(this.module!=    module)    {    for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
330	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  modules.getModule())  {  this.module  =  module.getModule();  }	  if(this.module!=    module)    {    for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
331	[BUG]  [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  modules.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  modules.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  this.module)  {  for(JSModule  module  :  modules.getModule())  {  this.module  =  module.getModule();  }	  if(this.module!=    module)    {    for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
332	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(modul    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
333	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }	  for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
334	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module$test);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module$test);  }	  for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
335	[BUG]  [BUGGY]  if(module.getModule()  ==  null  &&  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null  &&  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null  &&  module.getModule()!=  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    &&    module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
336	[BUG]  [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()  ==  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()  ==  null)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null  &&  module.getModule()  ==  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    &&    module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
337	[BUG]  [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()  >=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()  >=  null)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null  &&  module.getModule()  >=  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    &&    module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
338	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  if(this.modules!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  if(this.modules!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  if(this.modules!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
339	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
340	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
341	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
342	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
343	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
344	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
345	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
346	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules)  {  this.module  =  module.getModules();  }	  for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
347	[BUG]  [BUGGY]  for(JSModule  module  :  modules.keySet())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.keySet())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.keySet())  {  this.module  =  module.getModules();  }	  for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
348	[BUG]  [BUGGY]  for(JSModule  module  :  modules.values())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.values())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.values())  {  this.module  =  module.getModules();  }	  for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
349	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules())  {  this.module  =  module.getModules();  }	  for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
350	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
351	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(modul  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(modul	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
352	[BUG]  [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
353	[BUG]  [BUGGY]  if(this.modules!=  null)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
354	[BUG]  [BUGGY]  if(module.modules!=  null)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.modules!=  null)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.modules!=  null)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
355	[BUG]  [BUGGY]  if(!this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
356	[BUG]  [BUGGY]  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
357	[BUG]  [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next();  }	  if(this.module$test    ==    null)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
358	[BUG]  [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  modules.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  modules.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  for(JSModule  module  :  modules.getModules().iterator().next();  }	  if(this.module$test    ==    null)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
359	[BUG]  [BUGGY]  if(module$test!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
360	[BUG]  [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
361	[BUG]  [BUGGY]  if(module$test!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
362	[BUG]  [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
363	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
364	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
365	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
366	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
367	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
368	[BUG]  [BUGGY]  if(reportDependencies)  {  Var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  Var  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  Var  module$test=  {  }  ;	  Var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
369	[BUG]  [BUGGY]  if(module$test  ==  null)  {  Var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  Var  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  Var  module$test=  {  }  ;	  Var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
370	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  Var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  Var  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  Var  module$test=  {  }  ;	  Var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
371	[BUG]  [BUGGY]  if(module$test  ==  null)  {  Var  module$test=  {  }  ;  if(!module$test.endsWith( ".java "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  Var  module$test=  {  }  ;  if(!module$test.endsWith( ".java "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  Var  module$test=  {  }  ;  if(!module$test.endsWith( ".java "))  {  throw  new  IllegalArgumentException( " ");  }	  Var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
372	[BUG]  [BUGGY]  if(module$test!=  null)  {  Var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  Var  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  Var  module$test=  {  }  ;	  Var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
373	[BUG]  [BUGGY]  if(!module$test)  {  Var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module$test)  {  Var  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module$test)  {  Var  module$test=  {  }  ;	  Var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
374	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
375	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
376	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
377	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
378	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
379	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(module    ==    null)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
380	[BUG]  [BUGGY]  if(module  >=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  >=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  >=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(module    ==    null)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
381	[BUG]  [BUGGY]  if(module.getModule()  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
382	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
383	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
384	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
385	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
386	[BUG]  [BUGGY]  if(this.modules!=  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
387	[BUG]  [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
388	[BUG]  [BUGGY]  if(module  <  this.modules)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  this.modules)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  this.modules)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
389	[BUG]  [BUGGY]  if(this.modules!=  null)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module,  reportDependencies);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
390	[BUG]  [BUGGY]  if(modules!=  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
391	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator  +  filenamePrefix  +  File.separator  +  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator  +  filenamePrefix  +  File.separator  +  reportDependencies);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separator  +  filenamePrefix  +  File.separator  +  reportDependencies);	  ||    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
392	[BUG]  [BUGGY]  ||  module$test=  ==  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  module$test=  ==  }  ;var  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module$test=  ==  }  ;var  a$$module$test  =	  ||    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
393	[BUG]  [BUGGY]  var  a$$module$test.startsWith( "module$test ")&&  module$test.endsWith(File.separator)?  module$test  :  module$test;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.startsWith( "module$test ")&&  module$test.endsWith(File.separator)?  module$test  :  module$test;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.startsWith( "module$test ")&&  module$test.endsWith(File.separator)?  module$test  :  module$test;	  ||    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
394	[BUG]  [BUGGY]  var  a$$module$test.startsWith( "module$test ")&&  module$test.endsWith(File.separator);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.startsWith( "module$test ")&&  module$test.endsWith(File.separator);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.startsWith( "module$test ")&&  module$test.endsWith(File.separator);	  ||    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
395	[BUG]  [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }	  if(module!=    null)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
396	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  modules.modules)  {  this.module  =  module;  }	  if(module!=    null)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
397	[BUG]  [BUGGY]  ||  module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }	  if(module!=    null)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
398	[BUG]  [BUGGY]  this.reportDependencies  =  a$$module$test;  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.reportDependencies  =  a$$module$test;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.reportDependencies  =  a$$module$test;	  this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
399	[BUG]  [BUGGY]  this.reportDependencies  =  0;  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.reportDependencies  =  0;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.reportDependencies  =  0;	  this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
400	[BUG]  [BUGGY]  this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith(File.separator);  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith(File.separator);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith(File.separator);	  this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
401	[BUG]  [BUGGY]  this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;	  this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
402	[BUG]  [BUGGY]  this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix;	  this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
403	[BUG]  [BUGGY]  this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith( ".java ")?  filenamePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith( ".java ")?  filenamePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith( ".java ")?  filenamePrefix  :  filenamePrefix  +  File.separator;	  this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
404	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChild    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
405	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChild    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
406	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module  ==  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module  ==  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module  ==  null)  {  module.addChild	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChild    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
407	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules)  {  this.modules.add(module,  reportDependencies);  }	  for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
408	[BUG]  [BUGGY]  for(JSModule  module  :  modules.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.modules)  {  this.modules.add(module);  }	  for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
409	[BUG]  [BUGGY]  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
410	[BUG]  [BUGGY]  for(JSModule  module  :  compiler.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  compiler.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  compiler.modules)  {  this.modules.add(module);  }	  for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
411	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules)  {  this.modules.add(module$test);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules)  {  this.modules.add(module$test);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules)  {  this.modules.add(module$test);  }	  for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
412	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModules();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
413	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
414	[BUG]  [BUGGY]  if(module.getModules()  >=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  >=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  >=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
415	[BUG]  [BUGGY]  if(this.reportDependencies)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  throw  new  IllegalStateException( " ");  }	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
416	[BUG]  [BUGGY]  if(!reportDependencies)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!reportDependencies)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!reportDependencies)  {  throw  new  IllegalStateException( " ");  }	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
417	[BUG]  [BUGGY]  if(reportDependencies  ||  reportDependencies)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  ||  reportDependencies)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  ||  reportDependencies)  {  throw  new  IllegalStateException( " ");  }	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
418	[BUG]  [BUGGY]  if(reportDependencies)  {  throw  new  IllegalStateException( " ".equals(filenamePrefix));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  throw  new  IllegalStateException( " ".equals(filenamePrefix));  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  throw  new  IllegalStateException( " ".equals(filenamePrefix));  }	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
419	[BUG]  [BUGGY]  if(this.reportDependencies)  {  throw  new  IllegalStateException( " ".equals(filenamePrefix));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  throw  new  IllegalStateException( " ".equals(filenamePrefix));  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  throw  new  IllegalStateException( " ".equals(filenamePrefix));  }	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
420	[BUG]  [BUGGY]  if(reportDependencies  ||  reportDependencies)  {  throw  new  IllegalStateException( " ".equals(filenamePrefix));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  ||  reportDependencies)  {  throw  new  IllegalStateException( " ".equals(filenamePrefix));  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  ||  reportDependencies)  {  throw  new  IllegalStateException( " ".equals(filenamePrefix));  }	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
421	[BUG]  [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
422	[BUG]  [BUGGY]  if(this.modules!=  null)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
423	[BUG]  [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
424	[BUG]  [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
425	[BUG]  [BUGGY]  if(!modules.contains(filenamePrefix)&&  reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(filenamePrefix)&&  reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(filenamePrefix)&&  reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
426	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=1	  var    module$test=    {    }    if(reportDependencies)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
427	[BUG]  [BUGGY]  if(reportDependencies)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  this.module$test=1;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  this.module$test=1;  }	  var    module$test=    {    }    if(reportDependencies)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
428	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  if(reportDependencies)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  if(reportDependencies)  {  this.module$test=1;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  if(reportDependencies)  {  this.module$test=1;  }	  var    module$test=    {    }    if(reportDependencies)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
429	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test=1  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test=1	  var    module$test=    {    }    if(reportDependencies)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
430	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1,  reportDependencies)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1,  reportDependencies)  {  this.module$test=1;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=1,  reportDependencies)  {  this.module$test=1;  }	  var    module$test=    {    }    if(reportDependencies)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
431	[BUG]  [BUGGY]  if(module.getCompiler()  ==  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getCompiler()  ==  null)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getCompiler()  ==  null)  {  this.module  =  module.getModule();  }	  if(module.getCompiler()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
432	[BUG]  [BUGGY]  if(module.getCompiler()!=  null  ||  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getCompiler()!=  null  ||  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getCompiler()!=  null  ||  module.getModule()!=  null)  {  this.module  =  module.getModule();  }	  if(module.getCompiler()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
433	[BUG]  [BUGGY]  if(module.getCompiler()!=  null  &&  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getCompiler()!=  null  &&  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getCompiler()!=  null  &&  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }	  if(module.getCompiler()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
434	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
435	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
436	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
437	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  modules$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  modules$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  modules$test=  {  }  ;  }	  var    modules$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
438	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  modules$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  var  modules$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  var  modules$test=  {  }  ;  }	  var    modules$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
439	[BUG]  [BUGGY]  if(reportDependencies)  {  var  modules$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  var  modules$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  var  modules$test=  {  }  ;  }	  var    modules$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
440	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  modules$test=  {  }  ;  }  else  {  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  modules$test=  {  }  ;  }  else  {  goog.provide( "module$test ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  modules$test=  {  }  ;  }  else  {  goog.provide( "module$test ");  }	  var    modules$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
441	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  modules$test=  {  }  ;  }  else  {  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  var  modules$test=  {  }  ;  }  else  {  goog.provide( "module$test ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  var  modules$test=  {  }  ;  }  else  {  goog.provide( "module$test ");  }	  var    modules$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
442	[BUG]  [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".js   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
443	[BUG]  [BUGGY]  ||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".js   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
444	[BUG]  [BUGGY]  this.module$test  =  module.substring(0,  module$test.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.substring(0,  module$test.length()  -  1);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.substring(0,  module$test.length()  -  1);	  this.module$test    =    module.substring(0,    module.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
445	[BUG]  [BUGGY]  this.module$test  =  module.substring(0,  module.length());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.substring(0,  module.length());  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.substring(0,  module.length());	  this.module$test    =    module.substring(0,    module.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
446	[BUG]  [BUGGY]  this.module$test  =  module.substring(0,  module$test.length());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.substring(0,  module$test.length());  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.substring(0,  module$test.length());	  this.module$test    =    module.substring(0,    module.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
447	[BUG]  [BUGGY]  this.module$test  =  module.substring(0,  a$$module$test.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.substring(0,  a$$module$test.length()  -  1);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.substring(0,  a$$module$test.length()  -  1);	  this.module$test    =    module.substring(0,    module.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
448	[BUG]  [BUGGY]  this.module$test  =  module.substring(0,  modules.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.substring(0,  modules.length()  -  1);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.substring(0,  modules.length()  -  1);	  this.module$test    =    module.substring(0,    module.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
449	[BUG]  [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
450	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
451	[BUG]  [BUGGY]  if(this.reportDependencies  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
452	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
453	[BUG]  [BUGGY]  if(module.getType()  ==  Token.FUNCTION)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getType()  ==  Token.FUNCTION)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getType()  ==  Token.FUNCTION)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
454	[BUG]  [BUGGY]  if(module$test!=  this.module)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  this.module)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  this.module)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(this.module$test!=    module)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
455	[BUG]  [BUGGY]  if(module.getModules()!=  this.module$test)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  this.module$test)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  this.module$test)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(this.module$test!=    module)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
456	[BUG]  [BUGGY]  ||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
457	[BUG]  [BUGGY]  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
458	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
459	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
460	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
461	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
462	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(this.reportDependencies)    {    for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
463	[BUG]  [BUGGY]  var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;	  var    module$test=    {    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
464	[BUG]  [BUGGY]  var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith( ".java ")?  filenamePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith( ".java ")?  filenamePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith( ".java ")?  filenamePrefix  :  filenamePrefix  +  File.separator;	  var    module$test=    {    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
465	[BUG]  [BUGGY]  var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith( "/ ")?  filenamePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith( "/ ")?  filenamePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith( "/ ")?  filenamePrefix  :  filenamePrefix  +  File.separator;	  var    module$test=    {    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
466	[BUG]  [BUGGY]  var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith( ".java ")?  filenamePrefix  +  File.separator  +  reportDependencies  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith( ".java ")?  filenamePrefix  +  File.separator  +  reportDependencies  :  filenamePrefix  +  File.separator;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith( ".java ")?  filenamePrefix  +  File.separator  +  reportDependencies  :  filenamePrefix  +  File.separator;	  var    module$test=    {    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
467	[BUG]  [BUGGY]  var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  +  reportDependencies  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  +  reportDependencies  :  filenamePrefix  +  File.separator;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  +  reportDependencies  :  filenamePrefix  +  File.separator;	  var    module$test=    {    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
468	[BUG]  [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test    ==    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
469	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test    ==    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
470	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }	  var    module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
471	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  var  module$test=  {  }	  var    module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
472	[BUG]  [BUGGY]  if(!module$test)  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module$test)  {  var  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module$test)  {  var  module$test=  {  }	  var    module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
473	[BUG]  [BUGGY]  if(module$test  >=  null)  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  >=  null)  {  var  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  >=  null)  {  var  module$test=  {  }	  var    module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
474	[BUG]  [BUGGY]  a$$module$test=  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  a$$module$test=  {  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	a$$module$test=  {	  var    module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
475	[BUG]  [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }	  if(module!=    null)    {    for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
476	[BUG]  [BUGGY]  ||  module!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  module!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }	  if(module!=    null)    {    for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
477	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
478	[BUG]  [BUGGY]  a$$module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  a$$module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	a$$module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
479	[BUG]  [BUGGY]  this.module.addChildToFront(module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module.addChildToFront(module$test);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module.addChildToFront(module$test);	  this.module.addChildToFront(module);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
480	[BUG]  [BUGGY]  this.module.addChildToFront(compiler);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module.addChildToFront(compiler);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module.addChildToFront(compiler);	  this.module.addChildToFront(module);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
481	[BUG]  [BUGGY]  this.module.addChildToFront(this.module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module.addChildToFront(this.module$test);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module.addChildToFront(this.module$test);	  this.module.addChildToFront(module);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
482	[BUG]  [BUGGY]  this.module.addChildToFront(this.module);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module.addChildToFront(this.module);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module.addChildToFront(this.module);	  this.module.addChildToFront(module);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
483	[BUG]  [BUGGY]  module.addChildToFront(this.module);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  module.addChildToFront(this.module);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	module.addChildToFront(this.module);	  this.module.addChildToFront(module);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
484	[BUG]  [BUGGY]  this.module.addChildToFront(a$$module$test);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module.addChildToFront(a$$module$test);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module.addChildToFront(a$$module$test);	  this.module.addChildToFront(module);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
485	[BUG]  [BUGGY]  if(module.getModuleCount()  >  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
486	[BUG]  [BUGGY]  if(module.getModuleCount()!=  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()!=  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()!=  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
487	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
488	[BUG]  [BUGGY]  if(module.getModuleCount()  >  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
489	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module$test);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module$test);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module$test);  }	  for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
490	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(this.module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(this.module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(this.module);  }	  for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
491	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(this.module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(this.module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(this.module,  reportDependencies);  }	  for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
492	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
493	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
494	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
495	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
496	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
497	[BUG]  [BUGGY]  ||!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
498	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
499	[BUG]  [BUGGY]  if(!modules.containsKey(name))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(name))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(name))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
500	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
501	[BUG]  [BUGGY]  if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
502	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
503	[BUG]  [BUGGY]  if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
504	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
505	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
506	[BUG]  [BUGGY]  if(!reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
507	[BUG]  [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
508	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
509	[BUG]  [BUGGY]  for(JSModule  module  :  modules.keySet())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.keySet())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.keySet())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
510	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
511	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
512	[BUG]  [BUGGY]  if(this.module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
513	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
514	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies;  i++)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies;  i++)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies;  i++)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
515	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix;  i++)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix;  i++)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix;  i++)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
516	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildIntoFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildIntoFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildIntoFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
517	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module,  filenamePrefix);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module,  filenamePrefix);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module,  filenamePrefix);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
518	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
519	[BUG]  [BUGGY]  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules)  {  this.module  =  module;  }	  for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
520	[BUG]  [BUGGY]  for(JSModule  module  :  modules.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.modules)  {  this.module  =  module;  }	  for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
521	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module  =  module.module;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module  =  module.module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules)  {  this.module  =  module.module;  }	  for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
522	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToBack	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
523	[BUG]  [BUGGY]  if(!modules.containsKey(name))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(name))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(name))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
524	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
525	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
526	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
527	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
528	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToBack(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToBack(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToBack(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
529	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
530	[BUG]  [BUGGY]  if(module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
531	[BUG]  [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
532	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
533	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
534	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDe    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
535	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDe    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
536	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDe    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
537	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDe    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
538	[BUG]  [BUGGY]  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module,  reportDependencies);  }	  for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
539	[BUG]  [BUGGY]  for(JSModule  module  :  moduleDependencies.values())  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  moduleDependencies.values())  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  moduleDependencies.values())  {  this.modules.add(module);  }	  for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
540	[BUG]  [BUGGY]  for(JSModule  module  :  modules.values())  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.values())  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.values())  {  this.modules.add(module);  }	  for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
541	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
542	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
543	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
544	[BUG]  [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
545	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
546	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
547	[BUG]  [BUGGY]  For(JSModule  module  :  modules.getModules().iterator().next();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  For(JSModule  module  :  modules.getModules().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	For(JSModule  module  :  modules.getModules().iterator().next();	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
548	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules.getModules().iterator().next();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules.getModules().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules.getModules().iterator().next();	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
549	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules().entrySet().iterator().next();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules().entrySet().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules().entrySet().iterator().next();	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
550	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
551	[BUG]  [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
552	[BUG]  [BUGGY]  if(reportDependencies)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
553	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
554	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
555	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
556	[BUG]  [BUGGY]  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  4);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  4);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getName().substring(0,  module.getName().length()  -  4);	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    4);    }    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
557	[BUG]  [BUGGY]  this.module$test  =  module.getName().substring(0,  module.getName().length());  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getName().substring(0,  module.getName().length());  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getName().substring(0,  module.getName().length());	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    4);    }    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
558	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(!module.isModule())    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
559	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(!module.isModule())    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
560	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(!module.isModule())    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
561	[BUG]  [BUGGY]  if(module.getModule()  ==  null)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(!module.isModule())    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
562	[BUG]  [BUGGY]  if(module.isModule())  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(!module.isModule())    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
563	[BUG]  [BUGGY]  if(module.getModuleCount()  >  1)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  1)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  1)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(!module.isModule())    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
564	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
565	[BUG]  [BUGGY]  if(module.getType()  ==  Token.FUNCTION)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getType()  ==  Token.FUNCTION)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getType()  ==  Token.FUNCTION)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
566	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
567	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
568	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
569	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
570	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
571	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
572	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
573	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
574	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
575	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
576	[BUG]  [BUGGY]  null  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  null  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	null  a$$module$test  =	  var    modules$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
577	[BUG]  [BUGGY]  var  a$$module$test,  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test,  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test,	  var    modules$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
578	[BUG]  [BUGGY]  Var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Var  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Var  a$$module$test  =	  var    modules$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
579	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules())  {  this.module$test  =  module.getModules();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
580	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getDependencies();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getDependencies();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getDependencies();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
581	[BUG]  [BUGGY]  for(JSModule  module  :  modules.get(0))  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.get(0))  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.get(0))  {  this.module$test  =  module.getModules();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
582	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules.get(0))  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules.get(0))  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules.get(0))  {  this.module$test  =  module.getModules();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
583	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getParent();  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getParent();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getParent();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
584	[BUG]  [BUGGY]  if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
585	[BUG]  [BUGGY]  if(modules  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
586	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
587	[BUG]  [BUGGY]  if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
588	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
589	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
590	[BUG]  [BUGGY]  if(module.getModule()  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
591	[BUG]  [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
592	[BUG]  [BUGGY]  for(JSModule  module  :  modules.values())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.values())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.values())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
593	[BUG]  [BUGGY]  if(module  <  null)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
594	[BUG]  [BUGGY]  if(module.getModule()!=  null  ||  module.getModule().isSupported())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null  ||  module.getModule().isSupported())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null  ||  module.getModule().isSupported())  {  this.module  =  module.getModule();  }	  if(module.getModule()    ==    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
595	[BUG]  [BUGGY]  if(module.getModule()!=  null  ||  module.getModule().isInstance())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null  ||  module.getModule().isInstance())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null  ||  module.getModule().isInstance())  {  this.module  =  module.getModule();  }	  if(module.getModule()    ==    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
596	[BUG]  [BUGGY]  System.err.println( "Missing  module  name: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  System.err.println( "Missing  module  name: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	System.err.println( "Missing  module  name: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Missing    module    name:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
597	[BUG]  [BUGGY]  Error.println( "Missing  module  name: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Error.println( "Missing  module  name: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Error.println( "Missing  module  name: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Missing    module    name:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
598	[BUG]  [BUGGY]  Error( "Missing  module  name: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Error( "Missing  module  name: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Error( "Missing  module  name: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Missing    module    name:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
599	[BUG]  [BUGGY]  Context.err.println( "Missing  module  name: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Context.err.println( "Missing  module  name: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Context.err.println( "Missing  module  name: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Missing    module    name:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
600	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.add    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
601	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.add    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
602	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.add    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
603	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.add    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
604	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
605	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
606	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
607	[BUG]  [BUGGY]  var  a$$module$test=  {  System.arraycopy(filenamePrefix,  0,  this.reportDependencies,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  System.arraycopy(filenamePrefix,  0,  this.reportDependencies,  reportDependencies);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  System.arraycopy(filenamePrefix,  0,  this.reportDependencies,  reportDependencies);	  var    module$test=    ==    }    ;var    a$$module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
608	[BUG]  [BUGGY]  var  a$$module$test=  {  System.arraycopy(filenamePrefix,  0,  this.module$test,  0,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  System.arraycopy(filenamePrefix,  0,  this.module$test,  0,  reportDependencies);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  System.arraycopy(filenamePrefix,  0,  this.module$test,  0,  reportDependencies);	  var    module$test=    ==    }    ;var    a$$module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
609	[BUG]  [BUGGY]  var  a$$module$test=  {  System.arraycopy(filenamePrefix,  0,  this.reportDependencies,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  System.arraycopy(filenamePrefix,  0,  this.reportDependencies,  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  System.arraycopy(filenamePrefix,  0,  this.reportDependencies,  filenamePrefix);	  var    module$test=    ==    }    ;var    a$$module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
610	[BUG]  [BUGGY]  var  a$$module$test=  {  System.arraycopy(filenamePrefix,  filenamePrefix,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  System.arraycopy(filenamePrefix,  filenamePrefix,  reportDependencies);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  System.arraycopy(filenamePrefix,  filenamePrefix,  reportDependencies);	  var    module$test=    ==    }    ;var    a$$module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
611	[BUG]  [BUGGY]  var  a$$module$test=  {  }  else  if(filenamePrefix.endsWith( ".java "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  }  else  if(filenamePrefix.endsWith( ".java "))  {  var  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  }  else  if(filenamePrefix.endsWith( ".java "))  {  var  module$test=  {  }	  var    module$test=    ==    }    ;var    a$$module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
612	[BUG]  [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(this.reportDependencies    >    0)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
613	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(this.reportDependencies    >    0)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
614	[BUG]  [BUGGY]  if(this.reportDependencies!=  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(this.reportDependencies    >    0)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
615	[BUG]  [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(this.reportDependencies    >    0)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
616	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module$test  =  module.substring(0,  module.length());  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module$test  =  module.substring(0,  module.length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules())  {  this.module$test  =  module.substring(0,  module.length());  }	  for(JSModule    module    :    module.modules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
617	[BUG]  [BUGGY]  for(JSModule  module  :  modules.modules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.modules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.modules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  for(JSModule    module    :    module.modules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
618	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  for(JSModule    module    :    module.modules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
619	[BUG]  [BUGGY]  for(JSModule  module  :  modules.values())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.values())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.values())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  for(JSModule    module    :    module.modules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
620	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  for(JSModule    module    :    module.modules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
621	[BUG]  [BUGGY]  var  a$$module$test=  >=  }  ;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  >=  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  >=  }  ;	  var    module$test=    {    }    ;var    a$$module$test=    ==    }    ;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
622	[BUG]  [BUGGY]  var  a$$module$test=  >>  }  ;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  >>  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  >>  }  ;	  var    module$test=    {    }    ;var    a$$module$test=    ==    }    ;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
623	[BUG]  [BUGGY]  var  a$$module$test=!=  }  ;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=!=  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=!=  }  ;	  var    module$test=    {    }    ;var    a$$module$test=    ==    }    ;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
624	[BUG]  [BUGGY]  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModules();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
625	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules.get(0))  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules.get(0))  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules.get(0))  {  this.module  =  module.getModules();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
626	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module  =  module.modules();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module  =  module.modules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules())  {  this.module  =  module.modules();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
627	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getDependencies();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getDependencies();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module  =  module.getDependencies();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
628	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
629	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
630	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
631	[BUG]  [BUGGY]  if(!modules.contains(module))  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
632	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
633	[BUG]  [BUGGY]  if(module.getModule()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
634	[BUG]  [BUGGY]  if(this.module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
635	[BUG]  [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
636	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
637	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
638	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
639	[BUG]  [BUGGY]  if(moduleDependencies!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(moduleDependencies!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(moduleDependencies!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
640	[BUG]  [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
641	[BUG]  [BUGGY]  if(modules!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
642	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
643	[BUG]  [BUGGY]  if(moduleDependencies!=  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(moduleDependencies!=  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(moduleDependencies!=  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
644	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
645	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
646	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next()  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next()  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next()	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
647	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  this.module$test=1;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  this.module$test=1;  }	  var    module$test=    {    }    if(this.module$test    ==    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
648	[BUG]  [BUGGY]  if(module.getModuleCount()  ==  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  ==  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  ==  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
649	[BUG]  [BUGGY]  if(module.getModuleCount()!=  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()!=  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()!=  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
650	[BUG]  [BUGGY]  if(module.getModuleCount()  >=  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >=  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >=  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
651	[BUG]  [BUGGY]  if(module.getModuleCount()  >  2)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  2)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  2)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
652	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(module.isModule())    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
653	[BUG]  [BUGGY]  if(module.isModule()  ||  module.modules.contains(module))  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule()  ||  module.modules.contains(module))  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule()  ||  module.modules.contains(module))  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(module.isModule())    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
654	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  this.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  this.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  this.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(module.isModule())    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
655	[BUG]  [BUGGY]  if(module.isModule()  ||  module.modules!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule()  ||  module.modules!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule()  ||  module.modules!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(module.isModule())    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
656	[BUG]  [BUGGY]  if(this.reportDependencies  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
657	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
658	[BUG]  [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(this.module!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
659	[BUG]  [BUGGY]  if(module  ==  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(this.module!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
660	[BUG]  [BUGGY]  if(reportDependencies)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(this.module!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
661	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(this.module!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
662	[BUG]  [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }	  if(this.module!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
663	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(this.module!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
664	[BUG]  [BUGGY]  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    this.module$test    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
665	[BUG]  [BUGGY]  if(!reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    this.module$test    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
666	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  if(reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  if(reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  if(reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    this.module$test    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
667	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  if(reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  if(reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  if(reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    this.module$test    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
668	[BUG]  [BUGGY]  if(!module$test)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module$test)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module$test)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    this.module$test    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
669	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
670	[BUG]  [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
671	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
672	[BUG]  [BUGGY]  this.modules.add(module,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.modules.add(module,  reportDependencies);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.modules.add(module,  reportDependencies);	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
673	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
674	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
675	[BUG]  [BUGGY]  for(JSModule  module  :  this.moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.moduleDependencies)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.moduleDependencies)  {  this.module  =  module;  }	  for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
676	[BUG]  [BUGGY]  for(JSModule  module  :  moduleDependencies.values())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  moduleDependencies.values())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  moduleDependencies.values())  {  this.module  =  module;  }	  for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
677	[BUG]  [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
678	[BUG]  [BUGGY]  if(!moduleDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!moduleDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!moduleDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
679	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
680	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
681	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i  +  1);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i  +  1);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i  +  1);  if(module!=  null)  {  module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
682	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getDependencies().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getDependencies().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getDependencies().iterator().next();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
683	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getParent().getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getParent().getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getParent().getModules().iterator().next();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
684	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getBase().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getBase().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getBase().iterator().next();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
685	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
686	[BUG]  [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  this.module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(this.module!=    module)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
687	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModules();  }	  if(this.module!=    module)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
688	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules.get())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules.get())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  modules.get())  {  this.module  =  module.getModules();  }	  if(this.module!=    module)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
689	[BUG]  [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  this.module)  {  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModules();  }	  if(this.module!=    module)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
690	[BUG]  [BUGGY]  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	a$$module$test  =	  var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
691	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
692	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
693	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
694	[BUG]  [BUGGY]  this.module  =  compiler.getModule();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  compiler.getModule();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  compiler.getModule();	  this.module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
695	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  else  {  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  else  {  goog.provide( "module$test ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  else  {  goog.provide( "module$test ");  }	  this.module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
696	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  this.module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  this.module$test);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  this.module$test);  }	  this.module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
697	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
698	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
699	[BUG]  [BUGGY]  if(module!=  this.module$test)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  this.module$test)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  this.module$test)  {  for(JSModule  module  :  module.getModules().iterator().next();  }	  if(this.module$test!=    module)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
700	[BUG]  [BUGGY]  if(module$test!=  this.module)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  this.module)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  this.module)  {  for(JSModule  module  :  module.getModules().iterator().next();  }	  if(this.module$test!=    module)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
701	[BUG]  [BUGGY]  if(this.reportDependencies  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
702	[BUG]  [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
703	[BUG]  [BUGGY]  if(module  <  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
704	[BUG]  [BUGGY]  if(module  ==  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
705	[BUG]  [BUGGY]  if(!this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
706	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length());  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length());  }	  for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
707	[BUG]  [BUGGY]  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
708	[BUG]  [BUGGY]  for(JSModule  module  :  modules.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
709	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
710	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
711	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
712	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
713	[BUG]  [BUGGY]  if(module.getModule()!=  module.getModule())  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module.getModule())  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module.getModule())  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
714	[BUG]  [BUGGY]  if(module.getModule()!=  null  ||  module.getModule()  ==  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null  ||  module.getModule()  ==  null)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null  ||  module.getModule()  ==  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    ||    module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
715	[BUG]  [BUGGY]  var  a$$module$test=  {  reportDependencies  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  reportDependencies  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  reportDependencies	  var    module$test=    {    }    ;var    a$$module$test=    {    reportDependencies    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
716	[BUG]  [BUGGY]  var  a$$module$test=  ==  reportDependencies  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  ==  reportDependencies  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  ==  reportDependencies	  var    module$test=    {    }    ;var    a$$module$test=    {    reportDependencies    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
717	[BUG]  [BUGGY]  ;var  a$$module$test=  {  reportDependencies  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ;var  a$$module$test=  {  reportDependencies  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	;var  a$$module$test=  {  reportDependencies	  var    module$test=    {    }    ;var    a$$module$test=    {    reportDependencies    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
718	[BUG]  [BUGGY]  a$$module$test=  {  reportDependencies  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  a$$module$test=  {  reportDependencies  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	a$$module$test=  {  reportDependencies	  var    module$test=    {    }    ;var    a$$module$test=    {    reportDependencies    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
719	[BUG]  [BUGGY]  var  a$$module$test=1;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=1;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=1;	  var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
720	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  a$$module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  a$$module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  a$$module$test=  {  }  ;  }	  var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
721	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  a$$module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  var  a$$module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  var  a$$module$test=  {  }  ;  }	  var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
722	[BUG]  [BUGGY]  if(reportDependencies)  {  var  a$$module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  var  a$$module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  var  a$$module$test=  {  }  ;  }	  var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
723	[BUG]  [BUGGY]  var  a$$module$test=1  ==  }  ;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=1  ==  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=1  ==  }  ;	  var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
724	[BUG]  [BUGGY]  var  a$$module$test=1  {  }  ;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=1  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=1  {  }  ;	  var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
725	[BUG]  [BUGGY]  if(module.getModule()  ==  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    else    {    System.arraycopy(module,    0,    this.module,    0,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
726	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(this.module,  0,  this.module,  0,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(this.module,  0,  this.module,  0,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(this.module,  0,  this.module,  0,  reportDependencies);  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    else    {    System.arraycopy(module,    0,    this.module,    0,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
727	[BUG]  [BUGGY]  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	System.arraycopy(module,  0,  this.module,  0,  reportDependencies);	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    else    {    System.arraycopy(module,    0,    this.module,    0,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
728	[BUG]  [BUGGY]  if(module.getModule()  ==  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(this.module,  0,  this.module,  0,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(this.module,  0,  this.module,  0,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(this.module,  0,  this.module,  0,  reportDependencies);  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    else    {    System.arraycopy(module,    0,    this.module,    0,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
729	[BUG]  [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
730	[BUG]  [BUGGY]  this.module.addChildToFront(module,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module.addChildToFront(module,  reportDependencies);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module.addChildToFront(module,  reportDependencies);	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
731	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
732	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
733	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies;  i++)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies;  i++)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies;  i++)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
734	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
735	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix;  i++)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix;  i++)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix;  i++)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
736	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module,  filenamePrefix);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module,  filenamePrefix);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module,  filenamePrefix);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
737	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
738	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
739	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
740	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
741	[BUG]  [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
742	[BUG]  [BUGGY]  ||  reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
743	[BUG]  [BUGGY]  if(this.modules  ==  null)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules  ==  null)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules  ==  null)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
744	[BUG]  [BUGGY]  Module  module  =  compiler.getModule();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  compiler.getModule();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  compiler.getModule();	  Module    module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
745	[BUG]  [BUGGY]  Module  module  =  this.module.getModule();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  this.module.getModule();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  this.module.getModule();	  Module    module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
746	[BUG]  [BUGGY]  Module  module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX);	  Module    module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
747	[BUG]  [BUGGY]  Module  module  =  compiler.getModule(module);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  compiler.getModule(module);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  compiler.getModule(module);	  Module    module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
748	[BUG]  [BUGGY]  Module  module  =  compiler.getModule( "module$test ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  compiler.getModule( "module$test ");  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  compiler.getModule( "module$test ");	  Module    module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
749	[BUG]  [BUGGY]  Module  module  =  compiler.getModule(FLUSH_MODULE_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  compiler.getModule(FLUSH_MODULE_SEPARATOR);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  compiler.getModule(FLUSH_MODULE_SEPARATOR);	  Module    module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
750	[BUG]  [BUGGY]  this.modules.add(module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.modules.add(module$test);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.modules.add(module$test);	  this.modules.add(module);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
751	[BUG]  [BUGGY]  this.modules.add(compiler);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.modules.add(compiler);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.modules.add(compiler);	  this.modules.add(module);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
752	[BUG]  [BUGGY]  this.modules.add(a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.modules.add(a$$module$test);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.modules.add(a$$module$test);	  this.modules.add(module);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
753	[BUG]  [BUGGY]  this.modules.add(module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.modules.add(module,  a$$module$test);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.modules.add(module,  a$$module$test);	  this.modules.add(module);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
754	[BUG]  [BUGGY]  this.modules.add(module,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.modules.add(module,  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.modules.add(module,  filenamePrefix);	  this.modules.add(module);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
755	[BUG]  [BUGGY]  this.module  =  module$test;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module$test;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module$test;	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
756	[BUG]  [BUGGY]  this.module  =  a$$module$test;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  a$$module$test;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  a$$module$test;	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
757	[BUG]  [BUGGY]  this.module  =  module  &&  module.getModuleName().endsWith( "module$test ")?  module  :  DEFAULT_FILENAME_PREFIX;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module  &&  module.getModuleName().endsWith( "module$test ")?  module  :  DEFAULT_FILENAME_PREFIX;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module  &&  module.getModuleName().endsWith( "module$test ")?  module  :  DEFAULT_FILENAME_PREFIX;	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
758	[BUG]  [BUGGY]  this.module  =  module  &&  module.getModuleName().endsWith( "module$test ")?  module  :  DEFAULT_FILENAME_PREFIX  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module  &&  module.getModuleName().endsWith( "module$test ")?  module  :  DEFAULT_FILENAME_PREFIX  +  File.separator;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module  &&  module.getModuleName().endsWith( "module$test ")?  module  :  DEFAULT_FILENAME_PREFIX  +  File.separator;	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
759	[BUG]  [BUGGY]  this.module  =  module  &&  module.getModuleName().endsWith( "module$test ")||  module.getModuleName().endsWith( "module$test "))?  module  :  module;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module  &&  module.getModuleName().endsWith( "module$test ")||  module.getModuleName().endsWith( "module$test "))?  module  :  module;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module  &&  module.getModuleName().endsWith( "module$test ")||  module.getModuleName().endsWith( "module$test "))?  module  :  module;	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
760	[BUG]  [BUGGY]  this.module  =  module  &&  module.getModuleName().endsWith( "module$test ")||  module.getModuleName().endsWith( "module$test "));  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module  &&  module.getModuleName().endsWith( "module$test ")||  module.getModuleName().endsWith( "module$test "));  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module  &&  module.getModuleName().endsWith( "module$test ")||  module.getModuleName().endsWith( "module$test "));	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
761	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChild    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
762	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module  ==  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module  ==  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module  ==  null)  {  module.addChild	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChild    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
763	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(modul  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(modul    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
764	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.module.getName();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.module.getName();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.module.getName();  ++i)  {  this.module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
765	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
766	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.module.getNameCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.module.getNameCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.module.getNameCount();  ++i)  {  this.module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
767	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
768	[BUG]  [BUGGY]  if(module.hasModules())  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.hasModules())  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.hasModules())  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
769	[BUG]  [BUGGY]  if(this.module!=  null)  {  reportDependencies  =  false;  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  reportDependencies  =  false;  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  reportDependencies  =  false;  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
770	[BUG]  [BUGGY]  if(this.module!=  null)  {  reportDependencies  =  true;  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  reportDependencies  =  true;  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  reportDependencies  =  true;  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
771	[BUG]  [BUGGY]  Reporterr.println( "Failed  to  add  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Reporterr.println( "Failed  to  add  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Reporterr.println( "Failed  to  add  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
772	[BUG]  [BUGGY]  if(!reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
773	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildIntoFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildIntoFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildIntoFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
774	[BUG]  [BUGGY]  if(module  <  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
775	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
776	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
777	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules.getModules())  {  this.module  =  module.getModules();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
778	[BUG]  [BUGGY]  for(JSModule  module  :  compiler.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  compiler.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  compiler.getModules())  {  this.module  =  module.getModules();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
779	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  report  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  report  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  report	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
780	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
781	[BUG]  [BUGGY]  &&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
782	[BUG]  [BUGGY]  if(!modules.containsKey(module))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(module))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(module))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
783	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  modules.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  modules.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  this.module  =  modules.getModule();  }	  if(module.getModule()    ==    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
784	[BUG]  [BUGGY]  if(modules  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
785	[BUG]  [BUGGY]  if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
786	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.add    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
787	[BUG]  [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.add    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
788	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.add    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
789	[BUG]  [BUGGY]  for(JSModule  module  :  modules.iterator().next();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.iterator().next();	  if(this.module$test    ==    null)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
790	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next();  }	  if(this.module$test    ==    null)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
791	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
792	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
793	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModule();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
794	[BUG]  [BUGGY]  for(JSModule  module  :  compiler.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  compiler.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  compiler.getModules())  {  this.module  =  module.getModule();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
795	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix.size();  ++i)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix.size();  ++i)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix.size();  ++i)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
796	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
797	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
798	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
799	[BUG]  [BUGGY]  if(!module.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  reportDependencies  =  false;  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  reportDependencies  =  false;  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  reportDependencies  =  false;  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
800	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies;  i++)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies;  i++)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies;  i++)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
801	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  this.modules.add(module);  }	  for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
802	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  module.getLength();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  module.getLength();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  module.getLength();  ++i)  {  this.modules.add(module);  }	  for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
803	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
804	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
805	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
806	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
807	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.put(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.put(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.put(module,  reportDependencies);  }	  if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
808	[BUG]  [BUGGY]  ;var  a$$module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ;var  a$$module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	;var  a$$module$test=  {  }  ;	  var    module$test=    {    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
809	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
810	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  compiler.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.module  =  compiler.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  compiler.getModule();  }	  if(module!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
811	[BUG]  [BUGGY]  if(module$test  ==  null)  {  Var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  Var  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  Var  module$test=  {  }  ;  }	  Var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
812	[BUG]  [BUGGY]  if(reportDependencies)  {  Var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  Var  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  Var  module$test=  {  }  ;  }	  Var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
813	[BUG]  [BUGGY]  this.module$test  =  module.substring(0,  module.length())+  1;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.substring(0,  module.length())+  1;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.substring(0,  module.length())+  1;	  this.module$test    =    module.substring(0,    module.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
814	[BUG]  [BUGGY]  this.module$test  =  module.substring(0,  module.length()));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.substring(0,  module.length()));  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.substring(0,  module.length()));	  this.module$test    =    module.substring(0,    module.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
815	[BUG]  [BUGGY]  this.module$test  =  modules.substring(0,  module.length());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  modules.substring(0,  module.length());  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  modules.substring(0,  module.length());	  this.module$test    =    module.substring(0,    module.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
816	[BUG]  [BUGGY]  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
817	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
818	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
819	[BUG]  [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module.getModuleCount()    >    0)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
820	[BUG]  [BUGGY]  if(module!=  null)  {  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module.getModuleCount()    >    0)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
821	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }	  if(this.module!=    module)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
822	[BUG]  [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  this.module)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  this.module)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }	  if(this.module!=    module)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
823	[BUG]  [BUGGY]  if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
824	[BUG]  [BUGGY]  this.module  =  module.getCompiler();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module.getCompiler();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module.getCompiler();	  this.module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
825	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  module.getModule();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.module  =  module.getModule();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  module.getModule();  }  else  {  throw  new  IllegalStateException( " ");  }	  this.module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
826	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module$test,  0,  module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module$test,  0,  module$test);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module$test,  0,  module$test);  }	  this.module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
827	[BUG]  [BUGGY]  this.module  =  module.getModule(JSC_DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module.getModule(JSC_DEFAULT_FILENAME_PREFIX);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module.getModule(JSC_DEFAULT_FILENAME_PREFIX);	  this.module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
828	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
829	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
830	[BUG]  [BUGGY]  var  module$test=  {  }  if(module$test  ==  null)  {  this.module$test=0;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  if(module$test  ==  null)  {  this.module$test=0;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  if(module$test  ==  null)  {  this.module$test=0;  }	  var    module$test=    {    }    if(module$test    ==    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
831	[BUG]  [BUGGY]  if(module$test  ==  null)  {  this.module$test=0;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  this.module$test=0;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  this.module$test=0;  }	  var    module$test=    {    }    if(module$test    ==    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
832	[BUG]  [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
833	[BUG]  [BUGGY]  if(module!=  this.module$test)  {  for(JSModule  module  :  modules.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  this.module$test)  {  for(JSModule  module  :  modules.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  this.module$test)  {  for(JSModule  module  :  modules.getModules().iterator().next();  }	  if(this.module$test!=    module)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
834	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules().entrySet().iterator().next();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules().entrySet().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules().entrySet().iterator().next();	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
835	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
836	[BUG]  [BUGGY]  if(modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
837	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test  =  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test  =  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test  =  }	  ;var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
838	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test  =	  ;var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
839	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
840	[BUG]  [BUGGY]  if(module  ==  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }	  if(this.module!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
841	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
842	[BUG]  [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
843	[BUG]  [BUGGY]  if(modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
844	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
845	[BUG]  [BUGGY]  if(this.modules!=  null)  {  reportDependencies  =  false;  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  reportDependencies  =  false;  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  reportDependencies  =  false;  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
846	[BUG]  [BUGGY]  if(!modules.contains(filenamePrefix))  {  reportDependencies  =  false;  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(filenamePrefix))  {  reportDependencies  =  false;  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(filenamePrefix))  {  reportDependencies  =  false;  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
847	[BUG]  [BUGGY]  if(this.modules!=  null)  {  reportDependencies  =  true;  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  reportDependencies  =  true;  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  reportDependencies  =  true;  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
848	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
849	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
850	[BUG]  [BUGGY]  if(module.getName()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
851	[BUG]  [BUGGY]  if(!modules.containsKey(module))  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(module))  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(module))  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
852	[BUG]  [BUGGY]  for(JSModule  module  :  moduleDependencies)  {  this.module  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  moduleDependencies)  {  this.module  =  compiler;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  moduleDependencies)  {  this.module  =  compiler;  }	  for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
853	[BUG]  [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  module$test=  {  }	  var    module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
854	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
855	[BUG]  [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
856	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.put(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.put(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.put(module,  reportDependencies);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
857	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator  +  filenamePrefix  +  File.separator);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator  +  filenamePrefix  +  File.separator);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separator  +  filenamePrefix  +  File.separator);	  ||    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
858	[BUG]  [BUGGY]  var  a$$module$test.startsWith( "/ ")||  module$test=  {  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.startsWith( "/ ")||  module$test=  {  }  ;var  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.startsWith( "/ ")||  module$test=  {  }  ;var  a$$module$test  =	  ||    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
859	[BUG]  [BUGGY]  var  a$$module$test.startsWith( "/ ")||  module$test=  ==  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.startsWith( "/ ")||  module$test=  ==  }  ;var  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.startsWith( "/ ")||  module$test=  ==  }  ;var  a$$module$test  =	  ||    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
860	[BUG]  [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
861	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
862	[BUG]  [BUGGY]  Reporterr.println( "Failed  to  parse  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Reporterr.println( "Failed  to  parse  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Reporterr.println( "Failed  to  parse  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    parse    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
863	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse  module: "  +  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  System.err.println( "Failed  to  parse  module: "  +  reportDependencies);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	System.err.println( "Failed  to  parse  module: "  +  reportDependencies);	  if(reportDependencies)    {    System.err.println(   "Failed    to    parse    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
864	[BUG]  [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }	  if(module!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
865	[BUG]  [BUGGY]  this.module.addChildToBack(module);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module.addChildToBack(module);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module.addChildToBack(module);	  this.module.addChildToFront(module);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
866	[BUG]  [BUGGY]  this.module.addChildToFront(module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module.addChildToFront(module,  a$$module$test);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module.addChildToFront(module,  a$$module$test);	  this.module.addChildToFront(module);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
867	[BUG]  [BUGGY]  &&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
868	[BUG]  [BUGGY]  &&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
869	[BUG]  [BUGGY]  &&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
870	[BUG]  [BUGGY]  for(JSModule  module  :  modules.keySet())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.keySet())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.keySet())  {  this.module$test  =  module.getModules().iterator().next();  }	  for(JSModule    module    :    modules.iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
871	[BUG]  [BUGGY]  for(JSModule  module  :  modules.entrySet().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.entrySet().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.entrySet().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  for(JSModule    module    :    modules.iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
872	[BUG]  [BUGGY]  if(modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDe    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
873	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  report  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  report  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  report	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDe    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
874	[BUG]  [BUGGY]  if(module$test  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
875	[BUG]  [BUGGY]  if(modules!=  null)  {  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(this.reportDependencies    >    0)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
876	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(this.reportDependencies    >    0)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
877	[BUG]  [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".java ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".js   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
878	[BUG]  [BUGGY]  if(this.reportDependencies!=  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
879	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules.getModules())  {  this.module$test  =  module.getModules();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
880	[BUG]  [BUGGY]  for(JSModule  module  :  compiler.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  compiler.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  compiler.getModules())  {  this.module$test  =  module.getModules();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
881	[BUG]  [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
882	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
883	[BUG]  [BUGGY]  if(!module.isEmpty())  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module.isEmpty())  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module.isEmpty())  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.substring(0,    module.length()    -    1))    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
884	[BUG]  [BUGGY]  if(!moduleDependencies)  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!moduleDependencies)  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!moduleDependencies)  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.substring(0,    module.length()    -    1))    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
885	[BUG]  [BUGGY]  for(JSModule  module  :  modules.keySet())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.keySet())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.keySet())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
886	[BUG]  [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
887	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.values())  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.values())  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.values())  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
888	[BUG]  [BUGGY]  if(module!=  null  &&  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null  &&  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null  &&  module.getModule()!=  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    &&    module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
889	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(modul    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
890	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules().values().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules().values().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.getModules().values().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
891	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
892	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules().values().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules().values().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.getModules().values().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
893	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules().entrySet())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules().entrySet())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.getModules().entrySet())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
894	[BUG]  [BUGGY]  &&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(modul    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
895	[BUG]  [BUGGY]  &&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(modul    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
896	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {	  var    module$test=    {    }    if(this.module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
897	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {	  var    module$test=    {    }    if(this.module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
898	[BUG]  [BUGGY]  if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
899	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  >  0)  {  var  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  >  0)  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
900	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
901	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$	  var    module$test=    {    }    if(module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
902	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    else    {    System.arraycopy(module,    0,    this.module,    0,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
903	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    else    {    System.arraycopy(module,    0,    this.module,    0,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
904	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
905	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
906	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
907	[BUG]  [BUGGY]  if(module.getModuleCount()  ==  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  ==  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  ==  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
908	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
909	[BUG]  [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
910	[BUG]  [BUGGY]  if(module.getCompiler()!=  null)  {  this.module  =  compiler.getModule();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getCompiler()!=  null)  {  this.module  =  compiler.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getCompiler()!=  null)  {  this.module  =  compiler.getModule();  }	  if(module.getCompiler()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
911	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  compiler.getModule();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  compiler.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  this.module  =  compiler.getModule();  }	  if(module.getCompiler()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
912	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
913	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
914	[BUG]  [BUGGY]  for(JSModule  module  :  compiler.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  compiler.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  compiler.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
915	[BUG]  [BUGGY]  Module  module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_PREFIX);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_PREFIX);	  Module    module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
916	[BUG]  [BUGGY]  Module  module  =  compiler.getModule(FLUSH_DEPRECATED_MODULE);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  compiler.getModule(FLUSH_DEPRECATED_MODULE);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  compiler.getModule(FLUSH_DEPRECATED_MODULE);	  Module    module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
917	[BUG]  [BUGGY]  Module  module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX).getModule();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX).getModule();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX).getModule();	  Module    module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
918	[BUG]  [BUGGY]  ||  module$test=  ==  }  ;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  module$test=  ==  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module$test=  ==  }  ;	  ||    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
919	[BUG]  [BUGGY]  &&  module$test=  ==  }  ;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  module$test=  ==  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  module$test=  ==  }  ;	  ||    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
920	[BUG]  [BUGGY]  if(module.getName().endsWith( ".java ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".java ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".java ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
921	[BUG]  [BUGGY]  if(module.getName().startsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().startsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().startsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
922	[BUG]  [BUGGY]  (var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  (var  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	(var  a$$module$test  =	  var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
923	[BUG]  [BUGGY]  if(module  ==  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
924	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules.getModules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules.getModules())  {  this.module  =  module;  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
925	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules())  {  this.module  =  module;  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
926	[BUG]  [BUGGY]  for(JSModule  module  :  modules.get())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.get())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.get())  {  this.module  =  module;  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
927	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
928	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
929	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
930	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
931	[BUG]  [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
932	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
933	[BUG]  [BUGGY]  if(!moduleDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!moduleDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!moduleDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    this.module$test    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
934	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    this.module$test    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
935	[BUG]  [BUGGY]  if(module.getModuleType()  ==  module.getModuleType())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleType()  ==  module.getModuleType())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleType()  ==  module.getModuleType())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module.getModuleCount()    >    1)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
936	[BUG]  [BUGGY]  this.module  =  module.getModule( "module ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module.getModule( "module ");  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module.getModule( "module ");	  this.module    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
937	[BUG]  [BUGGY]  if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module,    filenamePrefix,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
938	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module,    filenamePrefix,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
939	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module,    filenamePrefix,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
940	[BUG]  [BUGGY]  Reporterr.println( "Missing  module  name: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Reporterr.println( "Missing  module  name: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Reporterr.println( "Missing  module  name: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Missing    module    name:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
941	[BUG]  [BUGGY]  if(!module.isEmpty())  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module.isEmpty())  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module.isEmpty())  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
942	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
943	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
944	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  this.module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
945	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
946	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
947	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.keySet())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.keySet())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.keySet())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
948	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.values())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.values())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.values())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
949	[BUG]  [BUGGY]  this.module  =  module?  MODULE_NAME_SEPARATOR  :  DEFAULT_FILENAME_PREFIX;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module?  MODULE_NAME_SEPARATOR  :  DEFAULT_FILENAME_PREFIX;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module?  MODULE_NAME_SEPARATOR  :  DEFAULT_FILENAME_PREFIX;	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
950	[BUG]  [BUGGY]  this.module  =  module?  DEFAULT_FILENAME_PREFIX  :  DEFAULT_FILENAME_PREFIX;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module?  DEFAULT_FILENAME_PREFIX  :  DEFAULT_FILENAME_PREFIX;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module?  DEFAULT_FILENAME_PREFIX  :  DEFAULT_FILENAME_PREFIX;	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
951	[BUG]  [BUGGY]  this.module  =  module?  DEFAULT_FILENAME_PREFIX  :  module;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module?  DEFAULT_FILENAME_PREFIX  :  module;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module?  DEFAULT_FILENAME_PREFIX  :  module;	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
952	[BUG]  [BUGGY]  this.module  =  module?  EXPORTS  :  DEFAULT_FILENAME_PREFIX;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module?  EXPORTS  :  DEFAULT_FILENAME_PREFIX;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module?  EXPORTS  :  DEFAULT_FILENAME_PREFIX;	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
953	[BUG]  [BUGGY]  this.module  =  module?  MODULE_NAME_SEPARATOR  :  module;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module?  MODULE_NAME_SEPARATOR  :  module;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module?  MODULE_NAME_SEPARATOR  :  module;	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
954	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
955	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
956	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")&&  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js ")&&  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")&&  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".js   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
957	[BUG]  [BUGGY]  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".js   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
958	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
959	[BUG]  [BUGGY]  &&  this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
960	[BUG]  [BUGGY]  &&  this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
961	[BUG]  [BUGGY]  if(!module$test)  {  var  a$$module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module$test)  {  var  a$$module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module$test)  {  var  a$$module$test=  {  }  ;	  var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
962	[BUG]  [BUGGY]  if(module$test  >=  null)  {  var  a$$module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  >=  null)  {  var  a$$module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  >=  null)  {  var  a$$module$test=  {  }  ;  }	  var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
963	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  a$$module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  a$$module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  a$$module$test=  {  }  ;	  var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
964	[BUG]  [BUGGY]  null  var  modules$test=  {  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  null  var  modules$test=  {  }  ;var  a$$module$test  =  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	null  var  modules$test=  {  }  ;var  a$$module$test  =	  var    modules$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
965	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator  +  filenamePrefix  +  File.separator  +  filenamePrefix  +  File.separator);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator  +  filenamePrefix  +  File.separator  +  filenamePrefix  +  File.separator);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separator  +  filenamePrefix  +  File.separator  +  filenamePrefix  +  File.separator);	  var    modules$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
966	[BUG]  [BUGGY]  if(this.reportDependencies!=  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
967	[BUG]  [BUGGY]  if(this.reportDependencies!=  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  false)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
968	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
969	[BUG]  [BUGGY]  if(modules!=  null)  {!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
970	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
971	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
972	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
973	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.get())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.get())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.get())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
974	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules().values().iterator().next();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules().values().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules().values().iterator().next();	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
975	[BUG]  [BUGGY]  MutableFormat.println( "Failed  to  report  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  MutableFormat.println( "Failed  to  report  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	MutableFormat.println( "Failed  to  report  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    report    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
976	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
977	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
978	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
979	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.get(0))  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
980	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  this.module.getModules())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
981	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
982	[BUG]  [BUGGY]  if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
983	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
984	[BUG]  [BUGGY]  &&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
985	[BUG]  [BUGGY]  &&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
986	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies;  i++)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies;  i++)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies;  i++)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
987	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  this.reportDependencies;  i++)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  this.reportDependencies;  i++)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  this.reportDependencies;  i++)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
988	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
989	[BUG]  [BUGGY]  if(reportDependencies)  {  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
990	[BUG]  [BUGGY]  if(module.getName()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
991	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  this.module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
992	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.getCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.getCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.getCount();  ++i)  {  this.module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
993	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.getModule())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
994	[BUG]  [BUGGY]  if(module!=  null  &&  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null  &&  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null  &&  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    &&    module.getModule()    instanceof    Module)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
995	[BUG]  [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()  instanceof  Class  <?>)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()  instanceof  Class  <?>)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null  &&  module.getModule()  instanceof  Class  <?>)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    &&    module.getModule()    instanceof    Module)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
996	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
997	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
998	[BUG]  [BUGGY]  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
999	[BUG]  [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1000	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(filenamePrefix!=  null)  {  var  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(filenamePrefix!=  null)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1001	[BUG]  [BUGGY]  if(!module$test)  {  var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module$test)  {  var  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module$test)  {  var  module$test=  {  }  ;	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1002	[BUG]  [BUGGY]  if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChild    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1003	[BUG]  [BUGGY]  this.module$test  =  module.getModules(false);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getModules(false);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getModules(false);	  this.module$test    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1004	[BUG]  [BUGGY]  this.module$test  =  module.getModuleSupported();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getModuleSupported();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getModuleSupported();	  this.module$test    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1005	[BUG]  [BUGGY]  this.module$test  =  module.getModule(module);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getModule(module);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getModule(module);	  this.module$test    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1006	[BUG]  [BUGGY]  for(JSModule  module  :  compiler.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  compiler.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  compiler.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1007	[BUG]  [BUGGY]  if(!modules.contains(module))  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1008	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1009	[BUG]  [BUGGY]  if(!modules.contains(module))  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(module))  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(module))  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1010	[BUG]  [BUGGY]  if(module  <  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1011	[BUG]  [BUGGY]  &&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1012	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1013	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDepen  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDepen  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDepen	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1014	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1015	[BUG]  [BUGGY]  if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1016	[BUG]  [BUGGY]  if(!moduleDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!moduleDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!moduleDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1017	[BUG]  [BUGGY]  for(JSModule  module  :  modules)  {  this.module  =  compiler.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules)  {  this.module  =  compiler.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules)  {  this.module  =  compiler.getModules();  }	  for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
1018	[BUG]  [BUGGY]  if(module!=  null)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(!module.isModule())    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1019	[BUG]  [BUGGY]  if(module!=  null)  {!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(!module.isModule())    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1020	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(!module.isModule())    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1021	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(!module.isModule())    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1022	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDepen  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDepen  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDepen	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1023	[BUG]  [BUGGY]  if(reportDependencies!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1024	[BUG]  [BUGGY]  &&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1025	[BUG]  [BUGGY]  &&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1026	[BUG]  [BUGGY]  &&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1027	[BUG]  [BUGGY]  &&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1028	[BUG]  [BUGGY]  this.reportDependencies  =  reportDependencies  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.reportDependencies  =  reportDependencies  +  File.separator;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.reportDependencies  =  reportDependencies  +  File.separator;	  this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1029	[BUG]  [BUGGY]  this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith( ".js ");  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith( ".js ");  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith( ".js ");	  this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1030	[BUG]  [BUGGY]  this.reportDependencies  =  reportDependencies  &&  module.dependsOn(filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.reportDependencies  =  reportDependencies  &&  module.dependsOn(filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.reportDependencies  =  reportDependencies  &&  module.dependsOn(filenamePrefix);	  this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1031	[BUG]  [BUGGY]  this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith( ".java ")?  filenamePrefix  :  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith( ".java ")?  filenamePrefix  :  filenamePrefix;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.reportDependencies  =  reportDependencies  &&  filenamePrefix.endsWith( ".java ")?  filenamePrefix  :  filenamePrefix;	  this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1032	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1033	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  filenamePrefix);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  filenamePrefix);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  filenamePrefix);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1034	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  ==  }  ;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  ==  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  module$test=  ==  }  ;  }	  var    module$test=    ==    }    ;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1035	[BUG]  [BUGGY]  allowSuppressWarnings( "reportDependencies ")  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  allowSuppressWarnings( "reportDependencies ")  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	allowSuppressWarnings( "reportDependencies ")  {  throw  new  IllegalStateException( " ");  }	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1036	[BUG]  [BUGGY]  allowSuppressWarnings(filenamePrefix)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  allowSuppressWarnings(filenamePrefix)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	allowSuppressWarnings(filenamePrefix)  {  throw  new  IllegalStateException( " ");  }	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1037	[BUG]  [BUGGY]  allowSuppressWarnings( "reportDependencies "))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  allowSuppressWarnings( "reportDependencies "))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	allowSuppressWarnings( "reportDependencies "))  {  throw  new  IllegalStateException( " ");  }	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1038	[BUG]  [BUGGY]  allowSupported(false)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  allowSupported(false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	allowSupported(false)  {  throw  new  IllegalStateException( " ");  }	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1039	[BUG]  [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =  }	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1040	[BUG]  [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =!=  illegal  start  of  expression  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =!=  illegal  start  of  expression	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1041	[BUG]  [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =  [Delete]  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =  [Delete]  illegal  start  of  expression  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =  [Delete]  illegal  start  of  expression	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1042	[BUG]  [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =  >=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =  >=  illegal  start  of  expression  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  module$test=  {  }  ;var  a$$module$test  =  >=  illegal  start  of  expression	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1043	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1044	[BUG]  [BUGGY]  this.module$test  =  module.getOptionalModules().iterator().next();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.getOptionalModules().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getOptionalModules().iterator().next();	  this.module$test    =    module.getModules().iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1045	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
1046	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1047	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1048	[BUG]  [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChil	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1049	[BUG]  [BUGGY]  if(modules!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  nu  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  nu  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  nu	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1050	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1051	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
1052	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix.size();  ++i)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix.size();  ++i)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  filenamePrefix.size();  ++i)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1053	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  this.reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1054	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildIntoFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildIntoFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildIntoFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1055	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(module.isModule())    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
1056	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1057	[BUG]  [BUGGY]  if(module.getName().startsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().startsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().startsWith( ".java ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    4);    }    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1058	[BUG]  [BUGGY]  ||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    4);    }    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1059	[BUG]  [BUGGY]  if(module.getName().endsWith( ".java ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".java ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".java ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1060	[BUG]  [BUGGY]  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1061	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1062	[BUG]  [BUGGY]  if(!module.isEmpty())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module.isEmpty())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module.isEmpty())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1063	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  this.module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1064	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  reportDependencies);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  reportDependencies);	  var    module$test=    ==    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1065	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix);	  var    module$test=    ==    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1066	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  reportDependencies);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  reportDependencies);	  var    module$test=    ==    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1067	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix);	  var    module$test=    ==    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1068	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar  +  filenamePrefix  +  File.separatorChar);	  var    module$test=    ==    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1069	[BUG]  [BUGGY]  var  module$test=  {  }  if(reportDependencies)  {  this.module$test=0;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  if(reportDependencies)  {  this.module$test=0;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  if(reportDependencies)  {  this.module$test=0;  }	  var    module$test=    {    }    if(reportDependencies)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1070	[BUG]  [BUGGY]  var  module$test=  {  }  if(reportDependencies)  {  this.module$test=2;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  if(reportDependencies)  {  this.module$test=2;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  if(reportDependencies)  {  this.module$test=2;  }	  var    module$test=    {    }    if(reportDependencies)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1071	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=1  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=1	  var    module$test=    {    }    if(reportDependencies)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1072	[BUG]  [BUGGY]  if(!this.reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!this.reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!this.reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(this.reportDependencies)    {    for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
1073	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1074	[BUG]  [BUGGY]  int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1075	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1076	[BUG]  [BUGGY]  if(module$test  >=  null)  {  var  modules$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  >=  null)  {  var  modules$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  >=  null)  {  var  modules$test=  {  }  ;  }	  var    modules$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1077	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  modules$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  modules$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  modules$test=  {  }  ;	  var    modules$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1078	[BUG]  [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1079	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1080	[BUG]  [BUGGY]  for(JSModule  module  :  compiler.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  compiler.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  compiler.modules)  {  this.module  =  module;  }	  for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
1081	[BUG]  [BUGGY]  this.modules.add(module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.modules.add(module$test,  a$$module$test);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.modules.add(module$test,  a$$module$test);	  this.modules.add(module);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
1082	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
1083	[BUG]  [BUGGY]  for(JSModule  module  :  modules.modules())  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.modules())  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.modules())  {  this.modules.add(module);  }	  for(JSModule    module    :    module.modules())    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1084	[BUG]  [BUGGY]  for(JSModule  module  :  modules.modules())  {  this.module$test  =  module.substring(0,  module.length());  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.modules())  {  this.module$test  =  module.substring(0,  module.length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.modules())  {  this.module$test  =  module.substring(0,  module.length());  }	  for(JSModule    module    :    module.modules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1085	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module$test  =  module.substring(0,  module.length();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module$test  =  module.substring(0,  module.length();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules())  {  this.module$test  =  module.substring(0,  module.length();  }	  for(JSModule    module    :    module.modules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1086	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    moduleDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
1087	[BUG]  [BUGGY]  if(module.getName().endsWith( ".java ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".java ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".java ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    4);    }    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1088	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    4);    }    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1089	[BUG]  [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().startsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().startsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".java ")||  module.getName().startsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    4);    }    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1090	[BUG]  [BUGGY]  this.module$test  =  compiler.substring(0,  module.length());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  compiler.substring(0,  module.length());  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  compiler.substring(0,  module.length());	  this.module$test    =    module.substring(0,    module.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1091	[BUG]  [BUGGY]  this.module$test  =  module.substring(0,  modules.length());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.substring(0,  modules.length());  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.substring(0,  modules.length());	  this.module$test    =    module.substring(0,    module.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1092	[BUG]  [BUGGY]  var  a$$module$test=  {  module$test  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  {  module$test  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  module$test	  var    module$test=    {    }    ;var    a$$module$test=    {    reportDependencies    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
1093	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1094	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1095	[BUG]  [BUGGY]  if(module!=  null)  {  this.reportDependencies  =  new  ArrayList  <  Module>();  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.reportDependencies  =  new  ArrayList  <  Module>();  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.reportDependencies  =  new  ArrayList  <  Module>();  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1096	[BUG]  [BUGGY]  this.module  =  compiler.getModule(module);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  compiler.getModule(module);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  compiler.getModule(module);	  this.module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1097	[BUG]  [BUGGY]  this.module  =  compiler.getModule(module,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  compiler.getModule(module,  DEFAULT_FILENAME_PREFIX);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  compiler.getModule(module,  DEFAULT_FILENAME_PREFIX);	  this.module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1098	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  module.getModule();  }  else  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.module  =  module.getModule();  }  else  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  module.getModule();  }  else  {  this.module  =  module.getModule();  }	  this.module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1099	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChild    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1100	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  }	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChild    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1101	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1102	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  i++)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  i++)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  i++)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1103	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies;  i++)  {  module.addChildToBack(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies;  i++)  {  module.addChildToBack(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies;  i++)  {  module.addChildToBack(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1104	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")&&  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js ")&&  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")&&  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length());  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".js   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
1105	[BUG]  [BUGGY]  if(module.getParent()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getParent()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getParent()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
1106	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(module.getModule()!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
1107	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=1  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=1	  var    module$test=    {    }    if(reportDependencies)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1108	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=1  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=1	  var    module$test=    {    }    if(reportDependencies)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1109	[BUG]  [BUGGY]  this.modules.add(module,  module);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.modules.add(module,  module);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.modules.add(module,  module);	  this.modules.add(module);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
1110	[BUG]  [BUGGY]  this.module$test  =  module.reportModules();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module$test  =  module.reportModules();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.reportModules();	  this.module$test    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1111	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules().values().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules().values().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules().values().iterator().next();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    modules.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
1112	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules()).iterator().next();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules()).iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules()).iterator().next();	  if(module.getModules()!=    null)    {    for(JSModule    module    :    modules.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
1113	[BUG]  [BUGGY]  Reporter.println( "Failed  to  add  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Reporter.println( "Failed  to  add  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Reporter.println( "Failed  to  add  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1114	[BUG]  [BUGGY]  allowSupported(filenamePrefix)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  allowSupported(filenamePrefix)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	allowSupported(filenamePrefix)  {  throw  new  IllegalStateException( " ");  }	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1115	[BUG]  [BUGGY]  allowSupported(filenamePrefix,  reportDependencies)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  allowSupported(filenamePrefix,  reportDependencies)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	allowSupported(filenamePrefix,  reportDependencies)  {  throw  new  IllegalStateException( " ");  }	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1116	[BUG]  [BUGGY]  aughtException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  aughtException( " ");  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	aughtException( " ");	  if(reportDependencies)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1117	[BUG]  [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1118	[BUG]  [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1119	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1120	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.values())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.values())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.values())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1121	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=	  var    module$test=    {    }    if(this.module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1122	[BUG]  [BUGGY]  if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1123	[BUG]  [BUGGY]  if(module.hasChildren())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.hasChildren())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.hasChildren())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1124	[BUG]  [BUGGY]  if(module.getType()  ==  Token.VAR)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getType()  ==  Token.VAR)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getType()  ==  Token.VAR)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1125	[BUG]  [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1126	[BUG]  [BUGGY]  if(module.getType()  ==  Token.FUNCTION)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getType()  ==  Token.FUNCTION)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getType()  ==  Token.FUNCTION)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1127	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1128	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1129	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1130	[BUG]  [BUGGY]  if(filenamePrefix  ==  null)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(filenamePrefix  ==  null)  {  var  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(filenamePrefix  ==  null)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1131	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1132	[BUG]  [BUGGY]  if(module  <  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1133	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js "))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1134	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1135	[BUG]  [BUGGY]  if(module.getName().endsWith( ".java "))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".java "))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".java "))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1136	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module  =  module.clone();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module  =  module.clone();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module  =  module.clone();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1137	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(modul    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1138	[BUG]  [BUGGY]  &&  module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(modul    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1139	[BUG]  [BUGGY]  if(module!=  null)  {  this.reportDependencies  =  reportDependencies;  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.reportDependencies  =  reportDependencies;  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.reportDependencies  =  reportDependencies;  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1140	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1141	[BUG]  [BUGGY]  if(module!=  null)  {  this.reportDependencies  =  reportDependencies;  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.reportDependencies  =  reportDependencies;  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.reportDependencies  =  reportDependencies;  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1142	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.substring(0,  module.length()))  {  this.module$test  =  module.substring(0,  module.length());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.substring(0,  module.length()))  {  this.module$test  =  module.substring(0,  module.length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.substring(0,  module.length()))  {  this.module$test  =  module.substring(0,  module.length());  }	  if(reportDependencies)    {    for(JSModule    module    :    module.substring(0,    module.length()    -    1))    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1143	[BUG]  [BUGGY]  if(module.length()  >  0)  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.length()  >  0)  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.length()  >  0)  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.substring(0,    module.length()    -    1))    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1144	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.substring(0,    module.length()    -    1))    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1145	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
1146	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
1147	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  var  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1148	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js "))  {  var  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js "))  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1149	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  var  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1150	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().startsWith( ".js "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().startsWith( ".js "))  {  var  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().startsWith( ".js "))  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1151	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
1152	[BUG]  [BUGGY]  if(module.isModule())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1153	[BUG]  [BUGGY]  if(module  <  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1154	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1155	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js "))  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1156	[BUG]  [BUGGY]  this.reportDependencies  =  reportDependencies  ||  filenamePrefix.endsWith(File.separator);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.reportDependencies  =  reportDependencies  ||  filenamePrefix.endsWith(File.separator);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.reportDependencies  =  reportDependencies  ||  filenamePrefix.endsWith(File.separator);	  this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1157	[BUG]  [BUGGY]  if(module  >  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  >  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  >  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test    ==    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1158	[BUG]  [BUGGY]  if(module  >  null)  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  >  null)  {  var  module$test=  {  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  >  null)  {  var  module$test=  {  }	  var    module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1159	[BUG]  [BUGGY]  if(this.module!=  module)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  module)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(this.module!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1160	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies;  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies;  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  moduleDependencies;  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1161	[BUG]  [BUGGY]  int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1162	[BUG]  [BUGGY]  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1163	[BUG]  [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module.isModule())  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1164	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1165	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1166	[BUG]  [BUGGY]  for(JSModule  module  :  this.modules.values())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  this.modules.values())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  this.modules.values())  {  this.module  =  module;  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1167	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1168	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1169	[BUG]  [BUGGY]  this.module  =  module?  module  :  DEFAULT_FILENAME_PREFIX;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module?  module  :  DEFAULT_FILENAME_PREFIX;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module?  module  :  DEFAULT_FILENAME_PREFIX;	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1170	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  module;  }	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1171	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  module;  }  else  {  System.arraycopy(module,  0,  this.module$test,  0,  module$test);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.module  =  module;  }  else  {  System.arraycopy(module,  0,  this.module$test,  0,  module$test);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  module;  }  else  {  System.arraycopy(module,  0,  this.module$test,  0,  module$test);  }	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1172	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  module;  }  else  {  throw  new  IllegalArgumentException( "Module  must  not  be  deprecated. ");  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.module  =  module;  }  else  {  throw  new  IllegalArgumentException( "Module  must  not  be  deprecated. ");  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  module;  }  else  {  throw  new  IllegalArgumentException( "Module  must  not  be  deprecated. ");  }	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1173	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  module;  }  else  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.module  =  module;  }  else  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  module;  }  else  {  this.module  =  module;  }	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1174	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  module;  }  else  {  System.arraycopy(module,  0,  this.module,  0,  module$test);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.module  =  module;  }  else  {  System.arraycopy(module,  0,  this.module,  0,  module$test);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  module;  }  else  {  System.arraycopy(module,  0,  this.module,  0,  module$test);  }	  this.module    =    module;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1175	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1176	[BUG]  [BUGGY]  if(module  <  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1177	[BUG]  [BUGGY]  if(module  <  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1178	[BUG]  [BUGGY]  if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1179	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.separator;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.separator;	  var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1180	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.separator  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.separator  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.separator	  var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1181	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.separator);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.separator);	  var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1182	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.s  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.s  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.s	  var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1183	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separator)&&  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix;	  var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1184	[BUG]  [BUGGY]  if(module.getModuleCount()!=  module.getModuleCount())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()!=  module.getModuleCount())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()!=  module.getModuleCount())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1185	[BUG]  [BUGGY]  if(module.getModule()!=  module.getModuleCount())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module.getModuleCount())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module.getModuleCount())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1186	[BUG]  [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1187	[BUG]  [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1188	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.values())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.values())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.values())  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1189	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
1190	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
1191	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
1192	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(modul    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1193	[BUG]  [BUGGY]  &&  module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(modul    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1194	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(modul    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1195	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js "))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(modul    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1196	[BUG]  [BUGGY]  var  module$test=  {  }  if(module!=  null)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  module$test=  {  }  if(module!=  null)  {  this.module$test=1;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  if(module!=  null)  {  this.module$test=1;  }	  var    module$test=    {    }    if(module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1197	[BUG]  [BUGGY]  if(module$test  ==  null)  {  this.module$test=null;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  this.module$test=null;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  this.module$test=null;  }	  var    module$test=    {    }    if(module$test!=    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1198	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1199	[BUG]  [BUGGY]  if(module.isModule())  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1200	[BUG]  [BUGGY]  if(module.isModule())  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1201	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js "))  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1202	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1203	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1204	[BUG]  [BUGGY]  if(this.module$test!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1205	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module,    filenamePrefix,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1206	[BUG]  [BUGGY]  if(module!=  null  &&  module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null  &&  module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null  &&  module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(module.isModule())    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
1207	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length());  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length());  }	  if(module.isModule())    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
1208	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies;  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies;  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  moduleDependencies;  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1209	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i  +  1);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i  +  1);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i  +  1);  if(module!=  null)  {  module.addChildToBack(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1210	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1211	[BUG]  [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1212	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1213	[BUG]  [BUGGY]  if(module.hasModules())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.hasModules())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.hasModules())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1214	[BUG]  [BUGGY]  if(module.getModules()!=  null  &&  module.getModules().length  >  0)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null  &&  module.getModules().length  >  0)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null  &&  module.getModules().length  >  0)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1215	[BUG]  [BUGGY]  ||!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1216	[BUG]  [BUGGY]  this.module  =  compiler.getModules(module);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  compiler.getModules(module);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  compiler.getModules(module);	  this.module    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1217	[BUG]  [BUGGY]  this.module  =  module.getModule(Module.SOURCENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  module.getModule(Module.SOURCENAME_PREFIX);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module.getModule(Module.SOURCENAME_PREFIX);	  this.module    =    module.getModules();    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1218	[BUG]  [BUGGY]  if(module.getModules()!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(this.module$test!=    module)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
1219	[BUG]  [BUGGY]  if(module!=  this.module$test)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  this.module$test)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  this.module$test)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(this.module$test!=    module)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
1220	[BUG]  [BUGGY]  for(JSModule  module  :  modules.keySet())  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.keySet())  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.keySet())  {  this.modules.add(module);  }	  for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1221	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1222	[BUG]  [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1223	[BUG]  [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1224	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1225	[BUG]  [BUGGY]  if(module  >  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  >  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  >  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1226	[BUG]  [BUGGY]  if(module.getType()  ==  Token.FUNCTION)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getType()  ==  Token.FUNCTION)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getType()  ==  Token.FUNCTION)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(module!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1227	[BUG]  [BUGGY]  if(module.getType()  ==  Token.FUNCTION)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getType()  ==  Token.FUNCTION)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getType()  ==  Token.FUNCTION)  {  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies	  if(module!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1228	[BUG]  [BUGGY]  &&  module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1229	[BUG]  [BUGGY]  &&  this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1230	[BUG]  [BUGGY]  &&  this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1231	[BUG]  [BUGGY]  &&  this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&  this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&  this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1232	[BUG]  [BUGGY]  if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1233	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1234	[BUG]  [BUGGY]  if(module.getType()  ==  Token.VAR)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getType()  ==  Token.VAR)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getType()  ==  Token.VAR)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1235	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")&&  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
1236	[BUG]  [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().startsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".java ")||  module.getName().startsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".java ")||  module.getName().startsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".java   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
1237	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js "))  {  Var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js "))  {  Var  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js "))  {  Var  module$test=  {  }  ;	  Var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1238	[BUG]  [BUGGY]  if(module.isModule())  {  Var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  Var  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  Var  module$test=  {  }  ;	  Var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1239	[BUG]  [BUGGY]  if(filenamePrefix  ==  null)  {  Var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(filenamePrefix  ==  null)  {  Var  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(filenamePrefix  ==  null)  {  Var  module$test=  {  }  ;	  Var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1240	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  Var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  >  0)  {  Var  module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  >  0)  {  Var  module$test=  {  }  ;	  Var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1241	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules().entrySet().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules().entrySet().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules().entrySet().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
1242	[BUG]  [BUGGY]  For(JSModule  module  :  modules.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  For(JSModule  module  :  modules.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	For(JSModule  module  :  modules.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
1243	[BUG]  [BUGGY]  if(module!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(this.module!=    module)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1244	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next()  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next()  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next()	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1245	[BUG]  [BUGGY]  &&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  &&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	&&!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1246	[BUG]  [BUGGY]  !modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  !modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1247	[BUG]  [BUGGY]  ||!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1248	[BUG]  [BUGGY]  if(module.getModule()!=  module.getModule())  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module.getModule())  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module.getModule())  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
1249	[BUG]  [BUGGY]  This.module$test  =  module.getModules().iterator().next();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  This.module$test  =  module.getModules().iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	This.module$test  =  module.getModules().iterator().next();	  if(reportDependencies)    {    for(JSModule    module    :    modules.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1250	[BUG]  [BUGGY]  if(module.isModule())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
1251	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test  ==  null)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    this.module$test    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1252	[BUG]  [BUGGY]  if(module  >  null)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  >  null)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  >  null)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    this.module$test    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1253	[BUG]  [BUGGY]  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    add    module:   "    +    filenamePrefix);    this.module$test    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1254	[BUG]  [BUGGY]  var  a$$module$test=  >>  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=  >>  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  >>	  var    module$test=    {    }    ;var    a$$module$test=    ==    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1255	[BUG]  [BUGGY]  var  a$$module$test=!=  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test=!=  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=!=	  var    module$test=    {    }    ;var    a$$module$test=    ==    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1256	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
1257	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
1258	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
1259	[BUG]  [BUGGY]  if(module  <  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
1260	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
1261	[BUG]  [BUGGY]  if(module.hasChildren())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.hasChildren())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.hasChildren())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
1262	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
1263	[BUG]  [BUGGY]  if(module.hasChildren())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.hasChildren())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.hasChildren())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
1264	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
1265	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1266	[BUG]  [BUGGY]  if(module.isModule())  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1267	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js "))  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1268	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1269	[BUG]  [BUGGY]  if(!moduleDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!moduleDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!moduleDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1270	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1271	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1272	[BUG]  [BUGGY]  if(module.getType()  ==  Token.FUNCTION)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getType()  ==  Token.FUNCTION)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getType()  ==  Token.FUNCTION)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1273	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies;  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies;  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  moduleDependencies;  ++i)  {  this.modules.add(module);  }	  for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1274	[BUG]  [BUGGY]  if(module.length()  >  0)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.length()  >  0)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.length()  >  0)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
1275	[BUG]  [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module.isModule())  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies.size();    ++i)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1276	[BUG]  [BUGGY]  if(module.isModule())  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(!modules.isEmpty())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
1277	[BUG]  [BUGGY]  if(modulePrefix  ==  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(modulePrefix  ==  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modulePrefix  ==  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1278	[BUG]  [BUGGY]  this.module  =  moduleDependencies;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module  =  moduleDependencies;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  moduleDependencies;	  if(reportDependencies)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1279	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModuleSupplier())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModuleSupplier())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModuleSupplier())  {  this.module  =  module.getModule();  }	  for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1280	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(this.reportDependencies    >    0)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
1281	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }	  if(this.reportDependencies    >    0)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
1282	[BUG]  [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1283	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules.get(0))  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  modules.get(0))  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  modules.get(0))  {  this.module$test  =  module.getModules();  }	  if(module!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
1284	[BUG]  [BUGGY]  this.module.addChildToFront(module,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  this.module.addChildToFront(module,  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module.addChildToFront(module,  filenamePrefix);	  this.module.addChildToFront(module);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
1285	[BUG]  [BUGGY]  if(module$test!=  null)  {  ||  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  ||  module$test=  {  }  ;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  ||  module$test=  {  }  ;  }	  ||    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1286	[BUG]  [BUGGY]  if(module.isAssignableFrom(module))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isAssignableFrom(module))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isAssignableFrom(module))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1287	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js "))  {  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(module.isModule())    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1288	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1289	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  this.module  =  module.getModule();  }	  if(module.getModule()    >=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1290	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies;  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  moduleDependencies;  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  moduleDependencies;  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1291	[BUG]  [BUGGY]  int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1292	[BUG]  [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.substring(0,  module.length());  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.substring(0,  module.length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.substring(0,  module.length());  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1293	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1294	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1295	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules()).iterator().next();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules()).iterator().next();  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules()).iterator().next();	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
1296	[BUG]  [BUGGY]  if(module.getModule()  ==  null  ||  this.module.getModule()!=  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null  ||  this.module.getModule()!=  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null  ||  this.module.getModule()!=  module.getModule())  {  this.module  =  module.getModule();  }	  if(module.getModule()    ==    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1297	[BUG]  [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.add(filenamePrefix  +  File.separator);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.add(filenamePrefix  +  File.separator);	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1298	[BUG]  [BUGGY]  var  a$$module$test.startsWith( ".java ")?  module$test  :  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.startsWith( ".java ")?  module$test  :  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.startsWith( ".java ")?  module$test  :	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1299	[BUG]  [BUGGY]  var  a$$module$test.startsWith(File.separator);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.startsWith(File.separator);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.startsWith(File.separator);	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1300	[BUG]  [BUGGY]  var  a$$module$test.startsWith( "- ")?  module$test  :  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.startsWith( "- ")?  module$test  :  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.startsWith( "- ")?  module$test  :	  module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1301	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.module.getSize();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  this.module.getSize();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.module.getSize();  ++i)  {  this.module.addChildToFront(module);  }	  for(int    i    =    0;    i    <    this.module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1302	[BUG]  [BUGGY]  if(module.getModule()  ==  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()  ==  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(this.module!=    null)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1303	[BUG]  [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1304	[BUG]  [BUGGY]  if(module!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1305	[BUG]  [BUGGY]  if(module!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1306	[BUG]  [BUGGY]  if(module!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1307	[BUG]  [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1308	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1309	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1310	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1311	[BUG]  [BUGGY]  Reporter.println( "Failed  to  parse  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Reporter.println( "Failed  to  parse  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Reporter.println( "Failed  to  parse  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    parse    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
1312	[BUG]  [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDe    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
1313	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDe    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
1314	[BUG]  [BUGGY]  ||  module!=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  module!=  null)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module!=  null)  {  this.module  =  module.getModule();  }	  if(module!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1315	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  module.toModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  this.module  =  module.toModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  module.toModule();  }	  if(module!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1316	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(	  if(this.reportDependencies!=    reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(modul    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1317	[BUG]  [BUGGY]  for(JSModule  module  :  modules.modules)  {  this.module$test  =  module.substring(0,  module.length());  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.modules)  {  this.module$test  =  module.substring(0,  module.length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.modules)  {  this.module$test  =  module.substring(0,  module.length());  }	  for(JSModule    module    :    module.modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1318	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1319	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1320	[BUG]  [BUGGY]  var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append( ";n ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append( ";n ");  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append( ";n ");	  var    modules$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1321	[BUG]  [BUGGY]  var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append( "> ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append( "> ");  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append( "> ");	  var    modules$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1322	[BUG]  [BUGGY]  var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append('n');  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append('n');  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append('n');	  var    modules$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1323	[BUG]  [BUGGY]  var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append( "n ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append( "n ");  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append( "n ");	  var    modules$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1324	[BUG]  [BUGGY]  var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append('/');  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append('/');  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test.append(filenamePrefix).append( ".module ").append(System.getProperty( "line.separator ")).append('/');	  var    modules$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1325	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1326	[BUG]  [BUGGY]  Reporter.println( "Failed  to  report  module: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Reporter.println( "Failed  to  report  module: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Reporter.println( "Failed  to  report  module: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Failed    to    report    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
1327	[BUG]  [BUGGY]  if(!reportDependencies)  {  System.err.println( "Failed  to  report  module: "  +  filenamePrefix);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!reportDependencies)  {  System.err.println( "Failed  to  report  module: "  +  filenamePrefix);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!reportDependencies)  {  System.err.println( "Failed  to  report  module: "  +  filenamePrefix);  }	  if(reportDependencies)    {    System.err.println(   "Failed    to    report    module:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
1328	[BUG]  [BUGGY]  if(module  >  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  >  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  >  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(this.module$test    ==    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1329	[BUG]  [BUGGY]  if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1330	[BUG]  [BUGGY]  if(module.getModules()!=  this.module$test)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  this.module$test)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  this.module$test)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1331	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1332	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test  =!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test  =!=  illegal  start  of  expression  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;var  a$$module$test  =!=  illegal  start  of  expression	  ;var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1333	[BUG]  [BUGGY]  ||  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  ||  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module.getModule()!=  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    ||    module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1334	[BUG]  [BUGGY]  if(module!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
1335	[BUG]  [BUGGY]  if(module.isModule())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(!reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
1336	[BUG]  [BUGGY]  for(JSModule  module  :  modules.entrySet())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.entrySet())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.entrySet())  {  this.module  =  module.getModules();  }	  for(JSModule    module    :    modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
1337	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  a$$module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module$test!=  null)  {  var  a$$module$test=  {  }  ;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module$test!=  null)  {  var  a$$module$test=  {  }  ;	  var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
1338	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1339	[BUG]  [BUGGY]  if(module  <  this.modules)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module  <  this.modules)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  <  this.modules)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1340	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(module.getModuleCount()    >    0)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
1341	[BUG]  [BUGGY]  Module  module  =  compiler.getModule(Module.SOURCENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  compiler.getModule(Module.SOURCENAME_PREFIX);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  compiler.getModule(Module.SOURCENAME_PREFIX);	  Module    module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1342	[BUG]  [BUGGY]  Module  module  =  compiler.getModule(FLUSH_MODULE_PREFIX);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  compiler.getModule(FLUSH_MODULE_PREFIX);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  compiler.getModule(FLUSH_MODULE_PREFIX);	  Module    module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1343	[BUG]  [BUGGY]  Module  module  =  compiler.getModule(FLUSH_PASSED_MODULES);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Module  module  =  compiler.getModule(FLUSH_PASSED_MODULES);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  compiler.getModule(FLUSH_PASSED_MODULES);	  Module    module    =    module.getModule();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1344	[BUG]  [BUGGY]  if(this.module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1345	[BUG]  [BUGGY]  if(module.hasChildren())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.hasChildren())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.hasChildren())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1346	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
1347	[BUG]  [BUGGY]  if(module.length()  >  0)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.length()  >  0)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.length()  >  0)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
1348	[BUG]  [BUGGY]  if(module.length()  ==  0)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.length()  ==  0)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.length()  ==  0)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModule())    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
1349	[BUG]  [BUGGY]  for(JSModule  module  :  modules.toArray(new  JSModule[modules.size()  ]))  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  modules.toArray(new  JSModule[modules.size()  ]))  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.toArray(new  JSModule[modules.size()  ]))  {  this.module  =  module;  }	  for(JSModule    module    :    module.modules())    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1350	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1351	[BUG]  [BUGGY]  if(module.hasModules())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.hasModules())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.hasModules())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(this.module$test!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1352	[BUG]  [BUGGY]  if(module.isModule())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
1353	[BUG]  [BUGGY]  if(module.isModule())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  report  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  report  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  report	  if(!modules.containsKey(filenamePrefix))    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(modul    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
1354	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1355	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js "))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js "))  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1356	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1357	[BUG]  [BUGGY]  if(module.isModule())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1358	[BUG]  [BUGGY]  if(module.getType()  ==  Token.VAR)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getType()  ==  Token.VAR)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getType()  ==  Token.VAR)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1359	[BUG]  [BUGGY]  if(module.getType()  ==  Token.NAME)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getType()  ==  Token.NAME)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getType()  ==  Token.NAME)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(reportDependencies)    {    for(int    i    =    0;    i    <    moduleDependencies.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1360	[BUG]  [BUGGY]  Reporter.println( "Missing  module  name: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  Reporter.println( "Missing  module  name: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Reporter.println( "Missing  module  name: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Missing    module    name:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
1361	[BUG]  [BUGGY]  MutableFormat.println( "Missing  module  name: "  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  MutableFormat.println( "Missing  module  name: "  +  filenamePrefix);  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	MutableFormat.println( "Missing  module  name: "  +  filenamePrefix);	  if(reportDependencies)    {    System.err.println(   "Missing    module    name:   "    +    filenamePrefix);    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
1362	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  }	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1363	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1364	[BUG]  [BUGGY]  if(module.isModule())  {  this.reportDependencies  =  reportDependencies;  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  this.reportDependencies  =  reportDependencies;  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  this.reportDependencies  =  reportDependencies;  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(this.reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1365	[BUG]  [BUGGY]  if(module!=  null)  {  for(Module  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(Module  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(Module  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(module!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
1366	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.toModule();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.toModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.toModule();  }	  if(module!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
1367	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    else    {    System.arraycopy(module,    0,    this.module,    0,    reportDependencies);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
1368	[BUG]  [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1369	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules().values().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules().values().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules().values().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1370	[BUG]  [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()  ==  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()  ==  null)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules().iterator().next())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1371	[BUG]  [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()  instanceof  Module  ||  module.getModule()  instanceof  Class  <?>)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()  instanceof  Module  ||  module.getModule()  instanceof  Class  <?>)  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null  &&  module.getModule()  instanceof  Module  ||  module.getModule()  instanceof  Class  <?>)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null    &&    module.getModule()    instanceof    Module)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1372	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.keySet())  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.keySet())  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.keySet())  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1373	[BUG]  [BUGGY]  if(module.getModules()!=  null  &&  module.getModules().length  >  0)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  null  &&  module.getModules().length  >  0)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null  &&  module.getModules().length  >  0)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(module.getModules()!=    null)    {    for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1374	[BUG]  [BUGGY]  if(module.getType()  ==  Token.VAR)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getType()  ==  Token.VAR)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getType()  ==  Token.VAR)  {  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module	  if(this.reportDependencies!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1375	[BUG]  [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module.isModule())  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1376	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  i++)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  i++)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  i++)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1377	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getName();  i++)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getName();  i++)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getName();  i++)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    reportDependencies;    i++)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1378	[BUG]  [BUGGY]  var  a$$module$test;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  var  a$$module$test;  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test;	  var    module$test=    ==    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1379	[BUG]  [BUGGY]  if(module!=  module)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  module)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  module)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }	  if(this.module!=    module)    {    for(JSModule    module    :    module.getModule())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
1380	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=  {  }  ;var  a$$module$test=	  var    module$test=    {    }    if(this.module$test    ==    null)    {    this.module$test=1;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1381	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().startsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().startsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().startsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	  if(module.getName().endsWith(   ".js   ")||    module.getName().endsWith(   ".js   "))    {    this.module$test    =    module.getName().substring(0,    module.getName().length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
1382	[BUG]  [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1383	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1384	[BUG]  [BUGGY]  if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  module.getModules())  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1385	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getBase().getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getBase().getModules().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getBase().getModules().iterator().next();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1386	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getName().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getName().iterator().next();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getName().iterator().next();  }	  for(JSModule    module    :    module.getModules())    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1387	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module  =  module.toModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module  =  module.toModule();  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module  =  module.toModule();  }	  for(JSModule    module    :    module.getModules())    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1388	[BUG]  [BUGGY]  if(module.getModule()!=  module.getModuleCount())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module.getModuleCount())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module.getModuleCount())  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront	  if(module.getModuleCount()    >    0)    {    if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
1389	[BUG]  [BUGGY]  if(!modules.contains(filenamePrefix))  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.contains(filenamePrefix))  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.contains(filenamePrefix))  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1390	[BUG]  [BUGGY]  if(this.modules!=  null)  {  reportDependencies  =  reportDependencies;  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  reportDependencies  =  reportDependencies;  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  reportDependencies  =  reportDependencies;  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1391	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    this.modules.size();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1392	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i  +  1);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i  +  1);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i  +  1);  if(module!=  null)  {  reportDependencies.add(module);  }	  for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1393	[BUG]  [BUGGY]  if(module.length()  >  0)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.length()  >  0)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.length()  >  0)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1394	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length());  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length());  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length());  }	  if(reportDependencies)    {    for(JSModule    module    :    modules)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1395	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1396	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1397	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1398	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  if(modules!=    null)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1399	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.add    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1400	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1401	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1402	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module,  reportDependencies);  }	  if(reportDependencies)    {    for(JSModule    module    :    module.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1403	[BUG]  [BUGGY]  if(module.getModule()!=  module)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModule()!=  module)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  module)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1404	[BUG]  [BUGGY]  if(module.isModule())  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(this.modules!=    null)    {    if(reportDependencies)    {    for(JSModule    module    :    this.modules)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1405	[BUG]  [BUGGY]  if(this.module!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.module!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1406	[BUG]  [BUGGY]  if(this.modules!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(this.modules!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1407	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1408	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1409	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1410	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1411	[BUG]  [BUGGY]  if(module.getChildCount()  >  1)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module.getChildCount()  >  1)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getChildCount()  >  1)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addCh	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChild    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1412	[BUG]  [BUGGY]  if(module!=  module)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;      [BUGGY]  if(module!=  module)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]        [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  module)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(this.module!=    module)    {    for(JSModule    module    :    moduleDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
