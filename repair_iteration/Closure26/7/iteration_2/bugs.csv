bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(reportDependencies)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToFront(module);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies;  i++)  {  module.addChildToBack(module);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToBack(module);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  this.reportDependencies  =  reportDependencies;  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.reportDependencies  =  reportDependencies;	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  reportDependencies.size();  ++i)  {  module.addChildToFront(module,  filenamePrefix,  reportDependencies);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=  {	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  ==  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  ==  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=  ==	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  var  modules$test=  {  }  ;var  a$$module$test=  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  modules$test=  {  }  ;var  a$$module$test=  {  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  modules$test=  {  }  ;var  a$$module$test=  {	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
11	[BUG]  [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test=  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test=  {  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  ==  }  ;var  a$$module$test=  {	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
12	[BUG]  [BUGGY]  var  module$test=  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
15	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
16	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
17	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
18	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
19	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChild	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
20	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
22	[BUG]  [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
23	[BUG]  [BUGGY]  if(this.modules!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.modules!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
24	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
25	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
26	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
27	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
28	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(modul  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(modul  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
33	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
36	[BUG]  [BUGGY]  var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  ;  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;	  junit.framework.DependencyFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  ||  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  ||  module$test=  {  }  ;  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module$test=  {  }  ;	  junit.framework.DependencyFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  var  modules$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  modules$test=  {  }  ;  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  modules$test=  {  }  ;	  junit.framework.DependencyFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  var  module$test=  ==  }  ;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  ==  }  ;  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  ==  }  ;	  junit.framework.DependencyFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
40	[BUG]  [BUGGY]  Var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  Var  module$test=  {  }  ;  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Var  module$test=  {  }  ;	  junit.framework.DependencyFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
41	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  this.module$test  =  module.substring(0,  module.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  this.module$test  =  module.substring(0,  module.length()  -  1);  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.substring(0,  module.length()  -  1);	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.substring(0,  module.length()  -  1))  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  this.module$test  =  module.getModules();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  this.module$test  =  module.getModules();  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getModules();	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
54	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  ;  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=  {  }  ;	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=  {  }	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  var  modules$test=  {  }  ;var  a$$module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  modules$test=  {  }  ;var  a$$module$test=  {  }  ;  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  modules$test=  {  }  ;var  a$$module$test=  {  }  ;	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
57	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  ==  }  ;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  ==  }  ;  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=  ==  }  ;	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test=  {  }  ;  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  ==  }  ;var  a$$module$test=  {  }  ;	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  ;var  a$$module$test  =  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test  =	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
60	[BUG]  [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test  =  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  ==  }  ;var  a$$module$test  =	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
61	[BUG]  [BUGGY]  var  modules$test=  {  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  modules$test=  {  }  ;var  a$$module$test  =  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  modules$test=  {  }  ;var  a$$module$test  =	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  ||  module$test=  {  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  ||  module$test=  {  }  ;var  a$$module$test  =  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	||  module$test=  {  }  ;var  a$$module$test  =	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  module$test=  {  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  module$test=  {  }  ;var  a$$module$test  =  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	module$test=  {  }  ;var  a$$module$test  =	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  this.module$test  =  module.getModules().iterator().next();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  this.module$test  =  module.getModules().iterator().next();  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module$test  =  module.getModules().iterator().next();	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
65	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
66	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
67	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
68	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
69	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
70	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
71	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
73	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module,  reportDependencies);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
74	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
75	[BUG]  [BUGGY]  if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  0)  {  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  this.module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
77	[BUG]  [BUGGY]  var  module$test=  {  }  if(this.module$test!=  null)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  if(this.module$test!=  null)  {  this.module$test=1;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  if(this.module$test!=  null)  {  this.module$test=1;  }	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
78	[BUG]  [BUGGY]  var  module$test=  {  }  if(this.module$test  ==  null)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  if(this.module$test  ==  null)  {  this.module$test=1;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  if(this.module$test  ==  null)  {  this.module$test=1;  }	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  var  module$test=  {  }  if(module$test  ==  null)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  if(module$test  ==  null)  {  this.module$test=1;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  if(module$test  ==  null)  {  this.module$test=1;  }	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  var  module$test=  {  }  if(reportDependencies)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  if(reportDependencies)  {  this.module$test=1;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  if(reportDependencies)  {  this.module$test=1;  }	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  var  module$test=  {  }  if(module$test!=  null)  {  this.module$test=1;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  if(module$test!=  null)  {  this.module$test=1;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  if(module$test!=  null)  {  this.module$test=1;  }	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
82	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
83	[BUG]  [BUGGY]  this.module  =  module;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  this.module  =  module;  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module;	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.modules())  {  this.module  =  module;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
87	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
88	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
89	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
90	[BUG]  [BUGGY]  this.module  =  module.getModule();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  this.module  =  module.getModule();  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module.getModule();	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
91	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
92	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
93	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
94	[BUG]  [BUGGY]  if(module.getModule()  ==  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModule()  ==  null)  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  ==  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
95	[BUG]  [BUGGY]  if(module.getModule()!=  null  ||  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModule()!=  null  ||  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null  ||  module.getModule()!=  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
96	[BUG]  [BUGGY]  if(module.getModule()  >=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModule()  >=  null)  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()  >=  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
97	[BUG]  [BUGGY]  if(module.getCompiler()!=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getCompiler()!=  null)  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getCompiler()!=  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
98	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  ==  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  ==  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=  ==  }	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
99	[BUG]  [BUGGY]  var  modules$test=  {  }  ;var  a$$module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  modules$test=  {  }  ;var  a$$module$test=  {  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  modules$test=  {  }  ;var  a$$module$test=  {  }	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
100	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  reportDependencies  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  {  reportDependencies  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  ;var  a$$module$test=  {  reportDependencies	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
101	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
103	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
104	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
105	[BUG]  [BUGGY]  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies  >  0)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
106	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
107	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
108	[BUG]  [BUGGY]  this.module  =  module.getModules();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  this.module  =  module.getModules();  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module  =  module.getModules();	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
109	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
110	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
111	[BUG]  [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
112	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
113	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
114	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
115	[BUG]  [BUGGY]  this.modules.add(module);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  this.modules.add(module);  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.modules.add(module);	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
116	[BUG]  [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.modules!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  if(reportDependencies)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
117	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
118	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
119	[BUG]  [BUGGY]  if(this.modules!=  null)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.modules!=  null)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  for(JSModule  module  :  this.modules)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
120	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
121	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
122	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
123	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
124	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
125	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
126	[BUG]  [BUGGY]  for(JSModule  module  :  modules.iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  modules.iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules.iterator().next())  {  this.module$test  =  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
127	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
128	[BUG]  [BUGGY]  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
129	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
130	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
131	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
132	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
133	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
134	[BUG]  [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
135	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
136	[BUG]  [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
137	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
138	[BUG]  [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
139	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
140	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.add	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
141	[BUG]  [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
142	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
143	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
144	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
145	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  this.modules.size();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
146	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module!=  null)  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
147	[BUG]  [BUGGY]  Module  module  =  module.getModule();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  Module  module  =  module.getModule();  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	Module  module  =  module.getModule();	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
148	[BUG]  [BUGGY]  ;var  module$test=  {  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  ;var  module$test=  {  }  ;var  a$$module$test  =  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	;var  module$test=  {  }  ;var  a$$module$test  =	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
149	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
150	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
151	[BUG]  [BUGGY]  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  modules)  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
152	[BUG]  [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
153	[BUG]  [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(modules!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
154	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDe	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
155	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  moduleDependencies.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
156	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
157	[BUG]  [BUGGY]  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
158	[BUG]  [BUGGY]  if(this.reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
159	[BUG]  [BUGGY]  if(reportDependencies)  {  System.err.println( "Failed  to  parse  module: "  +  filenamePrefix);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  System.err.println( "Failed  to  parse  module: "  +  filenamePrefix);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  System.err.println( "Failed  to  parse  module: "  +  filenamePrefix);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
160	[BUG]  [BUGGY]  if(reportDependencies)  {  System.err.println( "Failed  to  report  module: "  +  filenamePrefix);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  System.err.println( "Failed  to  report  module: "  +  filenamePrefix);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  System.err.println( "Failed  to  report  module: "  +  filenamePrefix);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
161	[BUG]  [BUGGY]  if(reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
162	[BUG]  [BUGGY]  if(reportDependencies)  {  System.err.println( "Missing  module  name: "  +  filenamePrefix);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  System.err.println( "Missing  module  name: "  +  filenamePrefix);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  System.err.println( "Missing  module  name: "  +  filenamePrefix);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
163	[BUG]  [BUGGY]  if(reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  System.err.println( "Failed  to  add  module: "  +  filenamePrefix);  this.module$test  =  module;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
164	[BUG]  [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test=  {  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test=  {  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  ==  }  ;var  a$$module$test=  {  }	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
165	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(module$test  ==  null)  {  var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  module$test=  {  }  else  if(module$test  ==  null)  {  var  a$$module$test  =  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  module$test=  {  }  else  if(module$test  ==  null)  {  var  a$$module$test  =	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test    =    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
166	[BUG]  [BUGGY]  if(module.getModuleCount()  >  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModuleCount()  >  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModuleCount()  >  1)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
167	[BUG]  [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!module.isModule())  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
168	[BUG]  [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.reportDependencies!=  reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
169	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
170	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
171	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
172	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
173	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
174	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
175	[BUG]  [BUGGY]  if(this.module$test!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module$test!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module$test  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
176	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
177	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
178	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  2);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
179	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
180	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  else  {  System.arraycopy(module,  0,  this.module,  0,  reportDependencies);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
181	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  4);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  4);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  this.module$test  =  module.getName().substring(0,  module.getName().length()  -  4);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
182	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
183	[BUG]  [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModules()!=  null)  {  for(JSModule  module  :  modules.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
184	[BUG]  [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test  ==  null)  {  for(JSModule  module  :  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
185	[BUG]  [BUGGY]  if(this.module$test!=  module)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module$test!=  module)  {  for(JSModule  module  :  module.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module$test!=  module)  {  for(JSModule  module  :  module.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
186	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  modules.getModules().iterator().next();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  modules.getModules().iterator().next();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.getModules().iterator().next();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
187	[BUG]  [BUGGY]  var  a$$module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  var  a$$module$test=  {  }  ;  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	var  a$$module$test=  {  }  ;	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
188	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
189	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
190	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addChildToBack(module);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
191	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
192	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
193	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
194	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    module.addModule(module);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
195	[BUG]  [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
196	[BUG]  [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module  ==  null)  {  for(JSModule  module  :  module.getModules())  {  this.module  =  module.getModules();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModules();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
197	[BUG]  [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
198	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.isEmpty())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
199	[BUG]  [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
200	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
201	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
202	[BUG]  [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(!modules.containsKey(filenamePrefix))  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(modul	  if(reportDependencies)    {    for(int    i    =    0;    i    <    modules.size();    ++i)    {    Module    module    =    modules.get(i);    if(module!=    null)    {    reportDependencies.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
203	[BUG]  [BUGGY]  if(this.modules!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.modules!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.modules!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
204	[BUG]  [BUGGY]  for(JSModule  module  :  module.modules())  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  for(JSModule  module  :  module.modules())  {  this.modules.add(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	for(JSModule  module  :  module.modules())  {  this.modules.add(module);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.modules.add(module);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
205	[BUG]  [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  for(JSModule  module  :  module.getModule())  {  this.module  =  module.getModule();  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
206	[BUG]  [BUGGY]  if(this.module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  null)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
207	[BUG]  [BUGGY]  this.module.addChildToFront(module);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  this.module.addChildToFront(module);  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	this.module.addChildToFront(module);	  if(reportDependencies)    {    for(int    i    =    0;    i    <    module.getModuleCount();    ++i)    {    this.module.addChildToFront(module);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
208	[BUG]  [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.isModule())  {  for(JSModule  module  :  module.modules)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
209	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  module.getModule())  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module$test    =    module.substring(0,    module.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
210	[BUG]  [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null  &&  module.getModule()!=  null)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
211	[BUG]  [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module.getModule()!=  null  &&  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null  &&  module.getModule()  instanceof  Module)  {  this.module  =  module.getModule();  }	  if(module.getModule()!=    null)    {    this.module    =    module.getModule();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
212	[BUG]  [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(this.module!=  module)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(this.module!=  module)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
213	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  module.modules)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
214	[BUG]  [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;    [BUGGY]  if(module!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }  [BUGGY]      [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module!=  null)  {  for(JSModule  module  :  moduleDependencies)  {  this.module  =  module;  }	  if(reportDependencies)    {    for(JSModule    module    :    reportDependencies)    {    this.module    =    module;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
