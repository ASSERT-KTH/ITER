bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module  =  module.getModule();  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module  =  module.getModule();  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module$test  =  module.getModules().iterator().next();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module$test  =  module.getModules().iterator().next();  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module$test  =  module.getModules().iterator().next();  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
3	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.modules.add(module);  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.modules.add(module);  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
4	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module$test  =  module.substring(0,  module.length()  -  1);  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module$test  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module$test  =  module.getModules();  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module$test  =  module.getModules();  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module  =  module.getModules();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module  =  module.getModules();  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module  =  module.getModules();  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module  =  module;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module  =  module;  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(JSModule  module  :  reportDependencies)  {  this.module  =  module;  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]    [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=  {  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=  {	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=  {  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=  {  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=  {  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test  =  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test  =  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test  =	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=  {  }  ;  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=  {  }  ;	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
14	[BUG]  [BUGGY]  junit.framework.DependencyFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  junit.framework.DependencyFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	junit.framework.DependencyFailedError:  Expected:  goog.provide( "module$test ");var  module$test=  {  }  ;	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
15	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(module.getModule()!=  null)  {  this.module  =  module.getModule();  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  reportDependencies.add(module);  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToFront(module);  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addModule(module);  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.module.addChildToFront(module);  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  modules.size();  ++i)  {  Module  module  =  modules.get(i);  if(module!=  null)  {  module.addChildToBack(module);  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {  this.compiler  =  compiler;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]  if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }  [BUGGY]    [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	61	61	5	replace	if(reportDependencies)  {  for(int  i  =  0;  i  <  module.getModuleCount();  ++i)  {  this.modules.add(module);  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
