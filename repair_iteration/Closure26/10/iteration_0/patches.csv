bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >>. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >>. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  >>. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
2	[BUG]  [BUGGY]  filename.replaceAll( ". "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  filename.replaceAll( ". "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll( ". "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
3	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >=. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >=. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  >=. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
4	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
5	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
6	[BUG]  [BUGGY]  return  filename.replaceAll( ". "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( ". "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( ". "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
7	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]    [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	  	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
9	[BUG]  [BUGGY]  return  filename.replaceAll( "  <. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "  <. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
10	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ". "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ". "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ". "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
11	[BUG]  [BUGGY]  return  filename.replaceAll( "  >>. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "  >>. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  >>. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
12	[BUG]  [BUGGY]  return  filename.replaceAll( "  }. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "  }. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  }. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
13	[BUG]  [BUGGY]  return  filename.replaceAll( "  ^. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "  ^. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  ^. "  +  Pattern.quote(File.separator),   " ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
14	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ". "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". "  +  File.separator  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ". "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". "  +  File.separator  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ". "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". "  +  File.separator	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
15	[BUG]  [BUGGY]  return  filename.replaceAll( "  <. "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "  <. "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <. "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
16	[BUG]  [BUGGY]  return  filename.replaceAll( "  ^. "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "  ^. "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  ^. "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
17	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ". "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". "  +  Pattern.quote(File.  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ". "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". "  +  Pattern.quote(File.  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ". "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". "  +  Pattern.quote(File.	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
18	[BUG]  [BUGGY]  return  filename.replaceAll( "  <. "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( " ".  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "  <. "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( " ".  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <. "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( " ".  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(File.separator),   " ")    .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
