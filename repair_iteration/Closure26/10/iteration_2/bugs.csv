bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  filename.replaceAll(Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename.replaceAll(Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll(Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  filename.replaceAll( "].   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename.replaceAll( "].   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll( "].   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
10	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
11	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
12	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(F  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(F  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(F	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
13	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(F  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(F  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(F	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File.  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File.  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File.	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
15	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "').replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "').replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "').replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.length()  ==  0)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( "  }   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( "  }   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  filename.replaceAll( "  }   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".js$   ",    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  String  filename  =  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  String  filename  =  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	String  filename  =  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".js$   ",    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  },   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  },   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  },   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
38	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    ^.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".js$   ",    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  return  filename.replaceAll( "!=.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "!=.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "!=.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    ^.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".js$   ",    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  if(filename.startsWith( ".java "))  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.startsWith( ".java "))  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.startsWith( ".java "))  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(File.separator),   "] ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(File.separator),   "] ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(File.separator),   "] ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
48	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")&&  filename.replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")&&  filename.replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")&&  filename.replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  filename.replaceAll( "  }   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  filename.replaceAll( "  }   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  filename.replaceAll( "  }   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    ^.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   "   ".    +    Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
53	[BUG]  [BUGGY]  String  filename  =  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  String  filename  =  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	String  filename  =  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   "   ".    +    Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
54	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ")+  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ")+  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ")+  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   "   ".    +    Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
55	[BUG]  [BUGGY]  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". "),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". "),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". "),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   "   ".    +    Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
56	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File.separator),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File.separator),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(File.separator),  MODULE_NAME	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   "   ".    +    Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
57	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "   ".  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "   ".  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "   ".  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   "   ".    +    Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
58	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "   ".  +  Pattern.quote(File.separator),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "   ".  +  Pattern.quote(File.separator),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "   ".  +  Pattern.quote(File.separator),  MODULE_NAME	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   "   ".    +    Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
59	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    File.separator    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
60	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    File.separator    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
61	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    File.separator    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
62	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.s  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.s  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.s	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    File.separator    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
63	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ".* ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ".* ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ".* ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	String  filename  =  filename.substring(0,  filename.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	String  filename  =  filename.substring(0,  filename.length()  -  2);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
67	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
68	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  3);  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	String  filename  =  filename.substring(0,  filename.length()  -  3);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
69	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
70	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
71	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
73	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
74	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
75	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
76	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ".  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ".  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ".  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   "   ".    +    Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ")+  Pattern.quote(File.separator),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ")+  Pattern.quote(File.separator),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ")+  Pattern.quote(File.separator),  MODULE_NAME	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   "   ".    +    Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
78	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "_ ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "_ ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "_ ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
80	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "-.js$ ",  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "-.js$ ",  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "-.js$ ",  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".js$   ",    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
81	[BUG]  [BUGGY]  return  filename.replaceAll(Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll(Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll(Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".js$   ",    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
82	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
83	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
84	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
85	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
86	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
87	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "://.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "://.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "://.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
88	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  ^.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  ^.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  ^.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
89	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
90	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")&&  all(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")&&  all(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")&&  all(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
91	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ".  +  File.separator  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ".  +  File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ".  +  File.separator	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    File.separator    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
92	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ")  +  File.separator  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ")  +  File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ")  +  File.separator	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    File.separator    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
93	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".. "  +  File.separator  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".. "  +  File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".. "  +  File.separator	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    File.separator    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
94	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    ^.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".js$   ",    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
95	[BUG]  [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    ^.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".js$   ",    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
96	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    ^.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
97	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "> ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "> ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "> ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
98	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
99	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
100	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
101	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(File.separator),   "n ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(File.separator),   "n ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  }  n ".  +  Pattern.quote(File.separator),   "n ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
102	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
103	[BUG]  [BUGGY]  return  filename.replaceAll( "  }. "  +  Pattern.quote(File.separator),   " ".replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }. "  +  Pattern.quote(File.separator),   " ".replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  }. "  +  Pattern.quote(File.separator),   " ".replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
104	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
105	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(F  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(F  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(F	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
106	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ".  +  Pattern.quote(File  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ".  +  Pattern.quote(File  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ".  +  Pattern.quote(File	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
107	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".. "  +  Pattern.quote(File  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".. "  +  Pattern.quote(File  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".. "  +  Pattern.quote(File	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
108	[BUG]  [BUGGY]  if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix.substring(0,  DEFAULT_FILENAME_PREFI  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix.substring(0,  DEFAULT_FILENAME_PREFI  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix.substring(0,  DEFAULT_FILENAME_PREFI	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
109	[BUG]  [BUGGY]  if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix.substring(0,  DEFAULT_FILENAME_PREFIX  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix.substring(0,  DEFAULT_FILENAME_PREFIX  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix.substring(0,  DEFAULT_FILENAME_PREFIX	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
110	[BUG]  [BUGGY]  if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix.substring(0,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix.substring(0,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix.substring(0,  DEFAULT_FILENAME_PREFIX);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
111	[BUG]  [BUGGY]  if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix.substring(0,  DEFAULT_FILENAME_PREFIX.length());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix.substring(0,  DEFAULT_FILENAME_PREFIX.length());  }  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix.substring(0,  DEFAULT_FILENAME_PREFIX.length());  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
112	[BUG]  [BUGGY]  if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix;  }  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  filename.replaceAll( ". ")  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX);  filenamePrefix  =  suffix;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
113	[BUG]  [BUGGY]  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
114	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODUL  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODUL  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODUL	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
115	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
116	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
117	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")&&  all(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")&&  all(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")&&  all(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
118	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  ^.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  ^.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  ^.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
119	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   ". ").replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
120	[BUG]  [BUGGY]  &&  filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  &&  filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	&&  filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
121	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
122	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
123	[BUG]  [BUGGY]  &&  filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  &&  filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	&&  filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
124	[BUG]  [BUGGY]  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
125	[BUG]  [BUGGY]  filename.replaceAll( "[.   "  +  Pattern.quote(File.separator),   "] ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename.replaceAll( "[.   "  +  Pattern.quote(File.separator),   "] ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	filename.replaceAll( "[.   "  +  Pattern.quote(File.separator),   "] ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
126	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
127	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename  ==  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
128	[BUG]  [BUGGY]  &&  filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  &&  filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	&&  filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
129	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename!=  null)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator	  if(filename!=    null)    {    return    MODULE_NAME_PREFIX    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
130	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "-.  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "-.  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "-.  +  Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   "   ".    +    Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
131	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ".  +  Pattern.quote(File.separator),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ".  +  Pattern.quote(File.separator),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ".  +  Pattern.quote(File.separator),  MODULE_NAME	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   "   ".    +    Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
132	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  null).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  null).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  null).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
133	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.endsWith( ".java "))  {  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
134	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
135	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "-.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "-.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "-.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
136	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  *.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  *.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  *.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
137	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   " ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
138	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
139	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "- ".js$ ",  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "- ".js$ ",  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( "- ".js$ ",  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".js$   ",    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
140	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    File.separator    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
141	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  File.separator	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    File.separator    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
142	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  return  filename.replaceAll( "  }   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  return  filename.replaceAll( "  }   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.endsWith( ".java "))  {  return  filename.replaceAll( "  }   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    ^.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
143	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".js$ ",  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    ^.   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".js$   ",    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
144	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(1);  }  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
145	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  3);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  3);  }  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  3);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
146	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  4);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  4);  }  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  4);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
147	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
148	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.length()  ==  0)  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
149	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
150	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.endsWith( ".java "))  {  return  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
151	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quote(	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
152	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quot  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quot  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ".   "  +  Pattern.quot	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
153	[BUG]  [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ")  +  Pattern.quote(File  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ")  +  Pattern.quote(File  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll( ". ")  +  Pattern.quote(File	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
154	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.endsWith( ".java "))  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),    DEFAULT_FILENAME_PREFIX).replaceAll(   ".   "    +    Pattern.quote(File.    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
155	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
156	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.endsWith( ".java "))  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
157	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.length()  ==  0)  {  return  MODULE_NAME_PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),	  return    MODULE_NAME_PREFIX    +    filename.replaceAll(   ".   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
158	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "   ").replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
159	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(File.separator),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
160	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "/.* ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "/.* ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(File.separator),   "/.* ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
161	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   ". ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
162	[BUG]  [BUGGY]  if(filename.startsWith( ".java "))  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.startsWith( ".java "))  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.startsWith( ".java "))  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
163	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(File.separator),     "   ")  .replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	87	89	5	replace	if(filename.endsWith( ".java "))  {  return  filename.replaceAll( "  }.   "  +  Pattern.quote(File.separator),   "   ")).replaceAll(Pattern.quote(File.separator),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(File.separator),       "   ").replaceAll(Pattern.quote(File.separator),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
