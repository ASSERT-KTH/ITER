bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  module;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  module;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getRawParent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  filenamePrefix;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  filenamePrefix;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getRawParent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerInput(module);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerInput(module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerInput(module);	  this.compiler    =    compiler.getCompilerInput();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
4	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerInput(false);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerInput(false);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerInput(false);	  this.compiler    =    compiler.getCompilerInput();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
5	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerInput(null);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerInput(null);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerInput(null);	  this.compiler    =    compiler.getCompilerInput();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
6	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerInput(this.module);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerInput(this.module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerInput(this.module);	  this.compiler    =    compiler.getCompilerInput();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
7	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;var  a$$module$test=1	  var    module$test=    {    }    else    if(reportDependencies    >    0)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
8	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  var  module$test=  {  }  else  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies  >  0)  {  var  module$test=  {  }  else  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies  >  0)  {  var  module$test=  {  }  else  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies    >    0)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
9	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  var  module$test=  {  }  else  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies  >  0)  {  var  module$test=  {  }  else  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies  >  0)  {  var  module$test=  {  }  else  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(reportDependencies    >    0)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
10	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test. ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test. ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test. ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies    >    0)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
11	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  module  :  compiler;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  module  :  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  module  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    module;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
12	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  module_module;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  module_module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  module_module;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    module;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
13	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  modules;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  modules;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  modules;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    module;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
14	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  moduleBuilder;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  moduleBuilder;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  moduleBuilder;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    module;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
15	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
16	[BUG]  [BUGGY]  if(compiler  ==  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler  ==  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler  ==  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
17	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test   ");var  module$test=  {  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test   ");var  module$test=  {  }  ;var  a$$module$test=  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test   ");var  module$test=  {  }  ;var  a$$module$test=	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
18	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test   ");var  module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test   ");var  module$test=  {  }  ;var  a$$module$test=1  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test   ");var  module$test=  {  }  ;var  a$$module$test=1	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
19	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test   ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test   ");  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test   ");	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
20	[BUG]  [BUGGY]  if(this.compiler!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(this.compiler!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(this.compiler!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  if(module$test!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  var  module$test=  {  }  ;++A$$module$test;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;++A$$module$test;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;++A$$module$test;	  ;var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
23	[BUG]  [BUGGY]  var  module$test=  {  }  ;+a$$module$test;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;+a$$module$test;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;+a$$module$test;	  ;var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
24	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  }	  var    module$test=    {    }    ;++a$$module$test;    this.filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
25	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s	  var    module$test=    {    }    ;++a$$module$test;    this.filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
26	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator	  var    module$test=    {    }    ;++a$$module$test;    this.filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
27	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s	  var    module$test=    {    }    ;++a$$module$test;    this.filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
28	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;	  var    module$test=    {    }    ;++a$$module$test;    this.filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
29	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.se  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.se  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.se	  var    module$test=    {    }    ;++a$$module$test;    this.filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
30	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(compiler!=    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
31	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  reportDependencies  =  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  reportDependencies  =  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  reportDependencies  =	  var    module$test=    {    }    if(compiler!=    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
32	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  reportDependencies  =  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  reportDependencies  =  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  reportDependencies  =	  var    module$test=    {    }    if(compiler!=    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
33	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(compiler!=    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
34	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(compiler!=    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
35	[BUG]  [BUGGY]  this.compiler  =  compiler.getModuleCompiler();  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getModuleCompiler();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getModuleCompiler();	  this.compiler    =    compiler.getDefaultCompiler();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
36	[BUG]  [BUGGY]  this.compiler  =  compiler.getModule();  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getModule();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getModule();	  this.compiler    =    compiler.getDefaultCompiler();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
37	[BUG]  [BUGGY]  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  file  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  file  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  file	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
38	[BUG]  [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(this.module!=  null)  {  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
39	[BUG]  [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module!=  null)  {  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module!=  null)  {  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
40	[BUG]  [BUGGY]  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
41	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
42	[BUG]  [BUGGY]  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filename  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filename  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filename	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
43	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(true);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(true);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(true);	  this.compiler    =    compiler.getCompiler(false);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(false,  module);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(false,  module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(false,  module);	  this.compiler    =    compiler.getCompiler(false);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(false,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(false,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(false,  reportDependencies);	  this.compiler    =    compiler.getCompiler(false);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(false,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(false,  a$$module$test);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(false,  a$$module$test);	  this.compiler    =    compiler.getCompiler(false);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    compiler.isModuleSupported())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
48	[BUG]  [BUGGY]  if(compiler  ==  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler  ==  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler  ==  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    compiler.isModuleSupported())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
49	[BUG]  [BUGGY]  if(compiler  ==  null  ||  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler  ==  null  ||  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler  ==  null  ||  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    compiler.isModuleSupported())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
50	[BUG]  [BUGGY]  ||  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    compiler.isModuleSupported())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
51	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.hasModuleSupported())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  compiler.hasModuleSupported())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  compiler.hasModuleSupported())  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    compiler.isModuleSupported())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
52	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  modulePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  modulePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  modulePrefix  :  filenamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
53	[BUG]  [BUGGY]  a$$module$test.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
54	[BUG]  [BUGGY]  a$$module$test.startsWith(filenamePrefix)?  filenamePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(filenamePrefix)?  filenamePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(filenamePrefix)?  filenamePrefix  :  filenamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
55	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module$test  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module$test  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module$test  :  filenamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
56	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  filenamePrefix  :  module$test  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  filenamePrefix  :  module$test  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  filenamePrefix  :  module$test  +  File.separator;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
57	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(module,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(module,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(module,  DEFAULT_FILENAME_PREFIX);	  JSModule    module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
58	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(module,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(module,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(module,  reportDependencies);	  JSModule    module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
59	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(module,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(module,  filenamePrefix);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(module,  filenamePrefix);	  JSModule    module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
60	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(module,  false);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(module,  false);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(module,  false);	  JSModule    module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
61	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(modulePrefix);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(modulePrefix);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(modulePrefix);	  JSModule    module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
62	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  moduleDependencies;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  moduleDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  moduleDependencies;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    modules;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
63	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  modules[0];  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  modules[0];  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  modules[0];	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    modules;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
64	[BUG]  [BUGGY]  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(!modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(!modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
66	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module	  var    module$test=    {    }    else    if(!modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
67	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
68	[BUG]  [BUGGY]  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
69	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test!=  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test!=  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
70	[BUG]  [BUGGY]  var  module$test=  {  }  ;++a$$module$test!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;++a$$module$test!=  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;++a$$module$test!=  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
71	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix!=  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix!=  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
72	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test!=  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test!=  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
73	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
74	[BUG]  [BUGGY]  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
75	[BUG]  [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(this.module!=  null)  {  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(this.module!=  null)  {  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
76	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
77	[BUG]  [BUGGY]  if(this.module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(this.module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(this.module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
78	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
79	[BUG]  [BUGGY]  ||  compiler.isModule(module))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModule(module))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModule(module))  {  this.compiler  =  compiler;  }	  ||    compiler.isModule(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
80	[BUG]  [BUGGY]  ||  compiler.isModule(module,  filenamePrefix))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModule(module,  filenamePrefix))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModule(module,  filenamePrefix))  {  this.compiler  =  compiler;  }	  ||    compiler.isModule(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
81	[BUG]  [BUGGY]  ||  compiler.isModule(modulePrefix))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModule(modulePrefix))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModule(modulePrefix))  {  this.compiler  =  compiler;  }	  ||    compiler.isModule(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
82	[BUG]  [BUGGY]  ||  compiler.isModule(filenamePrefix,  reportDependencies))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModule(filenamePrefix,  reportDependencies))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModule(filenamePrefix,  reportDependencies))  {  this.compiler  =  compiler;  }	  ||    compiler.isModule(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
83	[BUG]  [BUGGY]  ||  compiler.isCompiler(filenamePrefix))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isCompiler(filenamePrefix))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isCompiler(filenamePrefix))  {  this.compiler  =  compiler;  }	  ||    compiler.isModule(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
84	[BUG]  [BUGGY]  ||  compiler.isModule(filenamePrefix))  {  this.compiler  =  module;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModule(filenamePrefix))  {  this.compiler  =  module;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModule(filenamePrefix))  {  this.compiler  =  module;  }	  ||    compiler.isModule(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
85	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(junit.framework.AssertionFailedError)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
86	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(junit.framework.AssertionFailedError)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
87	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Compiler.module;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Compiler.module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Compiler.module;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    Compiler.instance;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
88	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Compiler.class;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Compiler.class;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Compiler.class;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    Compiler.instance;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
89	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Compiler.Instance;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Compiler.Instance;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Compiler.Instance;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    Compiler.instance;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
90	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX);	  JSModule    module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
91	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule( "module$test ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule( "module$test ");  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule( "module$test ");	  JSModule    module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
92	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(false);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(false);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(false);	  JSModule    module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
93	[BUG]  [BUGGY]  final  JSModule  module  =  compiler.getModule();  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  final  JSModule  module  =  compiler.getModule();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	final  JSModule  module  =  compiler.getModule();	  JSModule    module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
94	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  module$test);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  module$test);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	junit.framework.AssertionFailedError:  goog.provide( "module$test ",  module$test);	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
95	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Goog.provide( "module$test ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  junit.framework.AssertionFailedError:  Goog.provide( "module$test ");  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	junit.framework.AssertionFailedError:  Goog.provide( "module$test ");	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
96	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  expected.provide( "module$test ");var  module$test=  {  }  ;var  module$test=1  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  junit.framework.AssertionFailedError:  expected.provide( "module$test ");var  module$test=  {  }  ;var  module$test=1  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	junit.framework.AssertionFailedError:  expected.provide( "module$test ");var  module$test=  {  }  ;var  module$test=1	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
97	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
98	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNext()  :  module;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNext()  :  module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNext()  :  module;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getNext()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
99	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getParameterCount()  :  compiler;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getParameterCount()  :  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getParameterCount()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getNext()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
100	[BUG]  [BUGGY]  a$$module$test.endsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.endsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.endsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
101	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator,  reportDependencies);	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
102	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module  :  File.separator  +  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module  :  File.separator  +  filenamePrefix;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module  :  File.separator  +  filenamePrefix;	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
103	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler    ||    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
104	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	This.compiler  =  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler    ||    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
105	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(junit.framework.AssertionFailedError)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
106	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(junit.framework.AssertionFailedError)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
107	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(junit.framework.AssertionFailedError)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
108	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module	  var    module$test=    {    }    else    if(junit.framework.AssertionFailedError)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
109	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(junit.framework.AssertionFailedError)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
110	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(compiler.getModule()!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(compiler.getModule()!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(compiler.getModule()!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.getModule()    ==    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
111	[BUG]  [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  this.module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  this.module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  this.module$test=  {  }	  this.module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
112	[BUG]  [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  this.module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  this.module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  this.module$test=  {  }	  this.module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
113	[BUG]  [BUGGY]  if(filenamePrefix.endsWith(File.separator))  {  this.module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.endsWith(File.separator))  {  this.module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.endsWith(File.separator))  {  this.module$test=  {  }	  this.module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
114	[BUG]  [BUGGY]  if(reportDependencies)  {  this.module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  this.module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  this.module$test=  {  }	  this.module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
115	[BUG]  [BUGGY]  this.module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module$test=  {  }  ;var  a$$module$test=1  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module$test=  {  }  ;var  a$$module$test=1	  this.module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
116	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  this.module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix!=  null)  {  this.module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix!=  null)  {  this.module$test=  {  }	  this.module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
117	[BUG]  [BUGGY]  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.s    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
118	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  modulePrefix  :  fileNamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  modulePrefix  :  fileNamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  modulePrefix  :  fileNamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    fileNamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
119	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  fileNamePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  fileNamePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  fileNamePrefix  :  filenamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    fileNamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
120	[BUG]  [BUGGY]  int  scriptNodeCount  =  compiler.getModuleCount()  -  1;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  int  scriptNodeCount  =  compiler.getModuleCount()  -  1;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	int  scriptNodeCount  =  compiler.getModuleCount()  -  1;	  int    scriptNodeCount    =    compiler.getModuleCount();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
121	[BUG]  [BUGGY]  int  scriptNodeCount  =  compiler.getModuleCount(module);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  int  scriptNodeCount  =  compiler.getModuleCount(module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	int  scriptNodeCount  =  compiler.getModuleCount(module);	  int    scriptNodeCount    =    compiler.getModuleCount();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
122	[BUG]  [BUGGY]  int  scriptNodeCount  =  compiler.getModuleCount()  +  1;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  int  scriptNodeCount  =  compiler.getModuleCount()  +  1;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	int  scriptNodeCount  =  compiler.getModuleCount()  +  1;	  int    scriptNodeCount    =    compiler.getModuleCount();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
123	[BUG]  [BUGGY]  int  scriptNodeCount  =  compiler.getModuleCount(0);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  int  scriptNodeCount  =  compiler.getModuleCount(0);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	int  scriptNodeCount  =  compiler.getModuleCount(0);	  int    scriptNodeCount    =    compiler.getModuleCount();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
124	[BUG]  [BUGGY]  int  scriptNodeCount  =  compiler.getModuleCount()  *  2;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  int  scriptNodeCount  =  compiler.getModuleCount()  *  2;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	int  scriptNodeCount  =  compiler.getModuleCount()  *  2;	  int    scriptNodeCount    =    compiler.getModuleCount();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
125	[BUG]  [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
126	[BUG]  [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
127	[BUG]  [BUGGY]  if(filenamePrefix.endsWith( ".java ")||  filenamePrefix.startsWith( ".java "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.endsWith( ".java ")||  filenamePrefix.startsWith( ".java "))  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.endsWith( ".java ")||  filenamePrefix.startsWith( ".java "))  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
128	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
129	[BUG]  [BUGGY]  if(filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
130	[BUG]  [BUGGY]  if(filenamePrefix.endsWith(File.separator)&&  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.endsWith(File.separator)&&  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.endsWith(File.separator)&&  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
131	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  compiler.getModule();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  compiler.getModule();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  compiler.getModule();	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.getDefaultCompiler();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
132	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getConfig();  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getConfig();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getConfig();	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.getDefaultCompiler();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
133	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getCurrentCompiler();  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getCurrentCompiler();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getCurrentCompiler();	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.getDefaultCompiler();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
134	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getDefaultCompiler(module);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getDefaultCompiler(module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getDefaultCompiler(module);	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.getDefaultCompiler();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
135	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  compiler.getDefaultCompiler();  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  compiler.getDefaultCompiler();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  compiler.getDefaultCompiler();	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.getDefaultCompiler();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
136	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  File.separator;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
137	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  filenamePrefix;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  filenamePrefix;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
138	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  DEFAULT_FILENAME_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  DEFAULT_FILENAME_SEPARATOR;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  DEFAULT_FILENAME_SEPARATOR;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
139	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
140	[BUG]  [BUGGY]  if(compiler.isModule())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler.isModule())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler.isModule())  {  this.compiler  =  compiler;  }	  if(compiler    ==    null    ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
141	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerForModule(module,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerForModule(module,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerForModule(module,  DEFAULT_FILENAME_PREFIX);	  this.compiler    =    compiler.getCompilerForModule(module);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
142	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerForModule(module,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerForModule(module,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerForModule(module,  reportDependencies);	  this.compiler    =    compiler.getCompilerForModule(module);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
143	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerForModule(module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerForModule(module,  a$$module$test);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerForModule(module,  a$$module$test);	  this.compiler    =    compiler.getCompilerForModule(module);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
144	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerForModule(module,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerForModule(module,  filenamePrefix);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerForModule(module,  filenamePrefix);	  this.compiler    =    compiler.getCompilerForModule(module);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
145	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerForModule(module,  module);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerForModule(module,  module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerForModule(module,  module);	  this.compiler    =    compiler.getCompilerForModule(module);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
146	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  it  =  this.modules.iterator();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  <  AbstractCompiler>  it  =  this.modules.iterator();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  <  AbstractCompiler>  it  =  this.modules.iterator();	  Iterator    <    AbstractCompiler>    it    =    compilers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
147	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  it  =  this.compilers.iterator();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  <  AbstractCompiler>  it  =  this.compilers.iterator();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  <  AbstractCompiler>  it  =  this.compilers.iterator();	  Iterator    <    AbstractCompiler>    it    =    compilers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
148	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  it  =  compilers.values().iterator();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  <  AbstractCompiler>  it  =  compilers.values().iterator();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  <  AbstractCompiler>  it  =  compilers.values().iterator();	  Iterator    <    AbstractCompiler>    it    =    compilers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
149	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  it  =  module.iterator();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  <  AbstractCompiler>  it  =  module.iterator();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  <  AbstractCompiler>  it  =  module.iterator();	  Iterator    <    AbstractCompiler>    it    =    compilers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
150	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  it  =  a$$modules.iterator();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  <  AbstractCompiler>  it  =  a$$modules.iterator();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  <  AbstractCompiler>  it  =  a$$modules.iterator();	  Iterator    <    AbstractCompiler>    it    =    compilers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
151	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  it  =  modules.iterator();  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  <  AbstractCompiler>  it  =  modules.iterator();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  <  AbstractCompiler>  it  =  modules.iterator();	  Iterator    <    AbstractCompiler>    it    =    compilers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
152	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
153	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
154	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  System.arraycopy(module,  0,  a$$module$test,  0,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  System.arraycopy(module,  0,  a$$module$test,  0,  reportDependencies);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;  System.arraycopy(module,  0,  a$$module$test,  0,  reportDependencies);  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
155	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  reportDependencies  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  reportDependencies  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  reportDependencies	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
156	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  reportDependencies  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  reportDependencies  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  reportDependencies	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
157	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  throw  new  IllegalStateException( " ");  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
158	[BUG]  [BUGGY]  TheCompiler  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  TheCompiler  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	TheCompiler  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  This.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
159	[BUG]  [BUGGY]  Iterator  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  This.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
160	[BUG]  [BUGGY]  this.compiler  =  compiler.getDefaultParent();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getDefaultParent();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getDefaultParent();	  this.compiler    =    compiler.getParent();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
161	[BUG]  [BUGGY]  this.compiler  =  compiler.getConfig();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getConfig();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getConfig();	  this.compiler    =    compiler.getParent();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
162	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  module  :(AbstractCompiler)module;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  module  :(AbstractCompiler)module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  module  :(AbstractCompiler)module;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)module;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
163	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  module  :(AbstractCompiler);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  module  :(AbstractCompiler);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  module  :(AbstractCompiler);	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)module;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
164	[BUG]  [BUGGY]  this.module  =  compiler.getModule(module,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(module,  filenamePrefix);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(module,  filenamePrefix);	  this.module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
165	[BUG]  [BUGGY]  this.module  =  compiler.getModule(module,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(module,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(module,  DEFAULT_FILENAME_PREFIX);	  this.module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
166	[BUG]  [BUGGY]  this.module  =  compiler.getModule(module,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(module,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(module,  reportDependencies);	  this.module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
167	[BUG]  [BUGGY]  this.module  =  compiler.getModule(module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(module,  a$$module$test);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(module,  a$$module$test);	  this.module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
168	[BUG]  [BUGGY]  this.module  =  compiler.getModule(module,  module);  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(module,  module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(module,  module);	  this.module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
169	[BUG]  [BUGGY]  this.module  =  compiler.getModule(module,  false);  [CE]  illegal  start  of  expression  [FE]                                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(module,  false);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(module,  false);	  this.module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
170	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  module;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  module;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getContent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
171	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  DEFAULT_FILENAME_PREFIX;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  DEFAULT_FILENAME_PREFIX;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  DEFAULT_FILENAME_PREFIX;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getContent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
172	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  filenamePrefix;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  filenamePrefix;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getContent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
173	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  sourceFile;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  sourceFile;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  sourceFile;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getContent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
174	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerFor(module,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerFor(module,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerFor(module,  reportDependencies);	  this.compiler    =    compiler.getCompilerFor(module);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
175	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerFor(module,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerFor(module,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerFor(module,  DEFAULT_FILENAME_PREFIX);	  this.compiler    =    compiler.getCompilerFor(module);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
176	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerFor(module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerFor(module,  a$$module$test);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerFor(module,  a$$module$test);	  this.compiler    =    compiler.getCompilerFor(module);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
177	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerFor(module,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerFor(module,  filenamePrefix);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerFor(module,  filenamePrefix);	  this.compiler    =    compiler.getCompilerFor(module);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
178	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerFor(module,  module);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerFor(module,  module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerFor(module,  module);	  this.compiler    =    compiler.getCompilerFor(module);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
179	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerFor(module,  false);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerFor(module,  false);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerFor(module,  false);	  this.compiler    =    compiler.getCompilerFor(module);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
180	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  module;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  module;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getName()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
181	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  DEFAULT_FILENAME_PREFIX;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  DEFAULT_FILENAME_PREFIX;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  DEFAULT_FILENAME_PREFIX;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getName()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
182	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  filenamePrefix;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  filenamePrefix;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getName()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
183	[BUG]  [BUGGY]  if(reportDependencies)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }	  Preconditions.checkState(filenamePrefix!=    null);    this.module$test    =    compiler.getModuleDependencies();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
184	[BUG]  [BUGGY]  this.module$test  =  compiler.getModuleDependencies();  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module$test  =  compiler.getModuleDependencies();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module$test  =  compiler.getModuleDependencies();	  Preconditions.checkState(filenamePrefix!=    null);    this.module$test    =    compiler.getModuleDependencies();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
185	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix!=  null)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix!=  null)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }	  Preconditions.checkState(filenamePrefix!=    null);    this.module$test    =    compiler.getModuleDependencies();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
186	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix  ==  null);  this.module$test  =  compiler.getModuleDependencies();  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix  ==  null);  this.module$test  =  compiler.getModuleDependencies();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix  ==  null);  this.module$test  =  compiler.getModuleDependencies();	  Preconditions.checkState(filenamePrefix!=    null);    this.module$test    =    compiler.getModuleDependencies();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
187	[BUG]  [BUGGY]  if(reportDependencies)  {  Preconditions.checkState(filenamePrefix  ==  null);  this.module$test  =  compiler.getModuleDependencies();  }  [CE]  illegal  start  of  expression  [FE]                                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  Preconditions.checkState(filenamePrefix  ==  null);  this.module$test  =  compiler.getModuleDependencies();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  Preconditions.checkState(filenamePrefix  ==  null);  this.module$test  =  compiler.getModuleDependencies();  }	  Preconditions.checkState(filenamePrefix!=    null);    this.module$test    =    compiler.getModuleDependencies();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
188	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  Preconditions.checkState(filenamePrefix  ==  null);  this.module$test  =  compiler.getModuleDependencies();  }  [CE]  illegal  start  of  expression  [FE]                                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix!=  null)  {  Preconditions.checkState(filenamePrefix  ==  null);  this.module$test  =  compiler.getModuleDependencies();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix!=  null)  {  Preconditions.checkState(filenamePrefix  ==  null);  this.module$test  =  compiler.getModuleDependencies();  }	  Preconditions.checkState(filenamePrefix!=    null);    this.module$test    =    compiler.getModuleDependencies();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
189	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(module,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(module,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(module,  reportDependencies);	  this.compiler    =    compiler.getCompiler(module);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
190	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(module,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(module,  filenamePrefix);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(module,  filenamePrefix);	  this.compiler    =    compiler.getCompiler(module);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
191	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(module,  a$$module$test);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(module,  a$$module$test);	  this.compiler    =    compiler.getCompiler(module);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
192	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(module,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(module,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(module,  DEFAULT_FILENAME_PREFIX);	  this.compiler    =    compiler.getCompiler(module);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
193	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(this.module);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(this.module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(this.module);	  this.compiler    =    compiler.getCompiler(module);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
194	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(module,  module);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(module,  module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(module,  module);	  this.compiler    =    compiler.getCompiler(module);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
195	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(null,  module);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(null,  module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(null,  module);	  this.compiler    =    compiler.getCompiler(null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
196	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(null,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(null,  a$$module$test);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(null,  a$$module$test);	  this.compiler    =    compiler.getCompiler(null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
197	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(null,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(null,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(null,  reportDependencies);	  this.compiler    =    compiler.getCompiler(null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
198	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  modulePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  modulePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  modulePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
199	[BUG]  [BUGGY]  a$$module$test.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
200	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  reportDependencies  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  reportDependencies  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  reportDependencies  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
201	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module$test  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module$test  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module$test  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
202	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  this.modulePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [CE]  illegal  start  of  expression  [FE]                                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  this.modulePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  this.modulePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
203	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(compiler,  module);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(compiler,  module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(compiler,  module);	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    new    Compiler(compiler);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
204	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(module);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(module);	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    new    Compiler(compiler);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
205	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(compiler,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(compiler,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(compiler,  reportDependencies);	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    new    Compiler(compiler);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
206	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(compiler,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(compiler,  filenamePrefix);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(compiler,  filenamePrefix);	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    new    Compiler(compiler);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
207	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(module,  compiler);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(module,  compiler);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  new  Compiler(module,  compiler);	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    new    Compiler(compiler);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
208	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  }	  var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
209	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  }	  var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
210	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  var  module$test=  {  }  ;++a$$module$test;  }	  var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
211	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  else  {  compiler.reportCodeChange();  }	  var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
212	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  else  {  compiler.reportCodeChange();  }	  var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
213	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  }  else  {  throw  new  IllegalStateException( " ");  }	  var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
214	[BUG]  [BUGGY]  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
215	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
216	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
217	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module	  var    module$test=    {    }    else    if(modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
218	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDe  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDe  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDe	  var    module$test=    {    }    if(compiler    ==    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
219	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  modules$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  modules$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  modules$test=  {  }	  var    modules$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
220	[BUG]  [BUGGY]  var  modules$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  modules$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  modules$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  module$test=  {  }	  var    modules$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
221	[BUG]  [BUGGY]  var  modules$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  modules$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  modules$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  module$test=  {  }	  var    modules$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
222	[BUG]  [BUGGY]  var  modules$test=  {  }  else  if(filenamePrefix.startsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  modules$test=  {  }  else  if(filenamePrefix.startsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  modules$test=  {  }  else  if(filenamePrefix.startsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  module$test=  {  }	  var    modules$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
223	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  modules$test=  {  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  var  modules$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  var  modules$test=  {  }	  var    modules$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
224	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
225	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(this.module$test!=  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(this.module$test!=  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
226	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  ==  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  ==  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  ==  }  ;++a$$module$test;  }	  var    module$test=    ==    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
227	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)module  :  compiler;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)module  :  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)module  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    module;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
228	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  moduleBuilder;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  moduleBuilder;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  moduleBuilder;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    module;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
229	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  module_module;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  module_module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  module_module;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    module;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
230	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  modulePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  modulePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  modulePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
231	[BUG]  [BUGGY]  a$$module$test.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
232	[BUG]  [BUGGY]  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.reportDependencies  =  reportDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.reportDependencies  =  reportDependencies;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
233	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  module$test;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  module$test;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  module$test;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
234	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  reportDependencies  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  reportDependencies  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  reportDependencies  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
235	[BUG]  [BUGGY]  a$$module$test.endsWith(File.separator)?  modulePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.endsWith(File.separator)?  modulePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.endsWith(File.separator)?  modulePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
236	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  ModuleBuilder.UNDEFINED;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  ModuleBuilder.UNDEFINED;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  ModuleBuilder.UNDEFINED;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
237	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Module.MODULE_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Module.MODULE_SEPARATOR;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Module.MODULE_SEPARATOR;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
238	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  module;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  module;	  This.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
239	[BUG]  [BUGGY]  TheCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  TheCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	TheCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  This.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
240	[BUG]  [BUGGY]  Iterator  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  This.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
241	[BUG]  [BUGGY]  Preconditions.checkState(this.filenamePrefix!=  null);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(this.filenamePrefix!=  null);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(this.filenamePrefix!=  null);	  Preconditions.checkState(filenamePrefix!=    null);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
242	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix!=  null  &&  filenamePrefix.length()  >  0);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix!=  null  &&  filenamePrefix.length()  >  0);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix!=  null  &&  filenamePrefix.length()  >  0);	  Preconditions.checkState(filenamePrefix!=    null);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
243	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix!=  null  ||  filenamePrefix.endsWith(File.separator));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix!=  null  ||  filenamePrefix.endsWith(File.separator));  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix!=  null  ||  filenamePrefix.endsWith(File.separator));	  Preconditions.checkState(filenamePrefix!=    null);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
244	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix!=  null  &&  filenamePrefix.endsWith(File.separator));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix!=  null  &&  filenamePrefix.endsWith(File.separator));  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix!=  null  &&  filenamePrefix.endsWith(File.separator));	  Preconditions.checkState(filenamePrefix!=    null);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
245	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix!=  null,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix!=  null,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix!=  null,  reportDependencies);	  Preconditions.checkState(filenamePrefix!=    null);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
246	[BUG]  [BUGGY]  ||  compiler  ==  null)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler  ==  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler  ==  null)  {  this.compiler  =  compiler;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
247	[BUG]  [BUGGY]  ||  reportDependencies)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  reportDependencies)  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  reportDependencies)  {  this.compiler  =  compiler;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
248	[BUG]  [BUGGY]  ||  module!=  null)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  module!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  module!=  null)  {  this.compiler  =  compiler;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
249	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler!=  null)  {  this.compiler  =  compiler;	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
250	[BUG]  [BUGGY]  ||  compiler.getModule()!=  null)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.getModule()!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.getModule()!=  null)  {  this.compiler  =  compiler;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
251	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler!=  null)  {  this.compiler  =  a$$module$test;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
252	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  DEFAULT_FILENAME_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  DEFAULT_FILENAME_SEPARATOR;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  DEFAULT_FILENAME_SEPARATOR;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
253	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  MODULE_NAME_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  MODULE_NAME_SEPARATOR;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  MODULE_NAME_SEPARATOR;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
254	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  DEFAULT_FILENAME_PREFIX  +  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  DEFAULT_FILENAME_PREFIX  +  filenamePrefix;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  DEFAULT_FILENAME_PREFIX  +  filenamePrefix;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
255	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    else    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
256	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
257	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(filenamePrefix);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(filenamePrefix);	  this.compiler    =    compiler.getCompiler(compiler);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
258	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test. ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test. ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test. ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.isModule())    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
259	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test/ ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test/ ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test/ ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.isModule())    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
260	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(this,  module);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(this,  module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(this,  module);	  this.compiler    =    compiler.getCompiler(this);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
261	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(this,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(this,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(this,  DEFAULT_FILENAME_PREFIX);	  this.compiler    =    compiler.getCompiler(this);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
262	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(this,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(this,  a$$module$test);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(this,  a$$module$test);	  this.compiler    =    compiler.getCompiler(this);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
263	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(this,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(this,  filenamePrefix);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(this,  filenamePrefix);	  this.compiler    =    compiler.getCompiler(this);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
264	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(this,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(this,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(this,  reportDependencies);	  this.compiler    =    compiler.getCompiler(this);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
265	[BUG]  [BUGGY]  if(module$test  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }	  if(compiler    ==    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
266	[BUG]  [BUGGY]  a$$module$test.endsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.endsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.endsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
267	[BUG]  [BUGGY]  if(module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
268	[BUG]  [BUGGY]  ||  compiler.isModuleSupported(module))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModuleSupported(module))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModuleSupported(module))  {  this.compiler  =  compiler;  }	  ||    compiler.isModuleSupported(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
269	[BUG]  [BUGGY]  ||  compiler.isModuleSupported(filenamePrefix,  reportDependencies))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModuleSupported(filenamePrefix,  reportDependencies))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModuleSupported(filenamePrefix,  reportDependencies))  {  this.compiler  =  compiler;  }	  ||    compiler.isModuleSupported(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
270	[BUG]  [BUGGY]  ||  compiler.isModuleSupported(filenamePrefix  +  File.separator))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModuleSupported(filenamePrefix  +  File.separator))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModuleSupported(filenamePrefix  +  File.separator))  {  this.compiler  =  compiler;  }	  ||    compiler.isModuleSupported(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
271	[BUG]  [BUGGY]  ||  compiler.isModuleSupported(module,  filenamePrefix))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModuleSupported(module,  filenamePrefix))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModuleSupported(module,  filenamePrefix))  {  this.compiler  =  compiler;  }	  ||    compiler.isModuleSupported(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
272	[BUG]  [BUGGY]  ||  compiler.isModuleSupported(modulePrefix))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModuleSupported(modulePrefix))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModuleSupported(modulePrefix))  {  this.compiler  =  compiler;  }	  ||    compiler.isModuleSupported(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
273	[BUG]  [BUGGY]  ||  compiler.isModuleSupported(filenamePrefix))  {  this.compiler  =  module;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModuleSupported(filenamePrefix))  {  this.compiler  =  module;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModuleSupported(filenamePrefix))  {  this.compiler  =  module;  }	  ||    compiler.isModuleSupported(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
274	[BUG]  [BUGGY]  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    else    if(compiler.getModules().contains(   "module$test   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;++a$    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
275	[BUG]  [BUGGY]  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.getModules().contains(   "module$test   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;++a$    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
276	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test   "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test   "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test   "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(compiler.getModules().contains(   "module$test   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;++a$    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
277	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test   "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test   "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test   "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(compiler.getModules().contains(   "module$test   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;++a$    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
278	[BUG]  [BUGGY]  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(!modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
279	[BUG]  [BUGGY]  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(!modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
280	[BUG]  [BUGGY]  if(!modulePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(!modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
281	[BUG]  [BUGGY]  if(!modulePrefix.endsWith(File.separator)&&!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.endsWith(File.separator)&&!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.endsWith(File.separator)&&!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    if(!modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
282	[BUG]  [BUGGY]  if(modulePrefix.endsWith(File.separator))  {  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(modulePrefix.endsWith(File.separator))  {  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(modulePrefix.endsWith(File.separator))  {  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    if(!modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
283	[BUG]  [BUGGY]  ||  compiler.isModule())  {  this.compiler  =  module;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModule())  {  this.compiler  =  module;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModule())  {  this.compiler  =  module;  }	  ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
284	[BUG]  [BUGGY]  ||  compiler.isAssignableFrom(module))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isAssignableFrom(module))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isAssignableFrom(module))  {  this.compiler  =  compiler;  }	  ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
285	[BUG]  [BUGGY]  ||  compiler.isExtern())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isExtern())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isExtern())  {  this.compiler  =  compiler;  }	  ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
286	[BUG]  [BUGGY]  ||  compiler.isAbstract())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isAbstract())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isAbstract())  {  this.compiler  =  compiler;  }	  ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
287	[BUG]  [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isInterface())  {  this.compiler  =  compiler;  }	  ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
288	[BUG]  [BUGGY]  ||  compiler.isConstructor())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isConstructor())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isConstructor())  {  this.compiler  =  compiler;  }	  ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
289	[BUG]  [BUGGY]  if(module  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }	  if(module!=    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
290	[BUG]  [BUGGY]  Preconditions.checkState(this.filenamePrefix  ==  null);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(this.filenamePrefix  ==  null);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(this.filenamePrefix  ==  null);	  Preconditions.checkState(filenamePrefix    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
291	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix  ==  null,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix  ==  null,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix  ==  null,  reportDependencies);	  Preconditions.checkState(filenamePrefix    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
292	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  module$test=  {  }	  var    module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
293	[BUG]  [BUGGY]  var  module$test=  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=	  var    module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
294	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  module$test=  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  module$test=  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  module$test=	  var    module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
295	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  throw  new  IllegalStateException( " ");  }	  var    module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
296	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  module$test=  {  }	  var    module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
297	[BUG]  [BUGGY]  if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(!modulePrefix.endsWith(   ".java   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
298	[BUG]  [BUGGY]  if(!modulePrefix.endsWith( "java   "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.endsWith( "java   "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.endsWith( "java   "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(!modulePrefix.endsWith(   ".java   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
299	[BUG]  [BUGGY]  if(modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(!modulePrefix.endsWith(   ".java   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
300	[BUG]  [BUGGY]  if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(!modulePrefix.endsWith(   ".java   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
301	[BUG]  [BUGGY]  if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }	  var    module$test=    {    }    if(!modulePrefix.endsWith(   ".java   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
302	[BUG]  [BUGGY]  if(reportDependencies)  {  var  modules$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  modules$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  modules$test=  {  }  ;++a$$module$test;  }	  var    modules$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
303	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  modules$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  modules$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  modules$test=  {  }  ;++a$$module$test;  }	  var    modules$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
304	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  modules$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  var  modules$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  var  modules$test=  {  }  ;++a$$module$test;  }	  var    modules$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
305	[BUG]  [BUGGY]  if(!modulePrefix.startsWith( "module$test "))  {  var  modules$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.startsWith( "module$test "))  {  var  modules$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.startsWith( "module$test "))  {  var  modules$test=  {  }  ;++a$$module$test;  }	  var    modules$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
306	[BUG]  [BUGGY]  if(!modulePrefix.endsWith( ".java "))  {  var  modules$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.endsWith( ".java "))  {  var  modules$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.endsWith( ".java "))  {  var  modules$test=  {  }  ;++a$$module$test;  }	  var    modules$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
307	[BUG]  [BUGGY]  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.separator;	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
308	[BUG]  [BUGGY]  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
309	[BUG]  [BUGGY]  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  File.separator  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  File.separator  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  File.separator  :  filenamePrefix  +  File.separator;	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
310	[BUG]  [BUGGY]  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  sourceNamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  sourceNamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  sourceNamePrefix  +  File.separator;	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
311	[BUG]  [BUGGY]  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.s  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.s  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator  :  filenamePrefix  +  File.s	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
312	[BUG]  [BUGGY]  filenamePrefix  =  compiler.getFileNamePrefix();  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  filenamePrefix  =  compiler.getFileNamePrefix();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	filenamePrefix  =  compiler.getFileNamePrefix();	  if(filenamePrefix!=    null)    {    filenamePrefix    =    compiler.getFileNamePrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
313	[BUG]  [BUGGY]  if(filenamePrefix  ==  null)  {  filenamePrefix  =  compiler.getFileNamePrefix();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix  ==  null)  {  filenamePrefix  =  compiler.getFileNamePrefix();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix  ==  null)  {  filenamePrefix  =  compiler.getFileNamePrefix();  }	  if(filenamePrefix!=    null)    {    filenamePrefix    =    compiler.getFileNamePrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
314	[BUG]  [BUGGY]  ||  filenamePrefix!=  null)  {  filenamePrefix  =  compiler.getFileNamePrefix();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  filenamePrefix!=  null)  {  filenamePrefix  =  compiler.getFileNamePrefix();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  filenamePrefix!=  null)  {  filenamePrefix  =  compiler.getFileNamePrefix();  }	  if(filenamePrefix!=    null)    {    filenamePrefix    =    compiler.getFileNamePrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
315	[BUG]  [BUGGY]  this.filenamePrefix  =  compiler.getFileNamePrefix();  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.filenamePrefix  =  compiler.getFileNamePrefix();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.filenamePrefix  =  compiler.getFileNamePrefix();	  if(filenamePrefix!=    null)    {    filenamePrefix    =    compiler.getFileNamePrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
316	[BUG]  [BUGGY]  FilenamePrefix  =  compiler.getFileNamePrefix();  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  FilenamePrefix  =  compiler.getFileNamePrefix();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	FilenamePrefix  =  compiler.getFileNamePrefix();	  if(filenamePrefix!=    null)    {    filenamePrefix    =    compiler.getFileNamePrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
317	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  modulePrefix  :  fileNamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  modulePrefix  :  fileNamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  modulePrefix  :  fileNamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    fileNamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
318	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNamespace()  :  module;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNamespace()  :  module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNamespace()  :  module;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getNamespace()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
319	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNamespace()  :  DEFAULT_FILENAME_PREFIX;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNamespace()  :  DEFAULT_FILENAME_PREFIX;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNamespace()  :  DEFAULT_FILENAME_PREFIX;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getNamespace()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
320	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModuleName()  :  compiler;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModuleName()  :  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModuleName()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getNamespace()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
321	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNamespace()  :  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNamespace()  :  filenamePrefix;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNamespace()  :  filenamePrefix;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getNamespace()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
322	[BUG]  [BUGGY]  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator:  expected.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator:  expected.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  +  File.separator:  expected.provide( "module$test ");var  module$test=  {  }  ;	  junit.framework.AssertionFailedError:    expected.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
323	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.newInstance(module);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.newInstance(module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.newInstance(module);	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.newInstance();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
324	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.newInstance(module,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.newInstance(module,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.newInstance(module,  reportDependencies);	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.newInstance();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
325	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.newInstance(false);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.newInstance(false);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.newInstance(false);	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.newInstance();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
326	[BUG]  [BUGGY]  if(compiler!=  null  &&  filenamePrefix.endsWith( ".js "))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  filenamePrefix.endsWith( ".js "))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  filenamePrefix.endsWith( ".js "))  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    filenamePrefix.endsWith(   ".js   "))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
327	[BUG]  [BUGGY]  if(compiler!=  null  &&  filenamePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  filenamePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  filenamePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    filenamePrefix.endsWith(   ".js   "))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
328	[BUG]  [BUGGY]  ||  filenamePrefix.endsWith( ".js "))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  filenamePrefix.endsWith( ".js "))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  filenamePrefix.endsWith( ".js "))  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    filenamePrefix.endsWith(   ".js   "))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
329	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  module_module;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  module_module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  module_module;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    module;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
330	[BUG]  [BUGGY]  this.module  =  compiler.getModule(false);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(false);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(false);	  this.module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
331	[BUG]  [BUGGY]  this.module  =  compiler.getModule(null);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(null);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(null);	  this.module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
332	[BUG]  [BUGGY]  this.module  =  compiler.getModule( "module$test ");  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule( "module$test ");  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule( "module$test ");	  this.module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
333	[BUG]  [BUGGY]  this.module  =  compiler.getModule(0);  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(0);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(0);	  this.module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
334	[BUG]  [BUGGY]  if(filenamePrefix!=  null  ||  filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix!=  null  ||  filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix!=  null  ||  filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    filenamePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
335	[BUG]  [BUGGY]  if(compiler!=  null  &&  filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    filenamePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
336	[BUG]  [BUGGY]  if(compiler  ==  null  ||  filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler  ==  null  ||  filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler  ==  null  ||  filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    filenamePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
337	[BUG]  [BUGGY]  ||  filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    filenamePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
338	[BUG]  [BUGGY]  if(compiler!=  null  ||  filenamePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  ||  filenamePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  ||  filenamePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    filenamePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
339	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  File.separator;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
340	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  filenamePrefix;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  filenamePrefix;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
341	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
342	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  1;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  1;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_PREFIX  +  1;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
343	[BUG]  [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {	  var    module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
344	[BUG]  [BUGGY]  if(filenamePrefix.startsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.startsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.startsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  }	  var    module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
345	[BUG]  [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  var  module$test=  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  var  module$test=  {  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  var  module$test=  {	  var    module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
346	[BUG]  [BUGGY]  if(filenamePrefix.startsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.startsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.startsWith(File.separator)||  filenamePrefix.endsWith(File.separator))  {  var  module$test=  {	  var    module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
347	[BUG]  [BUGGY]  AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
348	[BUG]  [BUGGY]  AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;this.compiler  =  compiler;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;this.compiler  =  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;this.compiler  =  compiler;	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
349	[BUG]  [BUGGY]  This.compiler  =  compiler.getCompiler();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  This.compiler  =  compiler.getCompiler();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	This.compiler  =  compiler.getCompiler();	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
350	[BUG]  [BUGGY]  AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;This.compiler  =  compiler;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;This.compiler  =  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;This.compiler  =  compiler;	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
351	[BUG]  [BUGGY]  if(compiler!=  null)  {  This.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  This.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  This.compiler  =  compiler;  }	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
352	[BUG]  [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES,  reportDependencies);	  boolean    reportDependencies    =    compiler.isEnabled(Feature.FLUSH_PASSED_MODULES);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
353	[BUG]  [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES  ||  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES  ||  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES  ||  reportDependencies);	  boolean    reportDependencies    =    compiler.isEnabled(Feature.FLUSH_PASSED_MODULES);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
354	[BUG]  [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES,  reportDependencies));  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES,  reportDependencies));  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES,  reportDependencies));	  boolean    reportDependencies    =    compiler.isEnabled(Feature.FLUSH_PASSED_MODULES);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
355	[BUG]  [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES)&&  filenamePrefix.endsWith(File.separator);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES)&&  filenamePrefix.endsWith(File.separator);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES)&&  filenamePrefix.endsWith(File.separator);	  boolean    reportDependencies    =    compiler.isEnabled(Feature.FLUSH_PASSED_MODULES);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
356	[BUG]  [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES)&&  goog.provide( "module$test   ");  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES)&&  goog.provide( "module$test   ");  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES)&&  goog.provide( "module$test   ");	  boolean    reportDependencies    =    compiler.isEnabled(Feature.FLUSH_PASSED_MODULES);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
357	[BUG]  [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES  ||  reportDependencies)  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES  ||  reportDependencies)  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES  ||  reportDependencies)	  boolean    reportDependencies    =    compiler.isEnabled(Feature.FLUSH_PASSED_MODULES);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
358	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(compiler.isExtern())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test/ ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(compiler.isExtern())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test/ ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(compiler.isExtern())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test/ ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.isExtern())    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
359	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(compiler.isExtern())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test1 ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(compiler.isExtern())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test1 ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(compiler.isExtern())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test1 ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.isExtern())    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
360	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test. ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test. ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test. ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
361	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test/ ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test/ ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test/ ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
362	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test1 ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test1 ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test1 ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
363	[BUG]  [BUGGY]  if(a$$module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(a$$module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(a$$module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  }	  var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
364	[BUG]  [BUGGY]  if(!module.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  var  module$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!module.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  var  module$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!module.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  var  module$test=  {  }  ;++a$$module$test;  }	  var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
365	[BUG]  [BUGGY]  if(a$$module$test!=  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(a$$module$test!=  null)  {  var  module$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(a$$module$test!=  null)  {  var  module$test=  {  }  ;++a$$module$test;  }	  var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
366	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_SEPARATOR;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.DEFAULT_FILENAME_SEPARATOR;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
367	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix  ==  null  &&  filenamePrefix.length()  >  0);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix  ==  null  &&  filenamePrefix.length()  >  0);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix  ==  null  &&  filenamePrefix.length()  >  0);	  Preconditions.checkState(filenamePrefix    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
368	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix!=  null  &&  filenamePrefix.length()  ==  0);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix!=  null  &&  filenamePrefix.length()  ==  0);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix!=  null  &&  filenamePrefix.length()  ==  0);	  Preconditions.checkState(filenamePrefix    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
369	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix  >=  null);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix  >=  null);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix  >=  null);	  Preconditions.checkState(filenamePrefix    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
370	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test/module$test ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test/module$test ");  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	junit.framework.AssertionFailedError:  goog.provide( "module$test/module$test ");	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
371	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test ".getName());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test ".getName());  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	junit.framework.AssertionFailedError:  goog.provide( "module$test ".getName());	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
372	[BUG]  [BUGGY]  if(!modules.contains(filenamePrefix))  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modules.contains(filenamePrefix))  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modules.contains(filenamePrefix))  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
373	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(File.separator);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(File.separator);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(File.separator);	  JSModule    module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
374	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModuleParent()  :  compiler;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModuleParent()  :  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModuleParent()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getRawParent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
375	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator  +  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator  +  filenamePrefix;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator  +  filenamePrefix;	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
376	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator  +  1;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator  +  1;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator  +  1;	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
377	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module  +  File.separator  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module  +  File.separator  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module  +  File.separator  :  filenamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
378	[BUG]  [BUGGY]  this.compiler  =  compiler.getOptionalCompiler();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getOptionalCompiler();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getOptionalCompiler();	  this.compiler    =    compiler.getParent();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
379	[BUG]  [BUGGY]  this.compiler  =  compiler.getOwnerFactory();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getOwnerFactory();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getOwnerFactory();	  this.compiler    =    compiler.getParent();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
380	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
381	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix!=  null)  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix!=  null)  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
382	[BUG]  [BUGGY]  if(filenamePrefix  ==  null)  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix  ==  null)  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix  ==  null)  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
383	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies  >  0)  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies  >  0)  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
384	[BUG]  [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
385	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
386	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
387	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
388	[BUG]  [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  ;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
389	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.hasModule())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  compiler.hasModule())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  compiler.hasModule())  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
390	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  moduleFactory;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  moduleFactory;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  moduleFactory;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    module;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
391	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  modules;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  modules;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  modules;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    module;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
392	[BUG]  [BUGGY]  if(compiler.getModule()  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler.getModule()  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler.getModule()  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.getModule()    ==    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
393	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  Compiler.DEFAULT_FILENAME_PREFIX;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  Compiler.DEFAULT_FILENAME_PREFIX;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler!=  null)  {  this.compiler  =  Compiler.DEFAULT_FILENAME_PREFIX;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
394	[BUG]  [BUGGY]  ||  compiler.getParent()!=  null)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.getParent()!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.getParent()!=  null)  {  this.compiler  =  compiler;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
395	[BUG]  [BUGGY]  ||  compiler  >=  null)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler  >=  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler  >=  null)  {  this.compiler  =  compiler;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
396	[BUG]  [BUGGY]  if(this.compiler!=  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(this.compiler!=  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(this.compiler!=  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
397	[BUG]  [BUGGY]  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
398	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  it  =  compilers.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  <  AbstractCompiler>  it  =  compilers.entrySet().iterator();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  <  AbstractCompiler>  it  =  compilers.entrySet().iterator();	  Iterator    <    AbstractCompiler>    it    =    compilers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
399	[BUG]  [BUGGY]  if(!modulePrefix.startsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.startsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.startsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(!modulePrefix.endsWith(   ".java   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
400	[BUG]  [BUGGY]  if(modulePrefix!=  null)  {  var  module$test=  {  }  ;  if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(modulePrefix!=  null)  {  var  module$test=  {  }  ;  if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(modulePrefix!=  null)  {  var  module$test=  {  }  ;  if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    if(!modulePrefix.endsWith(   ".java   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
401	[BUG]  [BUGGY]  if(module$test  >=  null)  {  var  modules$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  >=  null)  {  var  modules$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  >=  null)  {  var  modules$test=  {  }	  var    modules$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
402	[BUG]  [BUGGY]  if(module$test  ==  false)  {  var  modules$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  false)  {  var  modules$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  false)  {  var  modules$test=  {  }	  var    modules$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
403	[BUG]  [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
404	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module$test  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module$test  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module$test  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
405	[BUG]  [BUGGY]  a$$module$test.startsWith(File.pathSeparator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.pathSeparator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.pathSeparator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
406	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerForModule(module,  false);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerForModule(module,  false);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerForModule(module,  false);	  this.compiler    =    compiler.getCompilerForModule(module);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
407	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.module$test  =  compiler.getModuleDependencies();  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.module$test  =  compiler.getModuleDependencies();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(compiler!=  null);  this.module$test  =  compiler.getModuleDependencies();	  Preconditions.checkState(filenamePrefix!=    null);    this.module$test    =    compiler.getModuleDependencies();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
408	[BUG]  [BUGGY]  Preconditions.checkState(modulePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(modulePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(modulePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();	  Preconditions.checkState(filenamePrefix!=    null);    this.module$test    =    compiler.getModuleDependencies();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
409	[BUG]  [BUGGY]  if(!modules.isEmpty())  {  var  modules$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modules.isEmpty())  {  var  modules$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modules.isEmpty())  {  var  modules$test=  {  }  ;++a$$module$test;  }	  var    modules$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
410	[BUG]  [BUGGY]  if(a$$module$test  ==  null)  {  var  modules$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(a$$module$test  ==  null)  {  var  modules$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(a$$module$test  ==  null)  {  var  modules$test=  {  }  ;++a$$module$test;  }	  var    modules$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
411	[BUG]  [BUGGY]  if(!modules.contains(module))  {  var  modules$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modules.contains(module))  {  var  modules$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modules.contains(module))  {  var  modules$test=  {  }  ;++a$$module$test;  }	  var    modules$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
412	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_SEPARATOR;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.DEFAULT_FILENAME_SEPARATOR;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.DEFAULT_FILENAME_PREFIX;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
413	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  +  1;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  +  1;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  +  1;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    fileNamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
414	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module$test  :  fileNamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module$test  :  fileNamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module$test  :  fileNamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    fileNamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
415	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  +  fileNamePrefix;  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  +  fileNamePrefix;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  +  fileNamePrefix;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    fileNamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
416	[BUG]  [BUGGY]  var  module$test=  ==  }  ;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  ==  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  ==  }  ;	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
417	[BUG]  [BUGGY]  var  modules$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  modules$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  modules$test=  {  }  ;	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
418	[BUG]  [BUGGY]  ||  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  module$test=  {  }  ;	  junit.framework.AssertionFailedError:    Expected:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
419	[BUG]  [BUGGY]  var  module$test=  {  }  ;++a$$module$test  =1  ==  ProcessCommonJSModules(compiler,  filenamePrefix,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;++a$$module$test  =1  ==  ProcessCommonJSModules(compiler,  filenamePrefix,  reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;++a$$module$test  =1  ==  ProcessCommonJSModules(compiler,  filenamePrefix,  reportDependencies);	  ;var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
420	[BUG]  [BUGGY]  var  module$test=  {  }  ;++a$$module$test  =1  ==  ProcessCommonJSModules(compiler,  filenamePrefix,  reportDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;++a$$module$test  =1  ==  ProcessCommonJSModules(compiler,  filenamePrefix,  reportDependencies)  {  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;++a$$module$test  =1  ==  ProcessCommonJSModules(compiler,  filenamePrefix,  reportDependencies)  {	  ;var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
421	[BUG]  [BUGGY]  var  module$test=  {  }  ;++a$$module$test  =1  ==  ProcessCommonJSModules(compiler,  filenamePrefix  +  File.separator);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  ;++a$$module$test  =1  ==  ProcessCommonJSModules(compiler,  filenamePrefix  +  File.separator);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  ;++a$$module$test  =1  ==  ProcessCommonJSModules(compiler,  filenamePrefix  +  File.separator);	  ;var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
422	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Module.VAR;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Module.VAR;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Module.VAR;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
423	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  +  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  +  filenamePrefix;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  +  filenamePrefix;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
424	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(reportDependencies);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(reportDependencies);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(reportDependencies);	  this.compiler    =    compiler.getCompiler(compiler);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
425	[BUG]  [BUGGY]  var  module$test=  >>  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  >>  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  >>  }	  var    module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
426	[BUG]  [BUGGY]  var  module$test=  [Delete]  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  [Delete]  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  [Delete]	  var    module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
427	[BUG]  [BUGGY]  if(modulePrefix!=  null)  {  var  module$test=  {  }  ;  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(modulePrefix!=  null)  {  var  module$test=  {  }  ;  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(modulePrefix!=  null)  {  var  module$test=  {  }  ;  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    if(!modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
428	[BUG]  [BUGGY]  if(modulePrefix  ==  null)  {  var  module$test=  {  }  ;  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(modulePrefix  ==  null)  {  var  module$test=  {  }  ;  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(modulePrefix  ==  null)  {  var  module$test=  {  }  ;  if(!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    if(!modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
429	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  <  AbstractCompiler>  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  <  AbstractCompiler>  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  This.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
430	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  ==  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  var  module$test=  ==  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  var  module$test=  ==  }  ;++a$$module$test;  }	  var    module$test=    ==    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
431	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  ==  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  ==  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  ==  }  ;++a$$module$test;  }	  var    module$test=    ==    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
432	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(ReportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(ReportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(ReportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
433	[BUG]  [BUGGY]  if(!modulePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(!modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
434	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies    >    0)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
435	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(reportDependencies  >  1)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(reportDependencies  >  1)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(reportDependencies  >  1)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies    >    0)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
436	[BUG]  [BUGGY]  if(module$test!=  null)  {  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
437	[BUG]  [BUGGY]  if(module$test  ==  null)  {  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
438	[BUG]  [BUGGY]  a$$module$test.startsWith(File.pathSeparator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.pathSeparator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.pathSeparator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
439	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(junit.framework.AssertionFailedError)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
440	[BUG]  [BUGGY]  if(this.compiler!=  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(this.compiler!=  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(this.compiler!=  null)  {  var  module$test=  {  }  else  if(junit.framework.AssertionFailedError)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(junit.framework.AssertionFailedError)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
441	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(null,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(null,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(null,  DEFAULT_FILENAME_PREFIX);	  this.compiler    =    compiler.getCompiler(null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
442	[BUG]  [BUGGY]  ||  compiler.isModuleSupported(filenamePrefix),  reportDependencies)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModuleSupported(filenamePrefix),  reportDependencies)  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModuleSupported(filenamePrefix),  reportDependencies)  {  this.compiler  =  compiler;  }	  ||    compiler.isModuleSupported(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
443	[BUG]  [BUGGY]  ||  compiler.hasModuleSupported(filenamePrefix))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.hasModuleSupported(filenamePrefix))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.hasModuleSupported(filenamePrefix))  {  this.compiler  =  compiler;  }	  ||    compiler.isModuleSupported(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
444	[BUG]  [BUGGY]  ||  compiler.isModuleSupported(filenamePrefix)&&!moduleDependencies)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModuleSupported(filenamePrefix)&&!moduleDependencies)  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModuleSupported(filenamePrefix)&&!moduleDependencies)  {  this.compiler  =  compiler;  }	  ||    compiler.isModuleSupported(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
445	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.endsWith( ".js "))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  compiler.endsWith( ".js "))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  compiler.endsWith( ".js "))  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    filenamePrefix.endsWith(   ".js   "))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
446	[BUG]  [BUGGY]  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.isModule())    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
447	[BUG]  [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  else  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  else  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  var  module$test=  {  }  else  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.isModule())    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
448	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(compiler.hasModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(compiler.hasModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(compiler.hasModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.isModule())    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
449	[BUG]  [BUGGY]  if(!module.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!module.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!module.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  var  module$test=  {  }	  var    module$test=    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
450	[BUG]  [BUGGY]  if(filenamePrefix  ==  null)  {  this.module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix  ==  null)  {  this.module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix  ==  null)  {  this.module$test=  {  }	  this.module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
451	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  this.module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies  >  0)  {  this.module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies  >  0)  {  this.module$test=  {  }	  this.module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
452	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)source;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)source;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)source;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)module;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
453	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  file  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  file  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  file	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
454	[BUG]  [BUGGY]  if(module  <  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module  <  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module  <  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
455	[BUG]  [BUGGY]  if(module  >  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module  >  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module  >  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
456	[BUG]  [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test  >=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test  >=  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies)  {  var  module$test=  {  }  ;++a$$module$test  >=  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
457	[BUG]  [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(compiler.getModules().contains(   "module$test   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
458	[BUG]  [BUGGY]  if(compiler  ==  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler  ==  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler  ==  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(compiler.getModules().contains(   "module$test   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
459	[BUG]  [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "modul  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "modul  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "modul	  var    module$test=    {    }    else    if(compiler.getModules().contains(   "module$test   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
460	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getGlobalCompiler();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getGlobalCompiler();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getGlobalCompiler();	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.getDefaultCompiler();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
461	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getFactory();  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getFactory();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getFactory();	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.getDefaultCompiler();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
462	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getDefaultCompiler(compiler);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getDefaultCompiler(compiler);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getDefaultCompiler(compiler);	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.getDefaultCompiler();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
463	[BUG]  [BUGGY]  File  filenamePrefix  =  compiler.getFileNamePrefix();  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  File  filenamePrefix  =  compiler.getFileNamePrefix();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	File  filenamePrefix  =  compiler.getFileNamePrefix();	  if(filenamePrefix!=    null)    {    filenamePrefix    =    compiler.getFileNamePrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
464	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  DEFAULT_FILENAME_PREFIX  :  DEFAULT_FILENAME_PREFIX  +  File.separator;  this.reportDependencies  =  EXPORTS  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  DEFAULT_FILENAME_PREFIX  :  DEFAULT_FILENAME_PREFIX  +  File.separator;  this.reportDependencies  =  EXPORTS  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  DEFAULT_FILENAME_PREFIX  :  DEFAULT_FILENAME_PREFIX  +  File.separator;  this.reportDependencies  =  EXPORTS	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
465	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  DEFAULT_FILENAME_PREFIX  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  DEFAULT_FILENAME_PREFIX  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  DEFAULT_FILENAME_PREFIX  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
466	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  DEFAULT_FILENAME_PREFIX  :  DEFAULT_FILENAME_PREFIX  +  File.separator;  this.reportDependencies  =  EXPORTS;  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  DEFAULT_FILENAME_PREFIX  :  DEFAULT_FILENAME_PREFIX  +  File.separator;  this.reportDependencies  =  EXPORTS;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  DEFAULT_FILENAME_PREFIX  :  DEFAULT_FILENAME_PREFIX  +  File.separator;  this.reportDependencies  =  EXPORTS;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
467	[BUG]  [BUGGY]  a$$module$test.startsWith(File.pathSeparator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.pathSeparator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.pathSeparator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
468	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  Compiler.DEFAULT_FILENAME_PREFIX;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  Compiler.DEFAULT_FILENAME_PREFIX;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  Compiler.DEFAULT_FILENAME_PREFIX;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getContent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
469	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.newInstance(this.module);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.newInstance(this.module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.newInstance(this.module);	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.newInstance();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
470	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(compiler!=    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
471	[BUG]  [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  var  module$test=  {  }  ;  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(compiler!=    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
472	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerFor(module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerFor(module$test);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerFor(module$test);	  this.compiler    =    compiler.getCompilerFor(module);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
473	[BUG]  [BUGGY]  if(this.compiler!=  null)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(this.compiler!=  null)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(this.compiler!=  null)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    else    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
474	[BUG]  [BUGGY]  this.module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(DEFAULT_FILENAME_PREFIX);	  this.module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
475	[BUG]  [BUGGY]  this.module  =  compiler.getModule(module,  a$$module);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(module,  a$$module);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(module,  a$$module);	  this.module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
476	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompiler(false,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompiler(false,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompiler(false,  DEFAULT_FILENAME_PREFIX);	  this.compiler    =    compiler.getCompiler(false);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
477	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Compiler.DEFAULT_FILENAME_PREFIX;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Compiler.DEFAULT_FILENAME_PREFIX;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Compiler.DEFAULT_FILENAME_PREFIX;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    Compiler.instance;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
478	[BUG]  [BUGGY]  ||  compiler.isCompiler())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isCompiler())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isCompiler())  {  this.compiler  =  compiler;  }	  ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
479	[BUG]  [BUGGY]  ||  compiler.isAssignmentOp())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isAssignmentOp())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isAssignmentOp())  {  this.compiler  =  compiler;  }	  ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
480	[BUG]  [BUGGY]  if(compiler!=  null)  {  This.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.module$test,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  This.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.module$test,  filenamePrefix,  reportDependencies);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  This.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.module$test,  filenamePrefix,  reportDependencies);  }	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
481	[BUG]  [BUGGY]  if(compiler!=  null)  {  This.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  This.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  This.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
482	[BUG]  [BUGGY]  if(compiler!=  null)  {  This.compiler  =  compiler;  }  else  {  System.err.println( "Failed  to  parse  module: "  +  compiler.getName());  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  This.compiler  =  compiler;  }  else  {  System.err.println( "Failed  to  parse  module: "  +  compiler.getName());  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  This.compiler  =  compiler;  }  else  {  System.err.println( "Failed  to  parse  module: "  +  compiler.getName());  }	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
483	[BUG]  [BUGGY]  if(compiler!=  null)  {  This.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.module$test,  0,  compiler.reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  This.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.module$test,  0,  compiler.reportDependencies);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  This.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.module$test,  0,  compiler.reportDependencies);  }	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
484	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "modul  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "modul  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  else  if(compiler.getModules().contains( "module$test "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "modul	  var    module$test=    {    }    else    if(compiler.getModules().contains(   "module$test   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;++a$    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
485	[BUG]  [BUGGY]  if(compiler.isExtern())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler.isExtern())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler.isExtern())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.isExtern())    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
486	[BUG]  [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  else  if(compiler.isExtern())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  else  if(compiler.isExtern())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  var  module$test=  {  }  else  if(compiler.isExtern())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.isExtern())    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
487	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator	  var    module$test=    {    }    ;++a$$module$test;    this.filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
488	[BUG]  [BUGGY]  if(!moduleDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!moduleDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!moduleDependencies)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator	  var    module$test=    {    }    ;++a$$module$test;    this.filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
489	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  <  AbstractCompiler>  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  <  AbstractCompiler>  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  This.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
490	[BUG]  [BUGGY]  ||  compiler.isModule(filenamePrefix  +  File.separator))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModule(filenamePrefix  +  File.separator))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModule(filenamePrefix  +  File.separator))  {  this.compiler  =  compiler;  }	  ||    compiler.isModule(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
491	[BUG]  [BUGGY]  ||  compiler.isModule(filenamePrefix),  reportDependencies)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isModule(filenamePrefix),  reportDependencies)  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isModule(filenamePrefix),  reportDependencies)  {  this.compiler  =  compiler;  }	  ||    compiler.isModule(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
492	[BUG]  [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(compiler    ==    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
493	[BUG]  [BUGGY]  this.module  =  compiler.getModule(JSError.DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(JSError.DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(JSError.DEFAULT_FILENAME_PREFIX);	  this.module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
494	[BUG]  [BUGGY]  this.module  =  compiler.getModule(JSError.MILLIS_PER_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(JSError.MILLIS_PER_SEPARATOR);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(JSError.MILLIS_PER_SEPARATOR);	  this.module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
495	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module$test  :  fileNamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module$test  :  fileNamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module$test  :  fileNamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    fileNamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
496	[BUG]  [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	boolean  reportDependencies  =  compiler.isEnabled(Feature.DEFAULT_FILENAME_PREFIX);	  boolean    reportDependencies    =    compiler.isEnabled(Feature.FLUSH_PASSED_MODULES);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
497	[BUG]  [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.QUOTE_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.QUOTE_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	boolean  reportDependencies  =  compiler.isEnabled(Feature.QUOTE_FILENAME_PREFIX);	  boolean    reportDependencies    =    compiler.isEnabled(Feature.FLUSH_PASSED_MODULES);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
498	[BUG]  [BUGGY]  if(modulePrefix!=  null)  {  var  module$test=  {  }  else  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(modulePrefix!=  null)  {  var  module$test=  {  }  else  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(modulePrefix!=  null)  {  var  module$test=  {  }  else  if(modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
499	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(JSC_MODULE_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(JSC_MODULE_SEPARATOR);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(JSC_MODULE_SEPARATOR);	  JSModule    module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
500	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(0);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(0);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(0);	  JSModule    module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
501	[BUG]  [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES)&&  filenamePrefix.startsWith(File.separator);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES)&&  filenamePrefix.startsWith(File.separator);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	boolean  reportDependencies  =  compiler.isEnabled(Feature.FLUSH_PASSED_MODULES)&&  filenamePrefix.startsWith(File.separator);	  boolean    reportDependencies    =    compiler.isEnabled(Feature.FLUSH_PASSED_MODULES);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
502	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix!=  null  &&  filenamePrefix.startsWith(File.separator));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix!=  null  &&  filenamePrefix.startsWith(File.separator));  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix!=  null  &&  filenamePrefix.startsWith(File.separator));	  Preconditions.checkState(filenamePrefix!=    null);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
503	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerFactory();  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerFactory();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerFactory();	  this.compiler    =    compiler.getCompilerInput();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
504	[BUG]  [BUGGY]  this.compiler  =  compiler.getCompilerConfig();  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getCompilerConfig();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getCompilerConfig();	  this.compiler    =    compiler.getCompilerInput();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
505	[BUG]  [BUGGY]  if(compiler  ==  null  ||  compiler.hasModule())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler  ==  null  ||  compiler.hasModule())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler  ==  null  ||  compiler.hasModule())  {  this.compiler  =  compiler;  }	  if(compiler    ==    null    ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
506	[BUG]  [BUGGY]  Var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Var  module$test=  {  }  ;	  junit.framework.AssertionFailedError:    expected.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
507	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getConfig()  :  compiler;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getConfig()  :  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getConfig()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getNext()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
508	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  var  modules$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  var  modules$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".js "))  {  var  modules$test=  {  }	  var    modules$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
509	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js "))  {  var  modules$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.getName().endsWith( ".js "))  {  var  modules$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.getName().endsWith( ".js "))  {  var  modules$test=  {  }	  var    modules$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
510	[BUG]  [BUGGY]  if(module.isModule())  {  var  modules$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.isModule())  {  var  modules$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.isModule())  {  var  modules$test=  {  }	  var    modules$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
511	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  var  modules$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  var  modules$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.getName().endsWith( ".js ")||  module.getName().endsWith( ".java "))  {  var  modules$test=  {  }	  var    modules$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
512	[BUG]  [BUGGY]  if(module.getModule()!=  null)  {  var  modules$test=  {  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.getModule()!=  null)  {  var  modules$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.getModule()!=  null)  {  var  modules$test=  {  }	  var    modules$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
513	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getInstance();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getInstance();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :  Compiler.getInstance();	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    Compiler.getDefaultCompiler();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
514	[BUG]  [BUGGY]  ||  compiler.isCompilerModule())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isCompilerModule())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isCompilerModule())  {  this.compiler  =  compiler;  }	  ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
515	[BUG]  [BUGGY]  ||  compiler.isFunctionModule())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isFunctionModule())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isFunctionModule())  {  this.compiler  =  compiler;  }	  ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
516	[BUG]  [BUGGY]  if(module!=  null)  {  this.module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module!=  null)  {  this.module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module!=  null)  {  this.module$test=  {  }	  this.module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
517	[BUG]  [BUGGY]  if(filenamePrefix.endsWith( ".js ")||  filenamePrefix.startsWith( ".js "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.endsWith( ".js ")||  filenamePrefix.startsWith( ".js "))  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.endsWith( ".js ")||  filenamePrefix.startsWith( ".js "))  {  var  module$test=  {  }	  var    module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
518	[BUG]  [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.endsWith(File.separator)||  filenamePrefix.startsWith(File.separator))  {  module$test=  {  }	  var    module$test=    ==    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
519	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  this.filenamePrefix  =  compiler.getFileNamePrefix();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix!=  null)  {  this.filenamePrefix  =  compiler.getFileNamePrefix();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix!=  null)  {  this.filenamePrefix  =  compiler.getFileNamePrefix();  }	  if(filenamePrefix!=    null)    {    filenamePrefix    =    compiler.getFileNamePrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
520	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  filenamePrefix  =  compiler.getNamePrefix();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix!=  null)  {  filenamePrefix  =  compiler.getNamePrefix();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix!=  null)  {  filenamePrefix  =  compiler.getNamePrefix();  }	  if(filenamePrefix!=    null)    {    filenamePrefix    =    compiler.getFileNamePrefix();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
521	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)module;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)module;	  This.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
522	[BUG]  [BUGGY]  this.compiler  =  compiler;  if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler;  if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler;  if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
523	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.module$test,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.module$test,  filenamePrefix,  reportDependencies);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.module$test,  filenamePrefix,  reportDependencies);  }	  if(compiler!=    null    ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
524	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.reportDependencies,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.reportDependencies,  reportDependencies);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.reportDependencies,  reportDependencies);  }	  if(compiler!=    null    ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
525	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.module$test,  0,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.module$test,  0,  reportDependencies);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  compiler.isModule())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.module$test,  0,  reportDependencies);  }	  if(compiler!=    null    ||    compiler.isModule())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
526	[BUG]  [BUGGY]  if(module$test  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(compiler    ==    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
527	[BUG]  [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDe  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDe  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  var  module$test=  {  }  ;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDe	  var    module$test=    {    }    if(compiler    ==    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
528	[BUG]  [BUGGY]  this.compiler  =  compiler;  if(compiler!=  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler;  if(compiler!=  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler;  if(compiler!=  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    compiler.isModuleSupported())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
529	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.module$test,  filenamePrefix,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.module$test,  filenamePrefix,  reportDependencies);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.module$test,  filenamePrefix,  reportDependencies);  }	  if(compiler!=    null    ||    compiler.isModuleSupported())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
530	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.reportDependencies,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.reportDependencies,  reportDependencies);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  compiler.isModuleSupported())  {  this.compiler  =  compiler;  System.arraycopy(filenamePrefix,  0,  this.reportDependencies,  reportDependencies);  }	  if(compiler!=    null    ||    compiler.isModuleSupported())    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
531	[BUG]  [BUGGY]  This.compiler  =  compiler.getDefaultCompiler();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  This.compiler  =  compiler.getDefaultCompiler();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	This.compiler  =  compiler.getDefaultCompiler();	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
532	[BUG]  [BUGGY]  This.compiler  =  compiler.createModuleCompiler();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  This.compiler  =  compiler.createModuleCompiler();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	This.compiler  =  compiler.createModuleCompiler();	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
533	[BUG]  [BUGGY]  This.compiler  =  compiler.getParent();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  This.compiler  =  compiler.getParent();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	This.compiler  =  compiler.getParent();	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
534	[BUG]  [BUGGY]  This.compiler  =  compiler.build();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  This.compiler  =  compiler.build();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	This.compiler  =  compiler.build();	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
535	[BUG]  [BUGGY]  This.compiler  =  compiler.createCompiler();  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  This.compiler  =  compiler.createCompiler();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	This.compiler  =  compiler.createCompiler();	  This.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
536	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  it  =  this.reportDependencies.iterator();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  <  AbstractCompiler>  it  =  this.reportDependencies.iterator();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  <  AbstractCompiler>  it  =  this.reportDependencies.iterator();	  Iterator    <    AbstractCompiler>    it    =    compilers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
537	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  it  =  moduleDependencies.iterator();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Iterator  <  AbstractCompiler>  it  =  moduleDependencies.iterator();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Iterator  <  AbstractCompiler>  it  =  moduleDependencies.iterator();	  Iterator    <    AbstractCompiler>    it    =    compilers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
538	[BUG]  [BUGGY]  if(module$test  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(junit.framework.AssertionFailedError)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
539	[BUG]  [BUGGY]  if(module$test!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(junit.framework.AssertionFailedError)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
540	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test? ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test? ");  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	junit.framework.AssertionFailedError:  goog.provide( "module$test? ");	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
541	[BUG]  [BUGGY]  var  module$test=  ==  }  else  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  ==  }  else  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  ==  }  else  if(compiler.isModule())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.isModule())    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
542	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(module,  this);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(module,  this);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(module,  this);	  JSModule    module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
543	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(module,  sourceName);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(module,  sourceName);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(module,  sourceName);	  JSModule    module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
544	[BUG]  [BUGGY]  if(this.module!=  compiler)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(this.module!=  compiler)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(this.module!=  compiler)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
545	[BUG]  [BUGGY]  if(module  ==  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module  ==  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module  ==  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
546	[BUG]  [BUGGY]  if(!module.isModule())  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!module.isModule())  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!module.isModule())  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator);  }	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
547	[BUG]  [BUGGY]  this.reportDependencies  =  EXPORTS;  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.reportDependencies  =  EXPORTS;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.reportDependencies  =  EXPORTS;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
548	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
549	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module  +  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module  +  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module  +  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
550	[BUG]  [BUGGY]  if(filenamePrefix.startsWith(File.separator))?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.startsWith(File.separator))?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.startsWith(File.separator))?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  }	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
551	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module  +  File.separator  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [CE]  illegal  start  of  expression  [FE]                                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module  +  File.separator  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module  +  File.separator  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  EXPORTS;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    EXPORTS;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
552	[BUG]  [BUGGY]  var  module$test=  ==  }  else  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  ==  }  else  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  ==  }  else  if(reportDependencies  >  0)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies    >    0)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
553	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(!filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(!filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(!filenamePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies    >    0)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
554	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Module.getDefault();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Module.getDefault();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getModule()  :  Module.getDefault();	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getModule()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
555	[BUG]  [BUGGY]  if(filenamePrefix.startsWith(File.separator))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.startsWith(File.separator))  {  var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.startsWith(File.separator))  {  var  module$test=  {  }	  var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
556	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module  +  filenamePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module  +  filenamePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module  +  filenamePrefix  :  filenamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
557	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module,  filenamePrefix  :  filenamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module,  filenamePrefix  :  filenamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module,  filenamePrefix  :  filenamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
558	[BUG]  [BUGGY]  if(module!=  null)  {  var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module!=  null)  {  var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module!=  null)  {  var  module$test=  {  }  ;	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
559	[BUG]  [BUGGY]  if(module.isModule())  {  var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.isModule())  {  var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.isModule())  {  var  module$test=  {  }  ;	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
560	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js "))  {  var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.getName().endsWith( ".js "))  {  var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.getName().endsWith( ".js "))  {  var  module$test=  {  }  ;	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
561	[BUG]  [BUGGY]  if(module!=  null)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module!=  null)  {  var  module$test=  {  }  ;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module!=  null)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
562	[BUG]  [BUGGY]  if(!module.isModule())  {  var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!module.isModule())  {  var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!module.isModule())  {  var  module$test=  {  }  ;	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
563	[BUG]  [BUGGY]  this.module  =  compiler.getModule(compiler,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(compiler,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(compiler,  DEFAULT_FILENAME_PREFIX);	  this.module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
564	[BUG]  [BUGGY]  this.module  =  compiler.getModule(compiler);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(compiler);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(compiler);	  this.module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
565	[BUG]  [BUGGY]  this.module  =  compiler.getModuleSupplier();  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModuleSupplier();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModuleSupplier();	  this.module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
566	[BUG]  [BUGGY]  if(module!=  null)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module!=  null)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module!=  null)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }	  Preconditions.checkState(filenamePrefix!=    null);    this.module$test    =    compiler.getModuleDependencies();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
567	[BUG]  [BUGGY]  if(this.module$test!=  null)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(this.module$test!=  null)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(this.module$test!=  null)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }	  Preconditions.checkState(filenamePrefix!=    null);    this.module$test    =    compiler.getModuleDependencies();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
568	[BUG]  [BUGGY]  if(module.isModule())  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.isModule())  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.isModule())  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }	  Preconditions.checkState(filenamePrefix!=    null);    this.module$test    =    compiler.getModuleDependencies();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
569	[BUG]  [BUGGY]  if(module.getModuleDependencies()!=  null)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.getModuleDependencies()!=  null)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.getModuleDependencies()!=  null)  {  Preconditions.checkState(filenamePrefix!=  null);  this.module$test  =  compiler.getModuleDependencies();  }	  Preconditions.checkState(filenamePrefix!=    null);    this.module$test    =    compiler.getModuleDependencies();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
570	[BUG]  [BUGGY]  if(module$test  ==  null)  {  this.module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  this.module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  this.module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
571	[BUG]  [BUGGY]  if(module$test!=  null)  {  this.module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  this.module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  this.module$test.startsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
572	[BUG]  [BUGGY]  if(filenamePrefix.startsWith(File.separator))?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix.startsWith(File.separator))?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix.startsWith(File.separator))?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
573	[BUG]  [BUGGY]  this.module  =  compiler.getModule(module)+  File.separator;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.module  =  compiler.getModule(module)+  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.module  =  compiler.getModule(module)+  File.separator;	  this.module    =    compiler.getModule(module);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
574	[BUG]  [BUGGY]  if(filenamePrefix  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix  ==  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s	  var    module$test=    {    }    ;++a$$module$test;    this.filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
575	[BUG]  [BUGGY]  if(module.isModule())  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.isModule())  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.isModule())  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s	  var    module$test=    {    }    ;++a$$module$test;    this.filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
576	[BUG]  [BUGGY]  if(module  >  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module  >  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module  >  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.separator	  var    module$test=    {    }    ;++a$$module$test;    this.filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
577	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(filenamePrefix!=  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(filenamePrefix!=  null)  {  var  module$test=  {  }  ;++a$$module$test;  this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.s	  var    module$test=    {    }    ;++a$$module$test;    this.filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
578	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module  :  fileNamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module  :  fileNamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module  :  fileNamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    fileNamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
579	[BUG]  [BUGGY]  a$$module$test.startsWith(File.separator)?  module,  filenamePrefix  :  fileNamePrefix  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  a$$module$test.startsWith(File.separator)?  module,  filenamePrefix  :  fileNamePrefix  +  File.separator;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	a$$module$test.startsWith(File.separator)?  module,  filenamePrefix  :  fileNamePrefix  +  File.separator;	  a$$module$test.startsWith(File.separator)?    filenamePrefix    :    fileNamePrefix    +    File.separator;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
580	[BUG]  [BUGGY]  this.compiler  =  compiler.getParentFactory();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getParentFactory();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getParentFactory();	  this.compiler    =    compiler.getParent();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
581	[BUG]  [BUGGY]  this.compiler  =  compiler.getParentCommonExpression();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler.getParentCommonExpression();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler.getParentCommonExpression();	  this.compiler    =    compiler.getParent();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
582	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
583	[BUG]  [BUGGY]  if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module!=  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File.	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
584	[BUG]  [BUGGY]  if(!modulePrefix.endsWith(File.separator))  {  if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!modulePrefix.endsWith(File.separator))  {  if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide(  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!modulePrefix.endsWith(File.separator))  {  if(!modulePrefix.endsWith( ".java "))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide(	  var    module$test=    {    }    if(!modulePrefix.endsWith(   ".java   "))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
585	[BUG]  [BUGGY]  if(this.module!=  compiler)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(this.module!=  compiler)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(this.module!=  compiler)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator)?  filenamePrefix  :  filenamePrefix  +  File	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
586	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  parser;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  parser;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  parser;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getRawParent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
587	[BUG]  [BUGGY]  ;++a$$module$test;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ;++a$$module$test;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	;++a$$module$test;	  ;var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
588	[BUG]  [BUGGY]  if(modulePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(modulePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(modulePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
589	[BUG]  [BUGGY]  if(modulePrefix!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(modulePrefix!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(modulePrefix!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
590	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContentType()  :  compiler;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContentType()  :  compiler;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContentType()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getContent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
591	[BUG]  [BUGGY]  if(compiler!=  null  &&  filenamePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  filenamePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  filenamePrefix.startsWith(File.separator))  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    filenamePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
592	[BUG]  [BUGGY]  if(compiler!=  null  &&  compiler.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  compiler.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  compiler.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    filenamePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
593	[BUG]  [BUGGY]  if(compiler!=  null  &&  filenamePrefix.endsWith( ".separator))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null  &&  filenamePrefix.endsWith( ".separator))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null  &&  filenamePrefix.endsWith( ".separator))  {  this.compiler  =  compiler;  }	  if(compiler!=    null    ||    filenamePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
594	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :((  AbstractCompiler)compiler).module;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :((  AbstractCompiler)compiler).module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :((  AbstractCompiler)compiler).module;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    module;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
595	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :((  AbstractCompiler)compiler).getModule();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :((  AbstractCompiler)compiler).getModule();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :((  AbstractCompiler)compiler).getModule();	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    module;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
596	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :((  AbstractCompiler)compiler).getParent();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :((  AbstractCompiler)compiler).getParent();  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :((  AbstractCompiler)compiler).getParent();	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :    module;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
597	[BUG]  [BUGGY]  if(module$test!=  null)  {  this.module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test!=  null)  {  this.module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test!=  null)  {  this.module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
598	[BUG]  [BUGGY]  if(module$test  ==  null)  {  this.module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  this.module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  this.module$test.startsWith(File.separator)?  module  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }	  a$$module$test.startsWith(File.separator)?    module    :    filenamePrefix    +    File.separator;    this.reportDependencies    =    reportDependencies;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
599	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(compiler.isAssignmentOp())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(compiler.isAssignmentOp())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(compiler.isAssignmentOp())  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.isExtern())    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
600	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(compiler.isAssignmentTo(module))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  {  }  else  if(compiler.isAssignmentTo(module))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  {  }  else  if(compiler.isAssignmentTo(module))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(compiler.isExtern())    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
601	[BUG]  [BUGGY]  if(module!=  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module!=  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module!=  null)  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
602	[BUG]  [BUGGY]  if(module.isModule())  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.isModule())  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.isModule())  {  var  module$test=  {  }  ;++a$$module$test  ==  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
603	[BUG]  [BUGGY]  if(module.isModule())  {  var  module$test=  {  }  ;++a$$module$test!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.isModule())  {  var  module$test=  {  }  ;++a$$module$test!=  illegal  start  of  expression  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.isModule())  {  var  module$test=  {  }  ;++a$$module$test!=  illegal  start  of  expression	  var    module$test=    {    }    ;++a$$module$test    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
604	[BUG]  [BUGGY]  ||  filenamePrefix!=  null)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  filenamePrefix!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  filenamePrefix!=  null)  {  this.compiler  =  compiler;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
605	[BUG]  [BUGGY]  &&  compiler!=  null)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  &&  compiler!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	&&  compiler!=  null)  {  this.compiler  =  compiler;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
606	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler  +  File.separator;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler  +  File.separator;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler!=  null)  {  this.compiler  =  compiler  +  File.separator;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
607	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  goog.provide( "module$test ");  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  goog.provide( "module$test ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
608	[BUG]  [BUGGY]  if(module.isModule())  {  var  module$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.isModule())  {  var  module$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.isModule())  {  var  module$test=  {  }  ;++a$$module$test;  }	  var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
609	[BUG]  [BUGGY]  if(!module.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  var  module$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!module.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  var  module$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!module.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  var  module$test=  {  }  ;++a$$module$test;  }	  var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
610	[BUG]  [BUGGY]  if(module.getName().endsWith( ".js "))  {  var  module$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.getName().endsWith( ".js "))  {  var  module$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.getName().endsWith( ".js "))  {  var  module$test=  {  }  ;++a$$module$test;  }	  var    module$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
611	[BUG]  [BUGGY]  if(module  ==  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module  ==  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module  ==  null)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.s    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
612	[BUG]  [BUGGY]  if(this.module!=  compiler)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(this.module!=  compiler)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(this.module!=  compiler)  {  this.module  =  compiler.getModule();  if(filenamePrefix!=  null)  {  filenamePrefix  =  filenamePrefix.endsWith(File.separator	  if(reportDependencies)    {    this.module    =    compiler.getModule();    if(filenamePrefix!=    null)    {    filenamePrefix    =    filenamePrefix.endsWith(File.separator)?    filenamePrefix    :    filenamePrefix    +    File.s    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
613	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
614	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;	  var    module$test=    {    }    else    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
615	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(compiler);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(compiler);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(compiler);	  JSModule    module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
616	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule( "module ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule( "module ");  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule( "module ");	  JSModule    module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
617	[BUG]  [BUGGY]  JSModule  module  =  compiler.getModule(JSC_MODULE_PREFIX);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  JSModule  module  =  compiler.getModule(JSC_MODULE_PREFIX);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	JSModule  module  =  compiler.getModule(JSC_MODULE_PREFIX);	  JSModule    module    =    compiler.getModule();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
618	[BUG]  [BUGGY]  ++a$$module$test;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ++a$$module$test;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	++a$$module$test;	  var    module$test=    ==    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
619	[BUG]  [BUGGY]  if(reportDependencies  >  0)  {  var  module$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(reportDependencies  >  0)  {  var  module$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(reportDependencies  >  0)  {  var  module$test=  {  }  ;++a$$module$test;  }	  var    module$test=    ==    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
620	[BUG]  [BUGGY]  if(modulePrefix  ==  null  ||!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(modulePrefix  ==  null  ||!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(modulePrefix  ==  null  ||!modulePrefix.endsWith(File.separator))  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    if(!modulePrefix.endsWith(File.separator))    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
621	[BUG]  [BUGGY]  if(module.isModule())  {  var  modules$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module.isModule())  {  var  modules$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module.isModule())  {  var  modules$test=  {  }  ;++a$$module$test;  }	  var    modules$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
622	[BUG]  [BUGGY]  if(!module.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  var  modules$test=  {  }  ;++a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(!module.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  var  modules$test=  {  }  ;++a$$module$test;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(!module.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  var  modules$test=  {  }  ;++a$$module$test;  }	  var    modules$test=    {    }    ;++a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
623	[BUG]  [BUGGY]  &&  compiler.isModuleSupported(filenamePrefix))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  &&  compiler.isModuleSupported(filenamePrefix))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	&&  compiler.isModuleSupported(filenamePrefix))  {  this.compiler  =  compiler;  }	  ||    compiler.isModuleSupported(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
624	[BUG]  [BUGGY]  ||  compiler.isAllModuleSupported(filenamePrefix))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.isAllModuleSupported(filenamePrefix))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.isAllModuleSupported(filenamePrefix))  {  this.compiler  =  compiler;  }	  ||    compiler.isModuleSupported(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
625	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix  ==  null  ||  filenamePrefix.startsWith(File.separator));  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix  ==  null  ||  filenamePrefix.startsWith(File.separator));  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix  ==  null  ||  filenamePrefix.startsWith(File.separator));	  Preconditions.checkState(filenamePrefix    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
626	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix  ==  null  ||  filenamePrefix.endsWith(File.separator));  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix  ==  null  ||  filenamePrefix.endsWith(File.separator));  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix  ==  null  ||  filenamePrefix.endsWith(File.separator));	  Preconditions.checkState(filenamePrefix    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
627	[BUG]  [BUGGY]  Preconditions.checkState(filenamePrefix  ==  null  ||  filenamePrefix.length()  ==  0);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  Preconditions.checkState(filenamePrefix  ==  null  ||  filenamePrefix.length()  ==  0);  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	Preconditions.checkState(filenamePrefix  ==  null  ||  filenamePrefix.length()  ==  0);	  Preconditions.checkState(filenamePrefix    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
628	[BUG]  [BUGGY]  ||  compiler.hasModule(filenamePrefix))  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  ||  compiler.hasModule(filenamePrefix))  {  this.compiler  =  compiler;  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	||  compiler.hasModule(filenamePrefix))  {  this.compiler  =  compiler;  }	  ||    compiler.isModule(filenamePrefix))    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
629	[BUG]  [BUGGY]  var  module$test=  ==  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  var  module$test=  ==  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	var  module$test=  ==  }  else  if(reportDependencies)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    else    if(reportDependencies)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
630	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)module;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)module;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)module;	  this.compiler    =    compiler    instanceof    AbstractCompiler    ||    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
631	[BUG]  [BUGGY]  if(module!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      ProcessCommonJSModules(AbstractCompiler  compiler,  String  filenamePrefix,  boolean  reportDependencies)  {      [BUGGY]  if(module!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]      this.filenamePrefix  =  filenamePrefix.endsWith(File.separator)  ?  filenamePrefix  :  filenamePrefix  +  File.separator;  this.reportDependencies  =  reportDependencies;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  <init>  [RETURN_TYPE]  String,boolean)  AbstractCompiler  compiler  String  filenamePrefix  boolean  reportDependencies  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	57	57	5	replace	if(module!=  null)  {  this.compiler  =  compiler;  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(compiler!=    null)    {    this.compiler    =    compiler;    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
