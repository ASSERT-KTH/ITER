bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  2);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filename.length());	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  3);  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  3);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  4);  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  4);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filenamePrefix.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  if(filename.indexOf('_')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('_')  >=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  >=  0)  {	  if(filename.indexOf('_')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  if(filename.indexOf('_')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('_')  <  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  <  0)  {	  if(filename.indexOf('_')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  if(filename.indexOf('_')>  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('_')>  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')>  0)  {	  if(filename.indexOf('_')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  if(filename.indexOf('_')  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('_')  ==  -1)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  ==  -1)  {	  if(filename.indexOf('_')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  if(filename.indexOf('_')!=  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('_')!=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')!=  0)  {	  if(filename.indexOf('_')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('_')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filenamePrefix.indexOf('_')  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('_')  ==  0)  {	  if(filename.indexOf('_')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  if(filename.indexOf('$')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('$')  >=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  >=  0)  {	  if(filename.indexOf('$')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('$')  ==  -1)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  ==  -1)  {	  if(filename.indexOf('$')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  if(filename.indexOf('$')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('$')  <  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  <  0)  {	  if(filename.indexOf('$')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  if(filename.indexOf('$')!=  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('$')!=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')!=  0)  {	  if(filename.indexOf('$')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  if(filename.indexOf('$')>  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('$')>  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')>  0)  {	  if(filename.indexOf('$')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('$')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filenamePrefix.indexOf('$')  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('$')  ==  0)  {	  if(filename.indexOf('$')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  if(filename.indexOf('n')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('n')  >=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n')  >=  0)  {	  if(filename.indexOf('n')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  if(filename.indexOf('n')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('n')  <  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n')  <  0)  {	  if(filename.indexOf('n')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  if(filename.indexOf('n',  filenamePrefix.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('n',  filenamePrefix.length())  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n',  filenamePrefix.length())  ==  0)  {	  if(filename.indexOf('n')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  if(filename.indexOf('n')>  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('n')>  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n')>  0)  {	  if(filename.indexOf('n')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  if(filename.indexOf('')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('')  >=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('')  >=  0)  {	  if(filename.indexOf('')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  if(filename.indexOf('')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('')  <  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('')  <  0)  {	  if(filename.indexOf('')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filenamePrefix.indexOf('')  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('')  ==  0)  {	  if(filename.indexOf('')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  if(filename.indexOf('/')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('/')  >=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  >=  0)  {	  if(filename.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  if(filename.indexOf('/')  <  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('/')  <  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  <  0)  {	  if(filename.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('/')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filenamePrefix.indexOf('/')  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('/')  ==  0)  {	  if(filename.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  if(filename.indexOf('/',  filenamePrefix.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('/',  filenamePrefix.length())  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/',  filenamePrefix.length())  ==  0)  {	  if(filename.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  if(filename.indexOf( ".module$test ")  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf( ".module$test ")  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( ".module$test ")  ==  0)  {	  if(filename.indexOf(   "module$   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  if(filename.indexOf( ".module$ ")  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf( ".module$ ")  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( ".module$ ")  ==  0)  {	  if(filename.indexOf(   "module$   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  if(module.indexOf( "module$test ")  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(module.indexOf( "module$test ")  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module.indexOf( "module$test ")  ==  0)  {	  if(filename.indexOf(   "module$   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  if(module$test.indexOf( "module$test   ")  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(module$test.indexOf( "module$test   ")  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module$test.indexOf( "module$test   ")  ==  0)  {	  if(filename.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  if(filename.indexOf( "module$test ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf( "module$test ")  >=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "module$test ")  >=  0)  {	  if(filename.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
37	[BUG]  [BUGGY]  if(filename.indexOf( "module$test ")!=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf( "module$test ")!=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "module$test ")!=  0)  {	  if(filename.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('.')  >=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0)  {	  if(filename.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('.')  <  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0)  {	  if(filename.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  if(filename.indexOf('.')>  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('.')>  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')>  0)  {	  if(filename.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
41	[BUG]  [BUGGY]  if(filename.indexOf('.')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('.')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
42	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('.')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filenamePrefix.indexOf('.')  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('.')  ==  0)  {	  if(filename.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
43	[BUG]  [BUGGY]  if(filename.indexOf('.')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('.')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  if(filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf(':')  >=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  >=  0)  {	  if(filename.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
45	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf(':')  <  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  0)  {	  if(filename.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
46	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
47	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
48	[BUG]  [BUGGY]  if(filenamePrefix.indexOf(':')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filenamePrefix.indexOf(':')  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf(':')  ==  0)  {	  if(filename.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf(':')  ==  -1)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  -1)  {	  if(filename.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
52	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  if(filename.indexOf(':')!=  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf(':')!=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')!=  0)  {	  if(filename.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
54	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
55	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('$')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
56	[BUG]  [BUGGY]  if(filename.indexOf('.')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('.')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  if(filename.indexOf('.')!=  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('.')!=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')!=  0)  {	  if(filename.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  if(filename.indexOf('/')!=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('/')!=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')!=  0)  {	  if(filename.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
59	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
60	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('/')  ==  -1)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  -1)  {	  if(filename.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  if(filename.indexOf( "module$ ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf( "module$ ")  >=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "module$ ")  >=  0)  {	  if(filename.indexOf(   "module$   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
62	[BUG]  [BUGGY]  if(filename.indexOf( "module$ ")!=  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf( "module$ ")!=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "module$ ")!=  0)  {	  if(filename.indexOf(   "module$   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
63	[BUG]  [BUGGY]  if(filename.indexOf(':',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf(':',  filename.length())  <  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filename.length())  <  0)  {	  if(filename.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
64	[BUG]  [BUGGY]  if(filename.indexOf(':')>  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf(':')>  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')>  0)  {	  if(filename.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
65	[BUG]  [BUGGY]  if(filename.indexOf(':',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf(':',  filename.length())  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filename.length())  ==  0)  {	  if(filename.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
66	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('n')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filenamePrefix.indexOf('n')  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('n')  ==  0)  {	  if(filename.indexOf('n')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
67	[BUG]  [BUGGY]  if(filename.indexOf( "module$test ")>  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf( "module$test ")>  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "module$test ")>  0)  {	  if(filename.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
68	[BUG]  [BUGGY]  if(filename.indexOf( "module$test ")  <  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf( "module$test ")  <  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "module$test ")  <  0)  {	  if(filename.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
69	[BUG]  [BUGGY]  if(filename.indexOf('.',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('.',  filename.length())  <  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.',  filename.length())  <  0)  {	  if(filename.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
70	[BUG]  [BUGGY]  if(filename.indexOf('/')>  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('/')>  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')>  0)  {	  if(filename.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  if(filename.indexOf('/',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('/',  filename.length())  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/',  filename.length())  ==  0)  {	  if(filename.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
72	[BUG]  [BUGGY]  if(filename.indexOf('$',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('$',  filename.length())  ==  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$',  filename.length())  ==  0)  {	  if(filename.indexOf('$')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
73	[BUG]  [BUGGY]  if(filename.indexOf('_',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('_',  filename.length())  <  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_',  filename.length())  <  0)  {	  if(filename.indexOf('_')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
74	[BUG]  [BUGGY]  if(filename.indexOf( "module$ ")>  0)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf( "module$ ")>  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "module$ ")>  0)  {	  if(filename.indexOf(   "module$   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
75	[BUG]  [BUGGY]  if(filename.indexOf( ".module$ ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf( ".module$ ")  >=  0)  {  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( ".module$ ")  >=  0)  {	  if(filename.indexOf(   "module$   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
77	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
78	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
79	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
80	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator "));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator "));  }  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator "));  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    [BUGGY]  if(filename.indexOf('.')  >=  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]    filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
