bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(module.indexOf( ".module$ ")  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module.indexOf( ".module$ ")  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module.indexOf( ".module$ ")  ==  0)  {	  if(filename.indexOf(   ".module$   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
2	[BUG]  [BUGGY]  if(module.indexOf( "module$test ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module.indexOf( "module$test ")  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module.indexOf( "module$test ")  >=  0)  {	  if(module.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
3	[BUG]  [BUGGY]  if(module.indexOf( ".module$test ")  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module.indexOf( ".module$test ")  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module.indexOf( ".module$test ")  ==  0)  {	  if(module.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
4	[BUG]  [BUGGY]  if(module.indexOf( "module$test ")!=  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module.indexOf( "module$test ")!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module.indexOf( "module$test ")!=  0)  {	  if(module.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
5	[BUG]  [BUGGY]  if(modulePrefix.indexOf( "module$test   ")  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(modulePrefix.indexOf( "module$test   ")  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(modulePrefix.indexOf( "module$test   ")  ==  0)  {	  if(module.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
6	[BUG]  [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
7	[BUG]  [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
8	[BUG]  [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf('.')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
9	[BUG]  [BUGGY]  if(filename.indexOf('.')>  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')>  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')>  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
10	[BUG]  [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  '/')  {	  if(filename.indexOf('.')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
11	[BUG]  [BUGGY]  if(filename.indexOf('_')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '_')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '_')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '_')  {	  if(filename.indexOf('_')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  if(filename.indexOf('_')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '_')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '_')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '_')  {	  if(filename.indexOf('_')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('')  >=  0)  {	  if(filename.indexOf('')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
14	[BUG]  [BUGGY]  if(filename.indexOf('')!=  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('')!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('')!=  0)  {	  if(filename.indexOf('')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
15	[BUG]  [BUGGY]  if(filename.indexOf('')>  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('')>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('')>  0)  {	  if(filename.indexOf('')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
16	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	filename  =  filename.substring(0,  filename.length()  -  1);	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
17	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	||  filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
18	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length());  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length());  }	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
19	[BUG]  [BUGGY]  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	currentFilename  =  filename.substring(0,  filename.length()  -  1);	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
20	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  filename  =  filename.substring(0,  filename.length()  -  1);	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
21	[BUG]  [BUGGY]  if(filename.indexOf('_',  filenamePrefix.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_',  filenamePrefix.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_',  filenamePrefix.length())  <  0)  {	  if(filename.indexOf('_',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
22	[BUG]  [BUGGY]  if(filename.length()  <  0  ||  filename.indexOf('_',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  <  0  ||  filename.indexOf('_',  filename.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  <  0  ||  filename.indexOf('_',  filename.length())  <  0)  {	  if(filename.indexOf('_',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
23	[BUG]  [BUGGY]  if(filename.length()  >  0  ||  filename.indexOf('_',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  >  0  ||  filename.indexOf('_',  filename.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  >  0  ||  filename.indexOf('_',  filename.length())  <  0)  {	  if(filename.indexOf('_',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
24	[BUG]  [BUGGY]  if(filename.indexOf('_',  filename.length())  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_',  filename.length())  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_',  filename.length())  >=  0)  {	  if(filename.indexOf('_',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
25	[BUG]  [BUGGY]  if(filename.indexOf('_',  filenamePrefix.length())  <  0  ||  filename.indexOf('_',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_',  filenamePrefix.length())  <  0  ||  filename.indexOf('_',  filename.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_',  filenamePrefix.length())  <  0  ||  filename.indexOf('_',  filename.length())  <  0)  {	  if(filename.indexOf('_',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
26	[BUG]  [BUGGY]  if(filename.indexOf('_',  filename.length()  +  1)  <  0)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_',  filename.length()  +  1)  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_',  filename.length()  +  1)  <  0)  {	  if(filename.indexOf('_',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
27	[BUG]  [BUGGY]  if(module$test.indexOf( "module$test   ")>  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module$test.indexOf( "module$test   ")>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module$test.indexOf( "module$test   ")>  0)  {	  if(filename.indexOf(   "module$test   ")>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
28	[BUG]  [BUGGY]  if(filename.indexOf( ".module$test   ")>  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( ".module$test   ")>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( ".module$test   ")>  0)  {	  if(filename.indexOf(   "module$test   ")>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
29	[BUG]  [BUGGY]  if(module$test.indexOf( "module$test   ")!=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module$test.indexOf( "module$test   ")!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module$test.indexOf( "module$test   ")!=  0)  {	  if(filename.indexOf(   "module$test   ")!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
30	[BUG]  [BUGGY]  if(filename.indexOf('$')  <  0  ||  filenamePrefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  <  0  ||  filenamePrefix.length()  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  <  0  ||  filenamePrefix.length()  ==  0)  {	  if(filename.indexOf('$')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  if(filename.indexOf('$')  <  0  ||  filenamePrefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  <  0  ||  filenamePrefix.length()  >  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  <  0  ||  filenamePrefix.length()  >  0)  {	  if(filename.indexOf('$')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
32	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('_')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('_')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('_')  >=  0)  {	  if(filename.indexOf('_')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  if(filename.indexOf('_')  >>  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  >>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  >>  0)  {	  if(filename.indexOf('_')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {	  if(filenamePrefix.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
35	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  0  ||  filename.indexOf(':')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  <  0  ||  filename.indexOf(':')  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  0  ||  filename.indexOf(':')  ==  0)  {	  if(filenamePrefix.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
36	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  0  ||  filename.charAt(filename.length()  -  1)  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  <  0  ||  filename.charAt(filename.length()  -  1)  ==  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  0  ||  filename.charAt(filename.length()  -  1)  ==  ':')  {	  if(filenamePrefix.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
37	[BUG]  [BUGGY]  if(filename.indexOf('.')  ==  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  ==  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  ==  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
38	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  >=  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
39	[BUG]  [BUGGY]  if(filename.length()  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
40	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
41	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  >=  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
42	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	filename  =  filename.substring(0,  filename.length());	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
43	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	filename  =  filename.substring(0,  filename.length()  -  2);	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
44	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length());  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	||  filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length());  }	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
45	[BUG]  [BUGGY]  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	currentFilename  =  filename.substring(0,  filename.length());	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
46	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  filename  =  filename.substring(0,  filename.length()  -  2);	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
47	[BUG]  [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	Filename  filename  =  filename.substring(0,  filename.length()  -  2);	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
48	[BUG]  [BUGGY]  if(filename.indexOf('.')  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.indexOf('.')    >=    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
49	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.indexOf('.')    >=    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
50	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0)  {  currentFilename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  >=  0)  {  currentFilename  =  filename.substring(0,  filename.length());  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0)  {  currentFilename  =  filename.substring(0,  filename.length());  }	  if(filename.indexOf('.')    >=    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
51	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  >=  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.indexOf('.')    >=    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
52	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('$')!=  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('$')!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('$')!=  0)  {	  if(filename.indexOf('$')!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
53	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  ==  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
54	[BUG]  [BUGGY]  if(filename.length()  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
55	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('/')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('/')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('/')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
56	[BUG]  [BUGGY]  if(filename.indexOf('/')  >=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  >=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  >=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
57	[BUG]  [BUGGY]  if(filename.indexOf('/')  >=  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  >=  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  >=  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
58	[BUG]  [BUGGY]  if(filename.indexOf(':',  filenamePrefix.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':',  filenamePrefix.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filenamePrefix.length())  <  0)  {	  if(filename.indexOf(':',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
59	[BUG]  [BUGGY]  if(filename.length()  <  0  ||  filename.indexOf(':',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  <  0  ||  filename.indexOf(':',  filename.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  <  0  ||  filename.indexOf(':',  filename.length())  <  0)  {	  if(filename.indexOf(':',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
60	[BUG]  [BUGGY]  if(filename.indexOf(':',  filename.length())  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':',  filename.length())  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filename.length())  >=  0)  {	  if(filename.indexOf(':',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
61	[BUG]  [BUGGY]  if(filename.indexOf(':',  filenamePrefix.length())  <  0  ||  filename.indexOf(':',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':',  filenamePrefix.length())  <  0  ||  filename.indexOf(':',  filename.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filenamePrefix.length())  <  0  ||  filename.indexOf(':',  filename.length())  <  0)  {	  if(filename.indexOf(':',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
62	[BUG]  [BUGGY]  if(filename.indexOf(':',  filename.length()  +  1)  <  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':',  filename.length()  +  1)  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filename.length()  +  1)  <  0)  {	  if(filename.indexOf(':',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
63	[BUG]  [BUGGY]  if(module$test.indexOf( ".module$test   ")  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module$test.indexOf( ".module$test   ")  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module$test.indexOf( ".module$test   ")  ==  0)  {	  if(filename.indexOf(   ".module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
64	[BUG]  [BUGGY]  if(filename.indexOf(':')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
65	[BUG]  [BUGGY]  if(filename.indexOf(':')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  ':')  {	  if(filename.indexOf(':')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
66	[BUG]  [BUGGY]  if(filename.indexOf(':')>  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')>  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')>  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
67	[BUG]  [BUGGY]  if(filename.indexOf( ".module$ ")>  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( ".module$ ")>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( ".module$ ")>  0)  {	  if(filename.indexOf(   "module$   ")>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
68	[BUG]  [BUGGY]  if(module.indexOf( "module$ ")>  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module.indexOf( "module$ ")>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module.indexOf( "module$ ")>  0)  {	  if(filename.indexOf(   "module$   ")>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
69	[BUG]  [BUGGY]  if(filename.indexOf('/')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
70	[BUG]  [BUGGY]  if(filename.indexOf('/')>  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')>  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')>  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
71	[BUG]  [BUGGY]  if(filename.indexOf('/')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  '/')  {	  if(filename.indexOf('/')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
72	[BUG]  [BUGGY]  if(filename.indexOf('/')>  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')>  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')>  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
73	[BUG]  [BUGGY]  if(filename.indexOf('/')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
74	[BUG]  [BUGGY]  if(filename.indexOf('/')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
75	[BUG]  [BUGGY]  if(filename.indexOf('/')  <  0  ||  filenamePrefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  <  0  ||  filenamePrefix.length()  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  <  0  ||  filenamePrefix.length()  ==  0)  {	  if(filename.indexOf('/')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
76	[BUG]  [BUGGY]  if(filename.indexOf('/')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)  ==  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)  ==  '/')  {	  if(filename.indexOf('/')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
77	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
78	[BUG]  [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	Filename  filename  =  filename.substring(0,  filename.length()  -  1);	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
79	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
80	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('_')!=  0)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('_')!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('_')!=  0)  {	  if(filename.indexOf('_')!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  if(filename.indexOf( ".module$test ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( ".module$test ")  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( ".module$test ")  >=  0)  {	  if(filename.indexOf(   "module$   ")    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
82	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filenamePrefix.length());	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
83	[BUG]  [BUGGY]  String  currentFilename  =  filenamePrefix.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  currentFilename  =  filenamePrefix.substring(0,  filename.length()  -  1);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filenamePrefix.substring(0,  filename.length()  -  1);	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
84	[BUG]  [BUGGY]  char  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  char  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	char  currentFilename  =  filename.substring(0,  filename.length()  -  1);	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
85	[BUG]  [BUGGY]  if(filename.indexOf('/',  filename.length()  -  1)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/',  filename.length()  -  1)  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/',  filename.length()  -  1)  ==  0)  {	  if(filename.indexOf('/',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
86	[BUG]  [BUGGY]  if(filename.indexOf('/',  filename.length()  +  1)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/',  filename.length()  +  1)  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/',  filename.length()  +  1)  ==  0)  {	  if(filename.indexOf('/',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
87	[BUG]  [BUGGY]  if(filename.length()  ==  0  ||  filename.indexOf('/',  filenamePrefix.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0  ||  filename.indexOf('/',  filenamePrefix.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0  ||  filename.indexOf('/',  filenamePrefix.length())  ==  0)  {	  if(filename.indexOf('/',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
88	[BUG]  [BUGGY]  if(filename.indexOf('/',  filename.length())  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/',  filename.length())  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/',  filename.length())  >=  0)  {	  if(filename.indexOf('/',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
89	[BUG]  [BUGGY]  if(filename.indexOf('/',  filenamePrefix.length()  +  1)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/',  filenamePrefix.length()  +  1)  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/',  filenamePrefix.length()  +  1)  ==  0)  {	  if(filename.indexOf('/',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
90	[BUG]  [BUGGY]  String  currentFilename  =  filenamePrefix.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  currentFilename  =  filenamePrefix.substring(0,  filename.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filenamePrefix.substring(0,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
91	[BUG]  [BUGGY]  char  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  char  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	char  currentFilename  =  filename.substring(0,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
92	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(1,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  currentFilename  =  filename.substring(1,  filename.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(1,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
93	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  >  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  >  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
94	[BUG]  [BUGGY]  if(filename.length()!=  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()!=  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()!=  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
95	[BUG]  [BUGGY]  ||  filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  ||  filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	||  filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
96	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  ==  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  ==  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('$')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
97	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('$')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
98	[BUG]  [BUGGY]  if(filename.indexOf('$')  >=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  >=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  >=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('$')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
99	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('$')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('$')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('$')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('$')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
100	[BUG]  [BUGGY]  if(filename.indexOf('$')  >=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  >=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  >=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('$')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
101	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  ==  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
102	[BUG]  [BUGGY]  if(filename.indexOf('/')  >=  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  >=  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  >=  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
103	[BUG]  [BUGGY]  if(filename.indexOf('/')  >=  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  >=  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  >=  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
104	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  2)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  2)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  2)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
105	[BUG]  [BUGGY]  if(filename.indexOf('_')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '_')  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '_')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '_')  {	  if(filenamePrefix.indexOf('_')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
106	[BUG]  [BUGGY]  if(filename.indexOf('_')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filenamePrefix.indexOf('_')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
107	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '$')  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '$')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '$')  {	  if(filenamePrefix.indexOf('$')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
108	[BUG]  [BUGGY]  if(filename.indexOf('/')  >=  -1)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  >=  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  >=  -1)  {	  if(filename.indexOf('/')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
109	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('/')  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('/')  ==  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('/')  ==  -1)  {	  if(filename.indexOf('/')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
110	[BUG]  [BUGGY]  if(filename.indexOf('/')!=  -1)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')!=  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')!=  -1)  {	  if(filename.indexOf('/')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
111	[BUG]  [BUGGY]  if(filename.indexOf('/')  <  -1)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  <  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  <  -1)  {	  if(filename.indexOf('/')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
112	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
113	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length());  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length());  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
114	[BUG]  [BUGGY]  ||  filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  ||  filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	||  filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
115	[BUG]  [BUGGY]  currentFilename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  currentFilename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	currentFilename  =  filename.substring(0,  filename.length()  -  2);	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
116	[BUG]  [BUGGY]  if(filename.indexOf('.',  filenamePrefix.length())!=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.',  filenamePrefix.length())!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.',  filenamePrefix.length())!=  0)  {	  if(filename.indexOf('.')!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
117	[BUG]  [BUGGY]  if(filename.indexOf('.',  filenamePrefix.length())  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.',  filenamePrefix.length())  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.',  filenamePrefix.length())  >=  0)  {	  if(filename.indexOf('.')!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
118	[BUG]  [BUGGY]  if(filename.indexOf('.')  ==  0  ||  filename.indexOf(':')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  ==  0  ||  filename.indexOf(':')  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  ==  0  ||  filename.indexOf(':')  ==  0)  {	  if(filenamePrefix.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
119	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.indexOf(':')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.indexOf(':')  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0  ||  filename.indexOf(':')  ==  0)  {	  if(filenamePrefix.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
120	[BUG]  [BUGGY]  if(filenamePrefix.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf(':')  >=  0)  {	  if(filename.indexOf(':')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
121	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  0  ||  filenamePrefix.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  <  0  ||  filenamePrefix.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  0  ||  filenamePrefix.indexOf(':')  >=  0)  {	  if(filename.indexOf(':')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
122	[BUG]  [BUGGY]  if(module$test.indexOf( "module$test   ")  <  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module$test.indexOf( "module$test   ")  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module$test.indexOf( "module$test   ")  <  0)  {	  if(filename.indexOf(   "module$test   ")    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
123	[BUG]  [BUGGY]  if(filename.indexOf('n')!=  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n')!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n')!=  0)  {	  if(filenamePrefix.indexOf('n')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
124	[BUG]  [BUGGY]  if(filename.indexOf('n')  ==  0  ||  filename.indexOf(':')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n')  ==  0  ||  filename.indexOf(':')  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n')  ==  0  ||  filename.indexOf(':')  ==  0)  {	  if(filenamePrefix.indexOf('n')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
125	[BUG]  [BUGGY]  if(filename.indexOf('.')  ==  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  ==  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  ==  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
126	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  >=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
127	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  >=  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
128	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
129	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length()  +  1);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filenamePrefix.length()  +  1);	  String    currentFilename    =    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
130	[BUG]  [BUGGY]  if(filename.length()  ==  0  ||  filename.indexOf('/',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0  ||  filename.indexOf('/',  filename.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0  ||  filename.indexOf('/',  filename.length())  ==  0)  {	  if(filename.indexOf('/',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
131	[BUG]  [BUGGY]  if(filename.indexOf('/',  filenamePrefix.length())  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/',  filenamePrefix.length())  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/',  filenamePrefix.length())  >=  0)  {	  if(filename.indexOf('/',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
132	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('/',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('/',  filename.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('/',  filename.length())  ==  0)  {	  if(filename.indexOf('/',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
133	[BUG]  [BUGGY]  if(filename.indexOf('/',  filenamePrefix.length())!=  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/',  filenamePrefix.length())!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/',  filenamePrefix.length())!=  0)  {	  if(filename.indexOf('/',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
134	[BUG]  [BUGGY]  if(filename.length()  ==  0  ||  filename.indexOf('/',  filename.length())  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0  ||  filename.indexOf('/',  filename.length())  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0  ||  filename.indexOf('/',  filename.length())  >=  0)  {	  if(filename.indexOf('/',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
135	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  ==  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
136	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
137	[BUG]  [BUGGY]  if(filename.indexOf(':')  >=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  >=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  >=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
138	[BUG]  [BUGGY]  if(filename.indexOf(':')  >=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  >=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  >=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
139	[BUG]  [BUGGY]  if(filename.indexOf(':')  >=  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  >=  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  >=  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
140	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.indexOf(':')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.indexOf(':')  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  ||  filename.indexOf(':')  ==  0)  {	  if(filenamePrefix.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
141	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {	  if(filenamePrefix.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
142	[BUG]  [BUGGY]  if(filename.indexOf('n')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf('n')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
143	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('/')!=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('/')!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('/')!=  0)  {	  if(filename.indexOf('/')!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
144	[BUG]  [BUGGY]  if(filename.indexOf('.')  ==  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  ==  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  ==  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
145	[BUG]  [BUGGY]  if(filename.length()  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
146	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  >=  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
147	[BUG]  [BUGGY]  if(module$test.indexOf( "module$test ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module$test.indexOf( "module$test ")  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module$test.indexOf( "module$test ")  >=  0)  {	  if(module$test.indexOf(   "module$test       ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
148	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
149	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.indexOf('/')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.indexOf('/')  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0  ||  filename.indexOf('/')  <  0)  {	  if(filename.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
150	[BUG]  [BUGGY]  if(filename.indexOf('$')  >=  -1)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  >=  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  >=  -1)  {	  if(filename.indexOf('$')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
151	[BUG]  [BUGGY]  if(filename.indexOf('$')!=  -1)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')!=  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')!=  -1)  {	  if(filename.indexOf('$')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
152	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('$')  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('$')  ==  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('$')  ==  -1)  {	  if(filename.indexOf('$')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
153	[BUG]  [BUGGY]  if(filename.indexOf('$')  <  -1)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  <  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  <  -1)  {	  if(filename.indexOf('$')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
154	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('$')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
155	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf('$')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
156	[BUG]  [BUGGY]  File  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  File  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	File  currentFilename  =  filename.substring(0,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
157	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  filename  =  filename.substring(0,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
158	[BUG]  [BUGGY]  if(filename.indexOf('.',  filenamePrefix.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.',  filenamePrefix.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.',  filenamePrefix.length())  <  0)  {	  if(filename.indexOf('.',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
159	[BUG]  [BUGGY]  if(filename.length()  <  0  ||  filename.indexOf('.',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  <  0  ||  filename.indexOf('.',  filename.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  <  0  ||  filename.indexOf('.',  filename.length())  <  0)  {	  if(filename.indexOf('.',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
160	[BUG]  [BUGGY]  if(filename.indexOf('.',  filename.length())  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.',  filename.length())  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.',  filename.length())  >=  0)  {	  if(filename.indexOf('.',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
161	[BUG]  [BUGGY]  if(filename.indexOf('.',  filename.length()  -  1)  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.',  filename.length()  -  1)  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.',  filename.length()  -  1)  <  0)  {	  if(filename.indexOf('.',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
162	[BUG]  [BUGGY]  if(filename.indexOf('.',  filename.length()  +  1)  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.',  filename.length()  +  1)  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.',  filename.length()  +  1)  <  0)  {	  if(filename.indexOf('.',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
163	[BUG]  [BUGGY]  if(filename.indexOf('.',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.',  filename.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.',  filename.length())  ==  0)  {	  if(filename.indexOf('.',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
164	[BUG]  [BUGGY]  String  currentFilename  =  files.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  currentFilename  =  files.substring(0,  filename.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  files.substring(0,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
165	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()));  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()));	  String    currentFilename    =    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
166	[BUG]  [BUGGY]  if(module.indexOf( ".module$ ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module.indexOf( ".module$ ")  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module.indexOf( ".module$ ")  >=  0)  {	  if(filename.indexOf(   ".module$   ")    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
167	[BUG]  [BUGGY]  filename  =  module.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  filename  =  module.substring(0,  filename.length()  -  1);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	filename  =  module.substring(0,  filename.length()  -  1);	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    module.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
168	[BUG]  [BUGGY]  currentFilename  =  module.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  currentFilename  =  module.substring(0,  filename.length()  -  1);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	currentFilename  =  module.substring(0,  filename.length()  -  1);	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    module.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
169	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0)  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    module.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
170	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  >  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  >  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    module.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
171	[BUG]  [BUGGY]  if(filename.length()!=  0)  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()!=  0)  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()!=  0)  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    module.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
172	[BUG]  [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '$')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '$')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '$')  {	  if(filename.indexOf('$')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
173	[BUG]  [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('$')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
174	[BUG]  [BUGGY]  if(filename.indexOf('$')>  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '$')  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')>  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '$')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')>  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '$')  {	  if(filename.indexOf('$')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
175	[BUG]  [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  '$')  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  '$')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  '$')  {	  if(filename.indexOf('$')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
176	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  ==  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
177	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename!=  null  ||  filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
178	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename  ==  null  ||  filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
179	[BUG]  [BUGGY]  if(filename.indexOf('_')  >=  -1)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  >=  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  >=  -1)  {	  if(filename.indexOf('_')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
180	[BUG]  [BUGGY]  if(filename.indexOf('_')!=  -1)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')!=  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')!=  -1)  {	  if(filename.indexOf('_')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
181	[BUG]  [BUGGY]  if(filename.indexOf('_')  <  -1)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  <  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  <  -1)  {	  if(filename.indexOf('_')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
182	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('_')  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('_')  ==  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('_')  ==  -1)  {	  if(filename.indexOf('_')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
183	[BUG]  [BUGGY]  if(filename.indexOf('_',  filenamePrefix.length())  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_',  filenamePrefix.length())  ==  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_',  filenamePrefix.length())  ==  -1)  {	  if(filename.indexOf('_')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
184	[BUG]  [BUGGY]  if(filename.indexOf('_')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('_')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
185	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  ==  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
186	[BUG]  [BUGGY]  if(filename.indexOf(':')  >=  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  >=  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  >=  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
187	[BUG]  [BUGGY]  if(filename.length()  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
188	[BUG]  [BUGGY]  if(filename.indexOf(':')!=  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')!=  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')!=  0  &&  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
189	[BUG]  [BUGGY]  if(filename.indexOf(':')  >=  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  >=  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  >=  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
190	[BUG]  [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '_')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '_')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '_')  {	  if(filename.indexOf('_')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
191	[BUG]  [BUGGY]  if(filename.indexOf('_')>  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '_')  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')>  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '_')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')>  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '_')  {	  if(filename.indexOf('_')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
192	[BUG]  [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  '_')  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  '_')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)  ==  '_')  {	  if(filename.indexOf('_')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
193	[BUG]  [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('_')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
194	[BUG]  [BUGGY]  if(filename.indexOf('')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
195	[BUG]  [BUGGY]  if(filename.indexOf('')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
196	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
197	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
198	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf(':')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
199	[BUG]  [BUGGY]  if(filename.indexOf('n')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf('n')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
200	[BUG]  [BUGGY]  if(filename.indexOf('n')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n')>  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('n')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
201	[BUG]  [BUGGY]  if(filename.indexOf('n')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('n')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
202	[BUG]  [BUGGY]  if(filename.indexOf('n')>  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n')>  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n')>  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {	  if(filename.indexOf('n')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
203	[BUG]  [BUGGY]  if(filename.indexOf('$',  filenamePrefix.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$',  filenamePrefix.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$',  filenamePrefix.length())  ==  0)  {	  if(filename.indexOf('$',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
204	[BUG]  [BUGGY]  if(filename.length()  ==  0  ||  filename.indexOf('$',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0  ||  filename.indexOf('$',  filename.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0  ||  filename.indexOf('$',  filename.length())  ==  0)  {	  if(filename.indexOf('$',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
205	[BUG]  [BUGGY]  if(filename.indexOf('$',  filenamePrefix.length())  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$',  filenamePrefix.length())  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$',  filenamePrefix.length())  >=  0)  {	  if(filename.indexOf('$',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
206	[BUG]  [BUGGY]  if(filename.indexOf('$',  filename.length()  -  1)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$',  filename.length()  -  1)  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$',  filename.length()  -  1)  ==  0)  {	  if(filename.indexOf('$',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
207	[BUG]  [BUGGY]  if(filename.indexOf('$',  filename.length()  +  1)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$',  filename.length()  +  1)  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$',  filename.length()  +  1)  ==  0)  {	  if(filename.indexOf('$',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
208	[BUG]  [BUGGY]  if(filename.indexOf('$',  filenamePrefix.length())!=  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$',  filenamePrefix.length())!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$',  filenamePrefix.length())!=  0)  {	  if(filename.indexOf('$',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
209	[BUG]  [BUGGY]  if(filename.indexOf('')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filenamePrefix.indexOf('')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
210	[BUG]  [BUGGY]  if(filename.indexOf('')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {	  if(filenamePrefix.indexOf('')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
211	[BUG]  [BUGGY]  if(filename.indexOf(':')  >=  -1)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  >=  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  >=  -1)  {	  if(filename.indexOf(':')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
212	[BUG]  [BUGGY]  if(filename.indexOf(':')!=  -1)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')!=  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')!=  -1)  {	  if(filename.indexOf(':')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
213	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  -1)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  <  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  -1)  {	  if(filename.indexOf(':')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
214	[BUG]  [BUGGY]  if(filenamePrefix.indexOf(':')  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf(':')  ==  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf(':')  ==  -1)  {	  if(filename.indexOf(':')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
215	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
216	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  -1  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf(':')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
217	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('/')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('/')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('/')  >=  0)  {	  if(filename.indexOf('/')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
218	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length();  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length();  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filename.length();	  String    currentFilename    =    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
219	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('.')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('.')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('.')  >=  0)  {	  if(filename.indexOf('.')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
220	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0  ||  filename.indexOf(':')  >=  0)  {	  if(filename.indexOf('.')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
221	[BUG]  [BUGGY]  if(filename.indexOf( ".module$test ")!=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( ".module$test ")!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( ".module$test ")!=  0)  {	  if(filename.indexOf(   "module$   ")!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
222	[BUG]  [BUGGY]  if(filename.indexOf( ".module$ ")!=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( ".module$ ")!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( ".module$ ")!=  0)  {	  if(filename.indexOf(   "module$   ")!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
223	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('$')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('$')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('$')  >=  0)  {	  if(filename.indexOf('$')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
224	[BUG]  [BUGGY]  if(filename.indexOf('$')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '$')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '$')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  <  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '$')  {	  if(filename.indexOf('$')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
225	[BUG]  [BUGGY]  if(filename.indexOf('n',  filename.length()  +  1)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n',  filename.length()  +  1)  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n',  filename.length()  +  1)  ==  0)  {	  if(filename.indexOf('n',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
226	[BUG]  [BUGGY]  if(filename.indexOf('n',  filename.length()  -  1)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n',  filename.length()  -  1)  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n',  filename.length()  -  1)  ==  0)  {	  if(filename.indexOf('n',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
227	[BUG]  [BUGGY]  if(filename.indexOf('n',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n',  filename.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n',  filename.length())  ==  0)  {	  if(filename.indexOf('n',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
228	[BUG]  [BUGGY]  if(filename.indexOf('n',  filename.length())  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n',  filename.length())  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n',  filename.length())  >=  0)  {	  if(filename.indexOf('n',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
229	[BUG]  [BUGGY]  if(filename.indexOf('',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('',  filename.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('',  filename.length())  ==  0)  {	  if(filename.indexOf('n',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
230	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  ==  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
231	[BUG]  [BUGGY]  if(filename.indexOf(':')  >=  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  >=  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  >=  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
232	[BUG]  [BUGGY]  if(filename.length()  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
233	[BUG]  [BUGGY]  if(filename.indexOf(':')  >=  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  >=  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  >=  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
234	[BUG]  [BUGGY]  if(filename.indexOf(':')!=  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')!=  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')!=  0  &&  filenamePrefix.charAt(filename.length()  -  1)!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
235	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator "));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator "));  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator "));  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    new    String(System.getProperty(   "line.separator   "));    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
236	[BUG]  [BUGGY]  if(filename.length()!=  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator "));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()!=  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator "));  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()!=  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator "));  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    new    String(System.getProperty(   "line.separator   "));    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
237	[BUG]  [BUGGY]  if(filenamePrefix.length()  ==  0)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.length()  ==  0)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.length()  ==  0)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    new    String(System.getProperty(   "line.separator   "));    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
238	[BUG]  [BUGGY]  if(filename.indexOf(':',  filenamePrefix.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':',  filenamePrefix.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filenamePrefix.length())  ==  0)  {	  if(filename.indexOf(':',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
239	[BUG]  [BUGGY]  if(filename.length()  ==  0  ||  filename.indexOf(':',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0  ||  filename.indexOf(':',  filename.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0  ||  filename.indexOf(':',  filename.length())  ==  0)  {	  if(filename.indexOf(':',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
240	[BUG]  [BUGGY]  if(filename.indexOf(':',  filenamePrefix.length())  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':',  filenamePrefix.length())  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filenamePrefix.length())  >=  0)  {	  if(filename.indexOf(':',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
241	[BUG]  [BUGGY]  if(filename.indexOf(':',  filenamePrefix.length())!=  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':',  filenamePrefix.length())!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filenamePrefix.length())!=  0)  {	  if(filename.indexOf(':',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
242	[BUG]  [BUGGY]  if(filename.indexOf(':',  filename.length()  -  1)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':',  filename.length()  -  1)  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filename.length()  -  1)  ==  0)  {	  if(filename.indexOf(':',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
243	[BUG]  [BUGGY]  if(filenamePrefix.indexOf(':',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf(':',  filename.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf(':',  filename.length())  ==  0)  {	  if(filename.indexOf(':',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
244	[BUG]  [BUGGY]  if(filename.indexOf('$',  filename.length())  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$',  filename.length())  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$',  filename.length())  >=  0)  {	  if(filename.indexOf('$',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
245	[BUG]  [BUGGY]  if(filename.indexOf('$',  filename.length())>  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$',  filename.length())>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$',  filename.length())>  0)  {	  if(filename.indexOf('$',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
246	[BUG]  [BUGGY]  if(filename.indexOf('$',  filename.length())!=  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$',  filename.length())!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$',  filename.length())!=  0)  {	  if(filename.indexOf('$',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
247	[BUG]  [BUGGY]  File  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  File  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	File  filename  =  filename.substring(0,  filename.length()  -  1);	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
248	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf(':')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
249	[BUG]  [BUGGY]  String  newFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  newFilename  =  filename.substring(0,  filename.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  newFilename  =  filename.substring(0,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
250	[BUG]  [BUGGY]  if(filename.indexOf( "module$ ")>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( "module$ ")>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "module$ ")>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf(   "module$   ")>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
251	[BUG]  [BUGGY]  if(filename.indexOf( "module$ ")>  0  ||  filename.indexOf( "module$ ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( "module$ ")>  0  ||  filename.indexOf( "module$ ")  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "module$ ")>  0  ||  filename.indexOf( "module$ ")  >=  0)  {	  if(filename.indexOf(   "module$   ")>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
252	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.endsWith( ".java "))  {	  if(filename.indexOf('')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
253	[BUG]  [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')>  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {	  if(filename.indexOf('.')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
254	[BUG]  [BUGGY]  if(filename.indexOf('.')>  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')>  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')>  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
255	[BUG]  [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')>  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {	  if(filename.indexOf('.')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
256	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('.')!=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('.')!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('.')!=  0)  {	  if(filename.indexOf('.')!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
257	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  -1)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  >=  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  -1)  {	  if(filename.indexOf('.')!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
258	[BUG]  [BUGGY]  if(filename.indexOf(':')>  -1)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')>  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')>  -1)  {	  if(filename.indexOf(':')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
259	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
260	[BUG]  [BUGGY]  if(filenamePrefix.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
261	[BUG]  [BUGGY]  File  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  File  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	File  filename  =  filename.substring(0,  filename.length()  -  2);	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
262	[BUG]  [BUGGY]  if(filename.indexOf('_')>  -1)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')>  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')>  -1)  {	  if(filename.indexOf('_')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
263	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  ==  0)  {	  if(filename.indexOf('_')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
264	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	||  filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
265	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator   "));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator   "));  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator   "));  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    new    String(System.getProperty(   "line.separator   "));    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
266	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.s  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.s  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.s	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    new    String(System.getProperty(   "line.separator   "));    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
267	[BUG]  [BUGGY]  if(filenamePrefix  ==  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator   "));  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix  ==  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator   "));  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix  ==  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator   "));  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    new    String(System.getProperty(   "line.separator   "));    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
268	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator   ")  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator   ")  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator   ")	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    new    String(System.getProperty(   "line.separator   "));    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
269	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    new    String(System.getProperty(   "line.separator   "));    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
270	[BUG]  [BUGGY]  if(filename.startsWith( ".java ")||  filename.indexOf('/')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.startsWith( ".java ")||  filename.indexOf('/')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.startsWith( ".java ")||  filename.indexOf('/')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
271	[BUG]  [BUGGY]  if(filename.indexOf('/')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
272	[BUG]  [BUGGY]  if(filename.indexOf('/')>  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')>  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')>  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {	  if(filename.indexOf('/')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
273	[BUG]  [BUGGY]  if(module$test.indexOf( "module$ ")  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module$test.indexOf( "module$ ")  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module$test.indexOf( "module$ ")  ==  0)  {	  if(module$test.indexOf(   "module$test       ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
274	[BUG]  [BUGGY]  if(module$test.indexOf('/')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module$test.indexOf('/')  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module$test.indexOf('/')  ==  0)  {	  if(module$test.indexOf(   "module$test       ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
275	[BUG]  [BUGGY]  if(filename.indexOf('.',  filename.length())>  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.',  filename.length())>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.',  filename.length())>  0)  {	  if(filename.indexOf('.',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
276	[BUG]  [BUGGY]  if(filename.indexOf('.',  filename.length())!=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.',  filename.length())!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.',  filename.length())!=  0)  {	  if(filename.indexOf('.',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
277	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('.')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('.')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename  ==  null  ||  filename.indexOf('.')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
278	[BUG]  [BUGGY]  if(filename.indexOf('$')!=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')!=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')!=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('$')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
279	[BUG]  [BUGGY]  if(filename.indexOf('$')!=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')!=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')!=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('$')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
280	[BUG]  [BUGGY]  if(filename.indexOf('_',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_',  filename.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_',  filename.length())  ==  0)  {	  if(filename.indexOf('_',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
281	[BUG]  [BUGGY]  if(filename.indexOf('_',  filename.length())>  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_',  filename.length())>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_',  filename.length())>  0)  {	  if(filename.indexOf('_',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
282	[BUG]  [BUGGY]  if(filename.indexOf('_',  filename.length())!=  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_',  filename.length())!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_',  filename.length())!=  0)  {	  if(filename.indexOf('_',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
283	[BUG]  [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('$')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
284	[BUG]  [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')>  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {	  if(filename.indexOf('$')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
285	[BUG]  [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')>  0  ||  filename.charAt(filename.length()  -  1)!=  ':')  {	  if(filename.indexOf('$')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
286	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
287	[BUG]  [BUGGY]  if(filename.indexOf(':',  filename.length())!=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':',  filename.length())!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filename.length())!=  0)  {	  if(filename.indexOf(':',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
288	[BUG]  [BUGGY]  if(filename.indexOf(':',  filename.length())>  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':',  filename.length())>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filename.length())>  0)  {	  if(filename.indexOf(':',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
289	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  >=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
290	[BUG]  [BUGGY]  if(filename.indexOf('.')!=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')!=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')!=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
291	[BUG]  [BUGGY]  if(filename.indexOf( "$module$ ")  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( "$module$ ")  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "$module$ ")  ==  0)  {	  if(filename.indexOf(   ".module$   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
292	[BUG]  [BUGGY]  if(filename.indexOf( ".module ")  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( ".module ")  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( ".module ")  ==  0)  {	  if(filename.indexOf(   ".module$   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
293	[BUG]  [BUGGY]  if(filename.indexOf(':',  filename.length()  +  1)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':',  filename.length()  +  1)  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filename.length()  +  1)  ==  0)  {	  if(filename.indexOf(':',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
294	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    module.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
295	[BUG]  [BUGGY]  if(filenamePrefix  ==  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix  ==  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix  ==  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    module.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
296	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    module.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
297	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename  ==  null  ||  filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
298	[BUG]  [BUGGY]  if(filename  <  null  ||  filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename  <  null  ||  filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename  <  null  ||  filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
299	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename!=  null  ||  filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
300	[BUG]  [BUGGY]  if(module.indexOf('n',  filename)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module.indexOf('n',  filename)  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module.indexOf('n',  filename)  ==  0)  {	  if(module.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
301	[BUG]  [BUGGY]  if(module.indexOf('/')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module.indexOf('/')  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module.indexOf('/')  ==  0)  {	  if(module.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
302	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  ||  filename.indexOf(':')  >=  0)  {	  if(filenamePrefix.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
303	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {	  if(filename.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
304	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('.')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('.')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename  ==  null  ||  filename.indexOf('.')  ==  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
305	[BUG]  [BUGGY]  if(filename.indexOf('$')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('$')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
306	[BUG]  [BUGGY]  if(filename.indexOf('$')  <  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  <  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  <  0  ||  filename.charAt(filename.length()  -  1)  ==  '/')  {	  if(filename.indexOf('$')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
307	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('$')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('$')  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('$')  <  0)  {	  if(filename.indexOf('$')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
308	[BUG]  [BUGGY]  if(filename.indexOf( "$module$test   ")  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( "$module$test   ")  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "$module$test   ")  ==  0)  {	  if(filename.indexOf(   ".module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
309	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.indexOf(':')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.indexOf(':')  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  ==  0  ||  filename.indexOf(':')  ==  0)  {	  if(filenamePrefix.indexOf('$')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
310	[BUG]  [BUGGY]  if(filename.indexOf('/',  filename.length())!=  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/',  filename.length())!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/',  filename.length())!=  0)  {	  if(filename.indexOf('/',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
311	[BUG]  [BUGGY]  if(filename.indexOf('/',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/',  filename.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/',  filename.length())  <  0)  {	  if(filename.indexOf('/',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
312	[BUG]  [BUGGY]  if(filename.indexOf('/',  filename.length())>  0)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/',  filename.length())>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/',  filename.length())>  0)  {	  if(filename.indexOf('/',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
313	[BUG]  [BUGGY]  if(filename.indexOf('$')>  -1)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')>  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')>  -1)  {	  if(filename.indexOf('$')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
314	[BUG]  [BUGGY]  if(filename.indexOf('/')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
315	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('/')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('/')  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('/')  <  0)  {	  if(filename.indexOf('/')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
316	[BUG]  [BUGGY]  if(filename.indexOf('_')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '_')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '_')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  <  0  ||  filename.charAt(filename.length()  -  1)!=  '_')  {	  if(filename.indexOf('_')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
317	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  0  ||  filename.indexOf(':')  >=  0)  {	  if(filenamePrefix.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
318	[BUG]  [BUGGY]  if(filenamePrefix.indexOf(':')!=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf(':')!=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf(':')!=  0)  {	  if(filename.indexOf(':')!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
319	[BUG]  [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.charAt(filename.length()  -  1)!=  '_')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.charAt(filename.length()  -  1)!=  '_')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')>  0  ||  filename.charAt(filename.length()  -  1)!=  '_')  {	  if(filename.indexOf('_')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
320	[BUG]  [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('_')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
321	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filenamePrefix.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  filename  =  filename.substring(0,  filenamePrefix.length());	  String    currentFilename    =    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
322	[BUG]  [BUGGY]  if(filename.indexOf(':')!=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')!=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')!=  0  &&  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
323	[BUG]  [BUGGY]  if(filename.indexOf( "$module$ ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( "$module$ ")  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "$module$ ")  >=  0)  {	  if(filename.indexOf(   ".module$   ")    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
324	[BUG]  [BUGGY]  if(filename.indexOf( ".module ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( ".module ")  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( ".module ")  >=  0)  {	  if(filename.indexOf(   ".module$   ")    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
325	[BUG]  [BUGGY]  if(filename.indexOf( ".svg ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( ".svg ")  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( ".svg ")  >=  0)  {	  if(filename.indexOf(   ".module$   ")    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
326	[BUG]  [BUGGY]  if(filename.indexOf(':')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')>  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf(':')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
327	[BUG]  [BUGGY]  if(filename.indexOf(':')>  0  ||  filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')>  0  ||  filename.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')>  0  ||  filename.indexOf(':')  >=  0)  {	  if(filename.indexOf(':')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
328	[BUG]  [BUGGY]  if(filename.indexOf('$',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$',  filename.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$',  filename.length())  <  0)  {	  if(filename.indexOf('$',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
329	[BUG]  [BUGGY]  if(filename.indexOf('$',  filenamePrefix.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$',  filenamePrefix.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$',  filenamePrefix.length())  <  0)  {	  if(filename.indexOf('$',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
330	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('$',  filename.length())  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('$',  filename.length())  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('$',  filename.length())  ==  0)  {	  if(filename.indexOf('$',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
331	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0  ||  filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  >=  0  ||  filename.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0  ||  filename.indexOf(':')  >=  0)  {	  if(filename.indexOf('.')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
332	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename!=  null  &&  filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename!=  null  &&  filename.indexOf('/')  ==  0  ||  filename.charAt(filenamePrefix.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
333	[BUG]  [BUGGY]  if(filename.indexOf('/')  >=  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  >=  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  >=  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
334	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  >=  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
335	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
336	[BUG]  [BUGGY]  if(filename.indexOf('.')  ==  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  ==  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  ==  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
337	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  ==  0  ||  filename.indexOf(':')  >=  0)  {	  if(filenamePrefix.indexOf('$')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
338	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.indexOf(':')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.indexOf(':')  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  ==  0  ||  filename.indexOf(':')  <  0)  {	  if(filenamePrefix.indexOf('$')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
339	[BUG]  [BUGGY]  if(module.indexOf( "module$test ")>  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module.indexOf( "module$test ")>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module.indexOf( "module$test ")>  0)  {	  if(module.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
340	[BUG]  [BUGGY]  if(module.indexOf( ".module$test ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module.indexOf( ".module$test ")  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module.indexOf( ".module$test ")  >=  0)  {	  if(module.indexOf(   "module$test   ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
341	[BUG]  [BUGGY]  if(filename.indexOf('_')  >=  0  ||  filenamePrefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  >=  0  ||  filenamePrefix.length()  >  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  >=  0  ||  filenamePrefix.length()  >  0)  {	  if(filename.indexOf('_')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
342	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  0  ||  filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  <  0  ||  filename.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  0  ||  filename.indexOf(':')  >=  0)  {	  if(filename.indexOf(':')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
343	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  0  ||  filenamePrefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  <  0  ||  filenamePrefix.length()  >  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  0  ||  filenamePrefix.length()  >  0)  {	  if(filename.indexOf(':')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
344	[BUG]  [BUGGY]  if(filename.indexOf('$')  >=  0  ||  filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  >=  0  ||  filename.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  >=  0  ||  filename.indexOf(':')  >=  0)  {	  if(filename.indexOf('$')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
345	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length()));  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length()));  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filenamePrefix.length()));	  String    currentFilename    =    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
346	[BUG]  [BUGGY]  if(module!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    module.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
347	[BUG]  [BUGGY]  if(module  ==  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module  ==  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    module.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
348	[BUG]  [BUGGY]  if(filenamePrefix.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  module.substring(0,  filename.length()  -  1);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    module.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
349	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('_',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('_',  filename.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('_',  filename.length())  <  0)  {	  if(filename.indexOf('_',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
350	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  0  ||  filename.charAt(filenamePrefix.length())!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  <  0  ||  filename.charAt(filenamePrefix.length())!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  0  ||  filename.charAt(filenamePrefix.length())!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
351	[BUG]  [BUGGY]  if(filename.indexOf(':')  >=  0  ||  filename.charAt(filenamePrefix.length())!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  >=  0  ||  filename.charAt(filenamePrefix.length())!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  >=  0  ||  filename.charAt(filenamePrefix.length())!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filenamePrefix.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
352	[BUG]  [BUGGY]  if(filename.indexOf('$',  filename.length())  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$',  filename.length())  ==  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$',  filename.length())  ==  -1)  {	  if(filename.indexOf('$')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
353	[BUG]  [BUGGY]  if(filename.indexOf('n',  filename.length())>  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n',  filename.length())>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n',  filename.length())>  0)  {	  if(filename.indexOf('n',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
354	[BUG]  [BUGGY]  if(filename.indexOf('n',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('n',  filename.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('n',  filename.length())  <  0)  {	  if(filename.indexOf('n',    filenamePrefix.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
355	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')  ==  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')  ==  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {	  if(filename.indexOf('$')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
356	[BUG]  [BUGGY]  if(filename.indexOf('.')  >=  0  ||  filenamePrefix.charAt(filename.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  >=  0  ||  filenamePrefix.charAt(filename.length())!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  >=  0  ||  filenamePrefix.charAt(filename.length())!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
357	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0  ||  filenamePrefix.charAt(filename.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0  ||  filenamePrefix.charAt(filename.length())!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0  ||  filenamePrefix.charAt(filename.length())!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
358	[BUG]  [BUGGY]  if(filename.indexOf('.')  ==  0  ||  filenamePrefix.charAt(filename.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  ==  0  ||  filenamePrefix.charAt(filename.length())!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  ==  0  ||  filenamePrefix.charAt(filename.length())!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
359	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()).trim();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()).trim();  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()).trim();	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
360	[BUG]  [BUGGY]  if(filename.startsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.startsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.startsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
361	[BUG]  [BUGGY]  if(filename.endsWith( "java "))  {  currentFilename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.endsWith( "java "))  {  currentFilename  =  filename.substring(0,  filename.length());  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.endsWith( "java "))  {  currentFilename  =  filename.substring(0,  filename.length());  }	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
362	[BUG]  [BUGGY]  if(filename.indexOf('')  <  0  ||  filenamePrefix.indexOf('')>  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('')  <  0  ||  filenamePrefix.indexOf('')>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('')  <  0  ||  filenamePrefix.indexOf('')>  0)  {	  if(filename.indexOf('')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
363	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('')  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('')  <  0)  {	  if(filename.indexOf('')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
364	[BUG]  [BUGGY]  if(filename.indexOf('')  <  0  ||  filenamePrefix.indexOf('')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('')  <  0  ||  filenamePrefix.indexOf('')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('')  <  0  ||  filenamePrefix.indexOf('')  >=  0)  {	  if(filename.indexOf('')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
365	[BUG]  [BUGGY]  if(filename.indexOf('')  <  0  ||  filename.indexOf('')>  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('')  <  0  ||  filename.indexOf('')>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('')  <  0  ||  filename.indexOf('')>  0)  {	  if(filename.indexOf('')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
366	[BUG]  [BUGGY]  if(filename.indexOf('/')>  0  ||  filename.indexOf(':')>  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')>  0  ||  filename.indexOf(':')>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')>  0  ||  filename.indexOf(':')>  0)  {	  if(filename.indexOf('/')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
367	[BUG]  [BUGGY]  if(filename.indexOf('/')>  0  ||  filenamePrefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')>  0  ||  filenamePrefix.length()  >  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')>  0  ||  filenamePrefix.length()  >  0)  {	  if(filename.indexOf('/')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
368	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('/')>  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('/')>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('/')>  0)  {	  if(filename.indexOf('/')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
369	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.indexOf(':')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.indexOf(':')  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  0  ||  filename.indexOf(':')  <  0)  {	  if(filenamePrefix.indexOf(':')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
370	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('.')  >=  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('.')  >=  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('.')  >=  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.indexOf('.')    >=    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
371	[BUG]  [BUGGY]  if(filename.indexOf('.')>  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')>  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')>  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.indexOf('.')    >=    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
372	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length())!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  ||  filenamePrefix.charAt(filename.length())!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
373	[BUG]  [BUGGY]  if(filename.indexOf('/')!=  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')!=  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')!=  0  ||  filenamePrefix.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
374	[BUG]  [BUGGY]  if(filename.indexOf( "module$test ")>  0  ||  filename.indexOf( "module$test ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( "module$test ")>  0  ||  filename.indexOf( "module$test ")  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "module$test ")>  0  ||  filename.indexOf( "module$test ")  >=  0)  {	  if(filename.indexOf(   "module$test   ")>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
375	[BUG]  [BUGGY]  if(filename.indexOf( "module$test ")>  0  ||  filename.indexOf( "module$test ")  <  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( "module$test ")>  0  ||  filename.indexOf( "module$test ")  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "module$test ")>  0  ||  filename.indexOf( "module$test ")  <  0)  {	  if(filename.indexOf(   "module$test   ")>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
376	[BUG]  [BUGGY]  if(filename.indexOf('_')>  0  ||  filenamePrefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')>  0  ||  filenamePrefix.length()  >  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')>  0  ||  filenamePrefix.length()  >  0)  {	  if(filename.indexOf('_')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
377	[BUG]  [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.indexOf(':')>  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.indexOf(':')>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')>  0  ||  filename.indexOf(':')>  0)  {	  if(filename.indexOf('_')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
378	[BUG]  [BUGGY]  if(filename.indexOf('_')>  0  ||  filenamePrefix.startsWith( "__ "))  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')>  0  ||  filenamePrefix.startsWith( "__ "))  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')>  0  ||  filenamePrefix.startsWith( "__ "))  {	  if(filename.indexOf('_')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
379	[BUG]  [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')>  0  ||  filename.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')>  0  ||  filename.indexOf(':')  >=  0)  {	  if(filename.indexOf('_')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
380	[BUG]  [BUGGY]  if(filename.indexOf('_')  <  0  ||  filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  <  0  ||  filename.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  <  0  ||  filename.indexOf(':')  >=  0)  {	  if(filename.indexOf('_')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
381	[BUG]  [BUGGY]  if(filename.indexOf('_')  <  0  ||  filenamePrefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  <  0  ||  filenamePrefix.length()  >  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  <  0  ||  filenamePrefix.length()  >  0)  {	  if(filename.indexOf('_')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
382	[BUG]  [BUGGY]  if(filename.indexOf('_')  <  0  ||  filename.indexOf(':')>  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  <  0  ||  filename.indexOf(':')>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  <  0  ||  filename.indexOf(':')>  0)  {	  if(filename.indexOf('_')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
383	[BUG]  [BUGGY]  if(filename.indexOf('_',  filename.length())  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_',  filename.length())  ==  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_',  filename.length())  ==  -1)  {	  if(filename.indexOf('_')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
384	[BUG]  [BUGGY]  if(filename.indexOf( "module$ ")>  0  ||  filename.indexOf( "module$test ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( "module$ ")>  0  ||  filename.indexOf( "module$test ")  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "module$ ")>  0  ||  filename.indexOf( "module$test ")  >=  0)  {	  if(filename.indexOf(   "module$   ")>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
385	[BUG]  [BUGGY]  if(filename.indexOf('$')>  0  ||  filenamePrefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')>  0  ||  filenamePrefix.length()  >  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')>  0  ||  filenamePrefix.length()  >  0)  {	  if(filename.indexOf('$')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
386	[BUG]  [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.indexOf(':')>  0)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('$')>  0  ||  filename.indexOf(':')>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('$')>  0  ||  filename.indexOf(':')>  0)  {	  if(filename.indexOf('$')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
387	[BUG]  [BUGGY]  if(filename.indexOf('/')  >=  0  ||  filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  >=  0  ||  filename.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  >=  0  ||  filename.indexOf(':')  >=  0)  {	  if(filename.indexOf('/')!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
388	[BUG]  [BUGGY]  if(filename.indexOf( ".module$test ")  <  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( ".module$test ")  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( ".module$test ")  <  0)  {	  if(filename.indexOf(   "module$test   ")    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
389	[BUG]  [BUGGY]  if(filenamePrefix.indexOf(':',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf(':',  filename.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf(':',  filename.length())  <  0)  {	  if(filename.indexOf(':',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
390	[BUG]  [BUGGY]  String  actualFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  actualFilename  =  filename.substring(0,  filename.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  actualFilename  =  filename.substring(0,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
391	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filenameName.length());  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filenameName.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	String  currentFilename  =  filename.substring(0,  filenameName.length());	  String    currentFilename    =    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
392	[BUG]  [BUGGY]  if(filename.indexOf('/')  <  0  ||  filenamePrefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  <  0  ||  filenamePrefix.length()  >  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  <  0  ||  filenamePrefix.length()  >  0)  {	  if(filename.indexOf('/')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
393	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.indexOf('/')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.indexOf('/')  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0  ||  filename.indexOf('/')  ==  0)  {	  if(filenamePrefix.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
394	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.indexOf('/')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0  ||  filename.indexOf('/')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0  ||  filename.indexOf('/')  >=  0)  {	  if(filenamePrefix.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
395	[BUG]  [BUGGY]  if(filename.indexOf('_')  ==  0  ||  filename.indexOf(':')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  ==  0  ||  filename.indexOf(':')  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  ==  0  ||  filename.indexOf(':')  >=  0)  {	  if(filenamePrefix.indexOf('_')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
396	[BUG]  [BUGGY]  if(filename.indexOf('_')  ==  0  ||  filename.indexOf(':')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('_')  ==  0  ||  filename.indexOf(':')  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('_')  ==  0  ||  filename.indexOf(':')  <  0)  {	  if(filenamePrefix.indexOf('_')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
397	[BUG]  [BUGGY]  if(filenamePrefix.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length());  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length());  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
398	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  >  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  >  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  2);  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
399	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  currentFilename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.length()  >  0)  {  currentFilename  =  filename.substring(0,  filename.length());  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.length()  >  0)  {  currentFilename  =  filename.substring(0,  filename.length());  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
400	[BUG]  [BUGGY]  if(filename.indexOf( "._module$ ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf( "._module$ ")  >=  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf( "._module$ ")  >=  0)  {	  if(filename.indexOf(   ".module$   ")    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
401	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('.',  filename.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('.',  filename.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('.',  filename.length())  <  0)  {	  if(filename.indexOf('.',    filename.length())    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
402	[BUG]  [BUGGY]  File  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  File  filename  =  filename.substring(0,  filename.length());  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	File  filename  =  filename.substring(0,  filename.length());	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
403	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
404	[BUG]  [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.indexOf(':')>  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')>  0  ||  filename.indexOf(':')>  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')>  0  ||  filename.indexOf(':')>  0)  {	  if(filename.indexOf('.')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
405	[BUG]  [BUGGY]  if(filename.indexOf('.')>  0  ||  filenamePrefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')>  0  ||  filenamePrefix.length()  >  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')>  0  ||  filenamePrefix.length()  >  0)  {	  if(filename.indexOf('.')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
406	[BUG]  [BUGGY]  if(filename.indexOf('/')!=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')!=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')!=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('/')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
407	[BUG]  [BUGGY]  if(filename.indexOf('/',  filenamePrefix.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/',  filenamePrefix.length())  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/',  filenamePrefix.length())  <  0)  {	  if(filename.indexOf('/',    filename.length())    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
408	[BUG]  [BUGGY]  if(filename.indexOf(':')>  0  ||  filename.indexOf(':')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')>  0  ||  filename.indexOf(':')  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')>  0  ||  filename.indexOf(':')  <  0)  {	  if(filename.indexOf(':')>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
409	[BUG]  [BUGGY]  if(filename.indexOf('/')>  -1)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')>  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')>  -1)  {	  if(filename.indexOf('/')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
410	[BUG]  [BUGGY]  if(filename.indexOf('.')  <  0  ||  filenamePrefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('.')  <  0  ||  filenamePrefix.length()  >  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('.')  <  0  ||  filenamePrefix.length()  >  0)  {	  if(filename.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
411	[BUG]  [BUGGY]  if(filename.indexOf(':',  filename.length())  ==  -1)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':',  filename.length())  ==  -1)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':',  filename.length())  ==  -1)  {	  if(filename.indexOf(':')    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
412	[BUG]  [BUGGY]  File  filenamePrefix  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  File  filenamePrefix  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	File  filenamePrefix  =  filename.substring(0,  filename.length()  -  2);	  if(filename.endsWith(   ".java   "))    {    currentFilename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
413	[BUG]  [BUGGY]  if(filename.indexOf(':')  <  0  ||  filenamePrefix.charAt(filename.length())!=  ':')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  <  0  ||  filenamePrefix.charAt(filename.length())!=  ':')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  <  0  ||  filenamePrefix.charAt(filename.length())!=  ':')  {	  if(filename.indexOf(':')    ==    0    ||    filenamePrefix.charAt(filename.length()    -    1)!=    ':')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
414	[BUG]  [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.indexOf(':')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf('/')  ==  0  ||  filename.indexOf(':')  <  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf('/')  ==  0  ||  filename.indexOf(':')  <  0)  {	  if(filenamePrefix.indexOf('/')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
415	[BUG]  [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')  ==  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')  ==  0  ||  filename.charAt(filenamePrefix.length())!=  '/')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
416	[BUG]  [BUGGY]  if(filename.indexOf(':')!=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filename.indexOf(':')!=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filename.indexOf(':')!=  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf(':')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
417	[BUG]  [BUGGY]  if(filenamePrefix.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator   "));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator   "));  }  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator   "));  }	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    new    String(System.getProperty(   "line.separator   "));    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
418	[BUG]  [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix!=  null)  {  if(filename.length()  ==  0)  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  currentFilename  =  new  String(System.getProperty( "line.separator	  if(filename.length()    ==    0)    {    currentFilename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    currentFilename    =    new    String(System.getProperty(   "line.separator   "));    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
419	[BUG]  [BUGGY]  if(module$test.indexOf('.')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(module$test.indexOf('.')  ==  0)  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(module$test.indexOf('.')  ==  0)  {	  if(module$test.indexOf(   "module$test       ")    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
420	[BUG]  [BUGGY]  if(filenamePrefix.indexOf('.')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {      [BUGGY]  if(filenamePrefix.indexOf('.')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {  [BUGGY]      filename  =  filename.substring(filenamePrefix.length());  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	115	115	5	replace	if(filenamePrefix.indexOf('.')  ==  0  ||  filename.charAt(filename.length()  -  1)!=  '/')  {	  if(filename.indexOf('.')    ==    0    ||    filename.charAt(filename.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
