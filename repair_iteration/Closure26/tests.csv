name,outcome,runtime,stacktrace
com.google.javascript.jscomp.ProcessCommonJSModulesTest#testVarRenaming,FAIL,459629143,junit.framework.AssertionFailedError: Expected: goog.provide("module$test");var module$test={};var a$$module$test=1,b$$module$test=2;(function(){var a;b$$module$test=4})() Result: goog.provide("module$test");var module$test={};var a$$module$test=1,b$$module$test=2;(function(){var a;b$$module$test=4})();if(module$test.module$exports)module$test=module$test.module$exports Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING provide 1 [source_file: expected0] STRING module$test 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME module$test 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$module$test 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NAME b$$module$test 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] FUNCTION  1 [parenthesized: true] [source_file: expected0] NAME  1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME b$$module$test 1 [source_file: expected0] NUMBER 4.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: test] [input_id: InputId: test] EXPR_RESULT 1 [source_file: test] CALL 1 [source_file: test] GETPROP 1 [source_file: test] NAME goog 1 [source_file: test] STRING provide 1 [source_file: test] STRING module$test 1 [source_file: test] VAR 1 [source_file: test] NAME module$test 1 [source_file: test] OBJECTLIT 1 [source_file: test] VAR 1 [source_file: test] NAME a$$module$test 1 [originalname: a] [source_file: test] NUMBER 1.0 1 [source_file: test] NAME b$$module$test 1 [originalname: b] [source_file: test] NUMBER 2.0 1 [source_file: test] EXPR_RESULT 1 [source_file: test] CALL 1 [free_call: 1] [source_file: test] FUNCTION  1 [parenthesized: true] [source_file: test] NAME  1 [source_file: test] PARAM_LIST 1 [source_file: test] BLOCK 1 [source_file: test] VAR 1 [source_file: test] NAME a 1 [source_file: test] EXPR_RESULT 1 [source_file: test] ASSIGN 1 [source_file: test] NAME b$$module$test 1 [originalname: b] [source_file: test] NUMBER 4.0 1 [source_file: test] IF 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [source_file: test] STRING module$exports 1 [source_file: test] BLOCK 1 [source_file: test] EXPR_RESULT 1 [source_file: test] ASSIGN 1 [source_file: test] NAME module$test 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [source_file: test] STRING module$exports 1 [source_file: test]   Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING provide 1 [source_file: expected0] STRING module$test 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME module$test 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$module$test 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NAME b$$module$test 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] FUNCTION  1 [parenthesized: true] [source_file: expected0] NAME  1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME b$$module$test 1 [source_file: expected0] NUMBER 4.0 1 [source_file: expected0]   Subtree2: SCRIPT 1 [synthetic: 1] [source_file: test] [input_id: InputId: test] EXPR_RESULT 1 [source_file: test] CALL 1 [source_file: test] GETPROP 1 [source_file: test] NAME goog 1 [source_file: test] STRING provide 1 [source_file: test] STRING module$test 1 [source_file: test] VAR 1 [source_file: test] NAME module$test 1 [source_file: test] OBJECTLIT 1 [source_file: test] VAR 1 [source_file: test] NAME a$$module$test 1 [originalname: a] [source_file: test] NUMBER 1.0 1 [source_file: test] NAME b$$module$test 1 [originalname: b] [source_file: test] NUMBER 2.0 1 [source_file: test] EXPR_RESULT 1 [source_file: test] CALL 1 [free_call: 1] [source_file: test] FUNCTION  1 [parenthesized: true] [source_file: test] NAME  1 [source_file: test] PARAM_LIST 1 [source_file: test] BLOCK 1 [source_file: test] VAR 1 [source_file: test] NAME a 1 [source_file: test] EXPR_RESULT 1 [source_file: test] ASSIGN 1 [source_file: test] NAME b$$module$test 1 [originalname: b] [source_file: test] NUMBER 4.0 1 [source_file: test] IF 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [source_file: test] STRING module$exports 1 [source_file: test] BLOCK 1 [source_file: test] EXPR_RESULT 1 [source_file: test] ASSIGN 1 [source_file: test] NAME module$test 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [source_file: test] STRING module$exports 1 [source_file: test]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328) at com.google.javascript.jscomp.ProcessCommonJSModulesTest.testVarRenaming(ProcessCommonJSModulesTest.java:82) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.ProcessCommonJSModulesTest#testWithoutExports,FAIL,335222523,junit.framework.AssertionFailedError: Expected: goog.provide("module$test");var module$test={};goog.require("module$name");var name$$module$test=module$name;name$$module$test() Result: goog.provide("module$test");var module$test={};goog.require("module$name");var name$$module$test=module$name;name$$module$test();if(module$test.module$exports)module$test=module$test.module$exports Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING provide 1 [source_file: expected0] STRING module$test 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME module$test 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING require 1 [source_file: expected0] STRING module$name 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME name$$module$test 1 [source_file: expected0] NAME module$name 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME name$$module$test 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: test] [input_id: InputId: test] EXPR_RESULT 1 [source_file: test] CALL 1 [source_file: test] GETPROP 1 [source_file: test] NAME goog 1 [source_file: test] STRING provide 1 [source_file: test] STRING module$test 1 [source_file: test] VAR 1 [source_file: test] NAME module$test 1 [source_file: test] OBJECTLIT 1 [source_file: test] EXPR_RESULT 1 [source_file: test] CALL 1 [source_file: test] GETPROP 1 [source_file: test] NAME goog 1 [source_file: test] STRING require 1 [source_file: test] STRING module$name 1 [source_file: test] VAR 1 [source_file: test] NAME name$$module$test 1 [originalname: name] [source_file: test] NAME module$name 1 [source_file: test] EXPR_RESULT 1 [source_file: test] CALL 1 [free_call: 1] [source_file: test] NAME name$$module$test 1 [originalname: name] [source_file: test] IF 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [source_file: test] STRING module$exports 1 [source_file: test] BLOCK 1 [source_file: test] EXPR_RESULT 1 [source_file: test] ASSIGN 1 [source_file: test] NAME module$test 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [source_file: test] STRING module$exports 1 [source_file: test]   Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING provide 1 [source_file: expected0] STRING module$test 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME module$test 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING require 1 [source_file: expected0] STRING module$name 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME name$$module$test 1 [source_file: expected0] NAME module$name 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME name$$module$test 1 [source_file: expected0]   Subtree2: SCRIPT 1 [synthetic: 1] [source_file: test] [input_id: InputId: test] EXPR_RESULT 1 [source_file: test] CALL 1 [source_file: test] GETPROP 1 [source_file: test] NAME goog 1 [source_file: test] STRING provide 1 [source_file: test] STRING module$test 1 [source_file: test] VAR 1 [source_file: test] NAME module$test 1 [source_file: test] OBJECTLIT 1 [source_file: test] EXPR_RESULT 1 [source_file: test] CALL 1 [source_file: test] GETPROP 1 [source_file: test] NAME goog 1 [source_file: test] STRING require 1 [source_file: test] STRING module$name 1 [source_file: test] VAR 1 [source_file: test] NAME name$$module$test 1 [originalname: name] [source_file: test] NAME module$name 1 [source_file: test] EXPR_RESULT 1 [source_file: test] CALL 1 [free_call: 1] [source_file: test] NAME name$$module$test 1 [originalname: name] [source_file: test] IF 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [source_file: test] STRING module$exports 1 [source_file: test] BLOCK 1 [source_file: test] EXPR_RESULT 1 [source_file: test] ASSIGN 1 [source_file: test] NAME module$test 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [source_file: test] STRING module$exports 1 [source_file: test]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328) at com.google.javascript.jscomp.ProcessCommonJSModulesTest.testWithoutExports(ProcessCommonJSModulesTest.java:39) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.ProcessCommonJSModulesTest#testModuleName,FAIL,307457436,junit.framework.AssertionFailedError: Expected: goog.provide("module$foo$bar");var module$foo$bar={};goog.require("module$name");var name$$module$foo$bar=module$name Result: goog.provide("module$foo$bar");var module$foo$bar={};goog.require("module$name");var name$$module$foo$bar=module$name;if(module$foo$bar.module$exports)module$foo$bar=module$foo$bar.module$exports Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING provide 1 [source_file: expected0] STRING module$foo$bar 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME module$foo$bar 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING require 1 [source_file: expected0] STRING module$name 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME name$$module$foo$bar 1 [source_file: expected0] NAME module$name 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: foo/bar] [input_id: InputId: foo/bar] EXPR_RESULT 1 [source_file: foo/bar] CALL 1 [source_file: foo/bar] GETPROP 1 [source_file: foo/bar] NAME goog 1 [source_file: foo/bar] STRING provide 1 [source_file: foo/bar] STRING module$foo$bar 1 [source_file: foo/bar] VAR 1 [source_file: foo/bar] NAME module$foo$bar 1 [source_file: foo/bar] OBJECTLIT 1 [source_file: foo/bar] EXPR_RESULT 1 [source_file: foo/bar] CALL 1 [source_file: foo/bar] GETPROP 1 [source_file: foo/bar] NAME goog 1 [source_file: foo/bar] STRING require 1 [source_file: foo/bar] STRING module$name 1 [source_file: foo/bar] VAR 1 [source_file: foo/bar] NAME name$$module$foo$bar 1 [originalname: name] [source_file: foo/bar] NAME module$name 1 [source_file: foo/bar] IF 1 [source_file: foo/bar] GETPROP 1 [source_file: foo/bar] NAME module$foo$bar 1 [source_file: foo/bar] STRING module$exports 1 [source_file: foo/bar] BLOCK 1 [source_file: foo/bar] EXPR_RESULT 1 [source_file: foo/bar] ASSIGN 1 [source_file: foo/bar] NAME module$foo$bar 1 [source_file: foo/bar] GETPROP 1 [source_file: foo/bar] NAME module$foo$bar 1 [source_file: foo/bar] STRING module$exports 1 [source_file: foo/bar]   Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING provide 1 [source_file: expected0] STRING module$foo$bar 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME module$foo$bar 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING require 1 [source_file: expected0] STRING module$name 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME name$$module$foo$bar 1 [source_file: expected0] NAME module$name 1 [source_file: expected0]   Subtree2: SCRIPT 1 [synthetic: 1] [source_file: foo/bar] [input_id: InputId: foo/bar] EXPR_RESULT 1 [source_file: foo/bar] CALL 1 [source_file: foo/bar] GETPROP 1 [source_file: foo/bar] NAME goog 1 [source_file: foo/bar] STRING provide 1 [source_file: foo/bar] STRING module$foo$bar 1 [source_file: foo/bar] VAR 1 [source_file: foo/bar] NAME module$foo$bar 1 [source_file: foo/bar] OBJECTLIT 1 [source_file: foo/bar] EXPR_RESULT 1 [source_file: foo/bar] CALL 1 [source_file: foo/bar] GETPROP 1 [source_file: foo/bar] NAME goog 1 [source_file: foo/bar] STRING require 1 [source_file: foo/bar] STRING module$name 1 [source_file: foo/bar] VAR 1 [source_file: foo/bar] NAME name$$module$foo$bar 1 [originalname: name] [source_file: foo/bar] NAME module$name 1 [source_file: foo/bar] IF 1 [source_file: foo/bar] GETPROP 1 [source_file: foo/bar] NAME module$foo$bar 1 [source_file: foo/bar] STRING module$exports 1 [source_file: foo/bar] BLOCK 1 [source_file: foo/bar] EXPR_RESULT 1 [source_file: foo/bar] ASSIGN 1 [source_file: foo/bar] NAME module$foo$bar 1 [source_file: foo/bar] GETPROP 1 [source_file: foo/bar] NAME module$foo$bar 1 [source_file: foo/bar] STRING module$exports 1 [source_file: foo/bar]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328) at com.google.javascript.jscomp.ProcessCommonJSModulesTest.testModuleName(ProcessCommonJSModulesTest.java:114) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.ProcessCommonJSModulesTest#testGuessModuleName,PASS,1990933,
com.google.javascript.jscomp.ProcessCommonJSModulesTest#testExports,FAIL,483085413,junit.framework.AssertionFailedError: Expected: goog.provide("module$test");var module$test={};goog.require("module$name");var name$$module$test=module$name;module$test.foo=1 Result: goog.provide("module$test");var module$test={};goog.require("module$name");var name$$module$test=module$name;module$test.foo=1;if(module$test.module$exports)module$test=module$test.module$exports Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING provide 1 [source_file: expected0] STRING module$test 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME module$test 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING require 1 [source_file: expected0] STRING module$name 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME name$$module$test 1 [source_file: expected0] NAME module$name 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME module$test 1 [source_file: expected0] STRING foo 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: test] [input_id: InputId: test] EXPR_RESULT 1 [source_file: test] CALL 1 [source_file: test] GETPROP 1 [source_file: test] NAME goog 1 [source_file: test] STRING provide 1 [source_file: test] STRING module$test 1 [source_file: test] VAR 1 [source_file: test] NAME module$test 1 [source_file: test] OBJECTLIT 1 [source_file: test] EXPR_RESULT 1 [source_file: test] CALL 1 [source_file: test] GETPROP 1 [source_file: test] NAME goog 1 [source_file: test] STRING require 1 [source_file: test] STRING module$name 1 [source_file: test] VAR 1 [source_file: test] NAME name$$module$test 1 [originalname: name] [source_file: test] NAME module$name 1 [source_file: test] EXPR_RESULT 1 [source_file: test] ASSIGN 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [originalname: exports] [source_file: test] STRING foo 1 [source_file: test] NUMBER 1.0 1 [source_file: test] IF 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [source_file: test] STRING module$exports 1 [source_file: test] BLOCK 1 [source_file: test] EXPR_RESULT 1 [source_file: test] ASSIGN 1 [source_file: test] NAME module$test 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [source_file: test] STRING module$exports 1 [source_file: test]   Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING provide 1 [source_file: expected0] STRING module$test 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME module$test 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING require 1 [source_file: expected0] STRING module$name 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME name$$module$test 1 [source_file: expected0] NAME module$name 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME module$test 1 [source_file: expected0] STRING foo 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Subtree2: SCRIPT 1 [synthetic: 1] [source_file: test] [input_id: InputId: test] EXPR_RESULT 1 [source_file: test] CALL 1 [source_file: test] GETPROP 1 [source_file: test] NAME goog 1 [source_file: test] STRING provide 1 [source_file: test] STRING module$test 1 [source_file: test] VAR 1 [source_file: test] NAME module$test 1 [source_file: test] OBJECTLIT 1 [source_file: test] EXPR_RESULT 1 [source_file: test] CALL 1 [source_file: test] GETPROP 1 [source_file: test] NAME goog 1 [source_file: test] STRING require 1 [source_file: test] STRING module$name 1 [source_file: test] VAR 1 [source_file: test] NAME name$$module$test 1 [originalname: name] [source_file: test] NAME module$name 1 [source_file: test] EXPR_RESULT 1 [source_file: test] ASSIGN 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [originalname: exports] [source_file: test] STRING foo 1 [source_file: test] NUMBER 1.0 1 [source_file: test] IF 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [source_file: test] STRING module$exports 1 [source_file: test] BLOCK 1 [source_file: test] EXPR_RESULT 1 [source_file: test] ASSIGN 1 [source_file: test] NAME module$test 1 [source_file: test] GETPROP 1 [source_file: test] NAME module$test 1 [source_file: test] STRING module$exports 1 [source_file: test]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328) at com.google.javascript.jscomp.ProcessCommonJSModulesTest.testExports(ProcessCommonJSModulesTest.java:60) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.ProcessCommonJSModulesTest#testDash,FAIL,297645312,junit.framework.AssertionFailedError: Expected: goog.provide("module$test_test");var module$test_test={};goog.require("module$name");var name$$module$test_test=module$name;module$test_test.foo=1 Result: goog.provide("module$test_test");var module$test_test={};goog.require("module$name");var name$$module$test_test=module$name;module$test_test.foo=1;if(module$test_test.module$exports)module$test_test=module$test_test.module$exports Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING provide 1 [source_file: expected0] STRING module$test_test 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME module$test_test 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING require 1 [source_file: expected0] STRING module$name 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME name$$module$test_test 1 [source_file: expected0] NAME module$name 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME module$test_test 1 [source_file: expected0] STRING foo 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: test-test] [input_id: InputId: test-test] EXPR_RESULT 1 [source_file: test-test] CALL 1 [source_file: test-test] GETPROP 1 [source_file: test-test] NAME goog 1 [source_file: test-test] STRING provide 1 [source_file: test-test] STRING module$test_test 1 [source_file: test-test] VAR 1 [source_file: test-test] NAME module$test_test 1 [source_file: test-test] OBJECTLIT 1 [source_file: test-test] EXPR_RESULT 1 [source_file: test-test] CALL 1 [source_file: test-test] GETPROP 1 [source_file: test-test] NAME goog 1 [source_file: test-test] STRING require 1 [source_file: test-test] STRING module$name 1 [source_file: test-test] VAR 1 [source_file: test-test] NAME name$$module$test_test 1 [originalname: name] [source_file: test-test] NAME module$name 1 [source_file: test-test] EXPR_RESULT 1 [source_file: test-test] ASSIGN 1 [source_file: test-test] GETPROP 1 [source_file: test-test] NAME module$test_test 1 [originalname: exports] [source_file: test-test] STRING foo 1 [source_file: test-test] NUMBER 1.0 1 [source_file: test-test] IF 1 [source_file: test-test] GETPROP 1 [source_file: test-test] NAME module$test_test 1 [source_file: test-test] STRING module$exports 1 [source_file: test-test] BLOCK 1 [source_file: test-test] EXPR_RESULT 1 [source_file: test-test] ASSIGN 1 [source_file: test-test] NAME module$test_test 1 [source_file: test-test] GETPROP 1 [source_file: test-test] NAME module$test_test 1 [source_file: test-test] STRING module$exports 1 [source_file: test-test]   Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING provide 1 [source_file: expected0] STRING module$test_test 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME module$test_test 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING require 1 [source_file: expected0] STRING module$name 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME name$$module$test_test 1 [source_file: expected0] NAME module$name 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME module$test_test 1 [source_file: expected0] STRING foo 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Subtree2: SCRIPT 1 [synthetic: 1] [source_file: test-test] [input_id: InputId: test-test] EXPR_RESULT 1 [source_file: test-test] CALL 1 [source_file: test-test] GETPROP 1 [source_file: test-test] NAME goog 1 [source_file: test-test] STRING provide 1 [source_file: test-test] STRING module$test_test 1 [source_file: test-test] VAR 1 [source_file: test-test] NAME module$test_test 1 [source_file: test-test] OBJECTLIT 1 [source_file: test-test] EXPR_RESULT 1 [source_file: test-test] CALL 1 [source_file: test-test] GETPROP 1 [source_file: test-test] NAME goog 1 [source_file: test-test] STRING require 1 [source_file: test-test] STRING module$name 1 [source_file: test-test] VAR 1 [source_file: test-test] NAME name$$module$test_test 1 [originalname: name] [source_file: test-test] NAME module$name 1 [source_file: test-test] EXPR_RESULT 1 [source_file: test-test] ASSIGN 1 [source_file: test-test] GETPROP 1 [source_file: test-test] NAME module$test_test 1 [originalname: exports] [source_file: test-test] STRING foo 1 [source_file: test-test] NUMBER 1.0 1 [source_file: test-test] IF 1 [source_file: test-test] GETPROP 1 [source_file: test-test] NAME module$test_test 1 [source_file: test-test] STRING module$exports 1 [source_file: test-test] BLOCK 1 [source_file: test-test] EXPR_RESULT 1 [source_file: test-test] ASSIGN 1 [source_file: test-test] NAME module$test_test 1 [source_file: test-test] GETPROP 1 [source_file: test-test] NAME module$test_test 1 [source_file: test-test] STRING module$exports 1 [source_file: test-test]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328) at com.google.javascript.jscomp.ProcessCommonJSModulesTest.testDash(ProcessCommonJSModulesTest.java:93) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
