bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test);	  return    toModuleName(normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  return    toModuleName(module,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename));	  return    toModuleName(module,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
15	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  return    toModuleName(module,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
16	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName);	  return    toModuleName(module,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
17	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);	  return    toModuleName(module,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
18	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(module,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
19	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test=  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  ==  }  ;var  a$$module$test=	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  var  module$test=  {  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  var  module$test=  {  }	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  var  modules$test=  {  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  modules$test=  {  }  ;var  a$$module$test=  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  modules$test=  {  }  ;var  a$$module$test=	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".java "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".java "))  {  var  module$test=  {  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( ".java "))  {  var  module$test=  {  }	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
25	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
26	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
27	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename));	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
28	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(modulename));	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
29	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
33	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  module);	  return    toModuleName(normalizeSourceName(filename),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
34	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  a$$module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
36	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
38	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
39	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename));	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=1	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  var  modules$test=  {  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  modules$test=  {  }  ;var  a$$module$test=1  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  modules$test=  {  }  ;var  a$$module$test=1	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test=1  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  ==  }  ;var  a$$module$test=1	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=2  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=2  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=2	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
48	[BUG]  [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(modulename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
57	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=1!=  guessCJSModuleName(filename)  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=1!=  guessCJSModuleName(filename)  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=1!=  guessCJSModuleName(filename)	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=1  ==  guessCJSModuleName(filename)  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=1  ==  guessCJSModuleName(filename)  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;var  a$$module$test=1  ==  guessCJSModuleName(filename)	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
61	[BUG]  [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
62	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
63	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
66	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  return    toModuleName(normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
67	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  return    toModuleName(normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
68	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  return    toModuleName(normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
69	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  return    toModuleName(normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
70	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies);	  return    toModuleName(normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
71	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
72	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
73	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
74	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
75	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
76	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
78	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
79	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
80	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
81	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
82	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
83	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
84	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
85	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
86	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
87	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
89	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
90	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
91	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
92	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
93	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  a$$module$test);	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
94	[BUG]  [BUGGY]  var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  ;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
95	[BUG]  [BUGGY]  var  module$test=  {  }  if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
96	[BUG]  [BUGGY]  var  module$test=  {  }  if(filename.startsWith( "module$test "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  if(filename.startsWith( "module$test "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  if(filename.startsWith( "module$test "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
97	[BUG]  [BUGGY]  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
98	[BUG]  [BUGGY]  var  module$test=  {  }  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
99	[BUG]  [BUGGY]  var  module$test=  {  }  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
100	[BUG]  [BUGGY]  var  module$test=  {  }  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
101	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$$module$test=1  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  ;var  a$$$module$test=1  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$$module$test=1	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
102	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  return    toModuleName(normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
103	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  return    toModuleName(normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
104	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  return    toModuleName(normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
105	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  return    toModuleName(normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
106	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
107	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
108	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
109	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
110	[BUG]  [BUGGY]  if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
111	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
112	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
113	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
114	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
115	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
116	[BUG]  [BUGGY]  var  module$test=  {  }  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
117	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  filename);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  filename);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  filename);	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
118	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
119	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=0  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=0  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=0	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
120	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
121	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  module);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeModuleName(filename),  module);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  module);	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
122	[BUG]  [BUGGY]  return  normalizeModuleName(filename,  module);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  normalizeModuleName(filename,  module);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  normalizeModuleName(filename,  module);	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
123	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename,  module));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeModuleName(filename,  module));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename,  module));	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
124	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  module);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeFilename(filename),  module);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  module);	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
125	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeFilename(filename),  a$$module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  a$$module$test);	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
126	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
127	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename,  module));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeFilename(filename,  module));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename,  module));	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
128	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
129	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
130	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
131	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  ||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
132	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".java ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".java ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( ".java ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
133	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
134	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
135	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
136	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
137	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
138	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
139	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName());	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
140	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName));	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
141	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  sourceFilename));	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
142	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  compiler);	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
143	[BUG]  [BUGGY]  ;var  module$test=  {  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  ;var  module$test=  {  }  ;var  a$$module$test=  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	;var  module$test=  {  }  ;var  a$$module$test=	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
144	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null)  {  return  guessCJSModuleName(filename);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  guessCJSModuleName(filename);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
145	[BUG]  [BUGGY]  if(!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
146	[BUG]  [BUGGY]  if(filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
147	[BUG]  [BUGGY]  if(!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
148	[BUG]  [BUGGY]  if(filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
149	[BUG]  [BUGGY]  if(!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
150	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
151	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(module,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
152	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module$test);	  return    toModuleName(module,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
153	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(module));	  return    toModuleName(module,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
154	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  compiler);	  return    toModuleName(module,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
155	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename)+  1);	  return    toModuleName(module,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
156	[BUG]  [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
157	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
158	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.sourceStart);	  return    toModuleName(normalizeSourceName(filename),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
159	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.module);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.module);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.module);	  return    toModuleName(normalizeSourceName(filename),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
160	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
161	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
162	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
163	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName);	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
164	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
165	[BUG]  [BUGGY]  return  toModuleName(sourceName,  normalizeSourceName(filename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(sourceName,  normalizeSourceName(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(sourceName,  normalizeSourceName(filename));	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
166	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  compiler);	  return    toModuleName(normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
167	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
168	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
169	[BUG]  [BUGGY]  if(modulename  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(modulename  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
170	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
171	[BUG]  [BUGGY]  if(modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
172	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);	  return    toModuleName(modulename,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
173	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
174	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  return    toModuleName(normalizeSourceName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
175	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
176	[BUG]  [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
177	[BUG]  [BUGGY]  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
178	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
179	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
180	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
181	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_PREFIX);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
182	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
183	[BUG]  [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
184	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeModuleName(filename));	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
185	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
186	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
187	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeModuleName(filename));	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
188	[BUG]  [BUGGY]  return  toModuleName(moduleName,  normalizeModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(moduleName,  normalizeModuleName(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(moduleName,  normalizeModuleName(filename));	  return    toModuleName(normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
189	[BUG]  [BUGGY]  if(!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
190	[BUG]  [BUGGY]  if(filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  3);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  3);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  3);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
191	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
192	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module);	  return    toModuleName(normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
193	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }	  return    toModuleName(normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
194	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
195	[BUG]  [BUGGY]  if(filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  if(filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
196	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
197	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeFilename(filename));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(module,  normalizeFilename(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeFilename(filename));	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
198	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeFilename(filename));	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
199	[BUG]  [BUGGY]  return  toModuleName(moduleName,  normalizeFilename(filename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(moduleName,  normalizeFilename(filename));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(moduleName,  normalizeFilename(filename));	  return    toModuleName(normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
200	[BUG]  [BUGGY]  var  module$test=  {  }  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
201	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
202	[BUG]  [BUGGY]  var  module$test=  {  }  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  {  }  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
203	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix);	  return    toModuleName(module,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
204	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  module);	  return    toModuleName(normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
205	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  module$test);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  module$test);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
206	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework);	  return    toModuleName(normalizeSourceName(filename),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
207	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.framework);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.framework);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  junit.framework);	  return    toModuleName(normalizeSourceName(filename),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
208	[BUG]  [BUGGY]  var  module$test=  >>  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    String  guessCJSModuleName(String  filename)  {    [BUGGY]  var  module$test=  >>  }  ;var  a$$module$test=  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  >>  }  ;var  a$$module$test=	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
