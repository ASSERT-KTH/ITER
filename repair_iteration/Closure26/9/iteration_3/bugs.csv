bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename)+  a$$module$test);	  return    toModuleName(module,    normalizeSourceName(filename)+    1);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
2	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)/  1);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)/  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename)/  1);	  return    toModuleName(module,    normalizeSourceName(filename)+    1);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
3	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  2);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename)+  2);	  return    toModuleName(module,    normalizeSourceName(filename)+    1);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
4	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename)+  guessCJSModuleName(filename));	  return    toModuleName(module,    normalizeSourceName(filename)+    1);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
5	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  3);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename)+  3);	  return    toModuleName(module,    normalizeSourceName(filename)+    1);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
6	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module)+  1);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module)+  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(module)+  1);	  return    toModuleName(module,    normalizeSourceName(filename)+    1);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
7	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
8	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
9	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
10	[BUG]  [BUGGY]  ||  filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
11	[BUG]  [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }	  ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
12	[BUG]  [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }	  ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
13	[BUG]  [BUGGY]  |  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  |  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	|  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
14	[BUG]  [BUGGY]  ||  filename.length()  ==  2)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.length()  ==  2)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()  ==  2)  {  return  toModuleName(normalizeSourceName(filename));  }	  ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
15	[BUG]  [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
16	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modifySourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modifySourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(modifySourceName(filename),  module$test);  }	  if(filename    ==    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modifySourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modifySourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(modifySourceName(filename,  module));  }	  if(filename    ==    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  if(filename!=  null)  {  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  if(module$test!=    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  if(module$test!=    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  if(filename!=  null)  {  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(module$test!=    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  if(module$test!=    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  if(filename!=  null)  {  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }	  if(module$test!=    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  if(filename!=  null)  {  return  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  guessCJSModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  guessCJSModuleName(filename);  }	  if(filename    ==    null)    {    return    guessCJSModuleName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
27	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  guessCJSModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  guessCJSModuleName(filename);  }	  if(filename    ==    null)    {    return    guessCJSModuleName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
28	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  guessCJSModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  guessCJSModuleName(filename);  }	  if(filename    ==    null)    {    return    guessCJSModuleName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
29	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()!=  0)  {  return  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()!=  0)  {  return  guessCJSModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()!=  0)  {  return  guessCJSModuleName(filename);  }	  if(filename    ==    null)    {    return    guessCJSModuleName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
30	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null)  {  return  guessCJSModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  return  guessCJSModuleName(filename);  }	  if(filename    ==    null)    {    return    guessCJSModuleName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
31	[BUG]  [BUGGY]  ||(module$test  ==  null  &&  filename.length()  >  0))  {  return  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(module$test  ==  null  &&  filename.length()  >  0))  {  return  guessCJSModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(module$test  ==  null  &&  filename.length()  >  0))  {  return  guessCJSModuleName(filename);  }	  if(filename    ==    null)    {    return    guessCJSModuleName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
32	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }	  return    toModuleName(normalizeModuleName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
33	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }	  return    toModuleName(normalizeModuleName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
34	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }	  return    toModuleName(normalizeModuleName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
35	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }	  return    toModuleName(normalizeModuleName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
36	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeModuleName(filename),  a$$module$test);  }	  return    toModuleName(normalizeModuleName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
37	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  module$test,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  module$test,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  module$test,  a$$$module$test);	  return    toModuleName(normalizeModuleName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
38	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  module$test);  [CE]  illegal  start  of  expression  [FE]                                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  module$test);	  return    toModuleName(normalizeModuleName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
39	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }	  if(modulename!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
40	[BUG]  [BUGGY]  var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=1  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=1	  var    module$test=    {    }    ;var    a$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
41	[BUG]  [BUGGY]  var  a$$module$test=1!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=1!=  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=1!=  illegal  start  of  expression	  var    module$test=    {    }    ;var    a$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
42	[BUG]  [BUGGY]  var  a$$module$test=1  [Delete]  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=1  [Delete]  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=1  [Delete]  illegal  start  of  expression	  var    module$test=    {    }    ;var    a$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
43	[BUG]  [BUGGY]  var  a$$module$test=1  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=1  ==  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=1  ==  illegal  start  of  expression	  var    module$test=    {    }    ;var    a$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
44	[BUG]  [BUGGY]  var  a$$module$test=1  >>  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=1  >>  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=1  >>  illegal  start  of  expression	  var    module$test=    {    }    ;var    a$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
45	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
46	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
47	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  module$test,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  module$test,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  module$test,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    compiler,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
48	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
49	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
50	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
51	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    module);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
52	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    module);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
53	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    module);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
54	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    module);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
55	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  module,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  module,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    compiler,    module);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
56	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
57	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  }	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
58	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  }	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
59	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  }	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
60	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
61	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
62	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(modulename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
63	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
64	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
65	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
66	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
67	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName(filename));	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
68	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
69	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
70	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
71	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
72	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  scriptNodeCount);	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
73	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName(filename));	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
74	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
75	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename),  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeModuleName(filename),  guessCJSModuleName(filename));	  return    toModuleName(module,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
76	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(module,  normalizeModuleName(filename));  }	  return    toModuleName(module,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
77	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(module,  normalizeModuleName(filename));  }	  return    toModuleName(module,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
78	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(module,  normalizeModuleName(filename));  }	  return    toModuleName(module,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
79	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(module,  normalizeModuleName(filename));  }	  return    toModuleName(module,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
80	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeModuleName(filename),  a$$module$test);	  return    toModuleName(module,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
81	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename),  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename),  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeModuleName(filename),  guessCJSModuleName);	  return    toModuleName(module,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
82	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  module);  }	  return    toModuleName(normalizeModuleName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
83	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename),  module);  }	  return    toModuleName(normalizeModuleName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
84	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  module);  }	  return    toModuleName(normalizeModuleName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
85	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  module);  }	  return    toModuleName(normalizeModuleName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
86	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  module);  }	  return    toModuleName(normalizeModuleName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
87	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  module,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  module,  a$$module$test);	  return    toModuleName(normalizeModuleName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
88	[BUG]  [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
89	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(guessCJSModuleName(filename));	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
90	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(modifySourceName(filename));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(modifySourceName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(modifySourceName(filename));	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
91	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  1))  {  return  toModuleName(normalizeSourceName(filename));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  1))  {  return  toModuleName(normalizeSourceName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  1))  {  return  toModuleName(normalizeSourceName(filename));	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
92	[BUG]  [BUGGY]  |(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  |(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	|(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
93	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }	  var    module$test=    {    }    if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
94	[BUG]  [BUGGY]  if(filename  ==  null)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
95	[BUG]  [BUGGY]  if(filename  ==  null)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }	  var    module$test=    {    }    if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
96	[BUG]  [BUGGY]  if(filename!=  null)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
97	[BUG]  [BUGGY]  if(filename!=  null)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }	  var    module$test=    {    }    if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
98	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
99	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
100	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
101	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
102	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
103	[BUG]  [BUGGY]  if(filename  >=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  >=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  >=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
104	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
105	[BUG]  [BUGGY]  if(module  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
106	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
107	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
108	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }	  if(filename!=    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
109	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
110	[BUG]  [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
111	[BUG]  [BUGGY]  if(compiler!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(compiler!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(compiler!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
112	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
113	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
114	[BUG]  [BUGGY]  var  a$$module$test=0  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=0  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=0	  var    module$test=    {    }    ;var    a$$module$test=0    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
115	[BUG]  [BUGGY]  var  a$$module$test=0!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=0!=  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=0!=  illegal  start  of  expression	  var    module$test=    {    }    ;var    a$$module$test=0    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
116	[BUG]  [BUGGY]  var  a$$module$test=0  [Delete]  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=0  [Delete]  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=0  [Delete]  illegal  start  of  expression	  var    module$test=    {    }    ;var    a$$module$test=0    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
117	[BUG]  [BUGGY]  var  a$$module$test=1  [Delete]  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=1  [Delete]  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=1  [Delete]	  var    module$test=    {    }    ;var    a$$module$test=0    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
118	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename  =  filename.substring(0,  filename.length());	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
119	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename  =  filename.substring(0,  filename.length()  -  2);	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
120	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
121	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
122	[BUG]  [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	Filename  filename  =  filename.substring(0,  filename.length()  -  2);	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
123	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
124	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }	  if(moduleName!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
125	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }	  if(moduleName!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
126	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  compiler);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(modulename),  compiler);	  return    toModuleName(modulename,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
127	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler,  reportDependencies);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  compiler,  reportDependencies);	  return    toModuleName(modulename,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
128	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
129	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
130	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
131	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
132	[BUG]  [BUGGY]  var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=	  var    modules$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
133	[BUG]  [BUGGY]  var  a$$module$test=!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=!=  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=!=  illegal  start  of  expression	  var    modules$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
134	[BUG]  [BUGGY]  var  a$$module$test=  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=  ==  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=  ==  illegal  start  of  expression	  var    modules$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
135	[BUG]  [BUGGY]  var  a$$module$test=  [Delete]  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=  [Delete]  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=  [Delete]  illegal  start  of  expression	  var    modules$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
136	[BUG]  [BUGGY]  var  a$$module$test=  >>  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=  >>  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=  >>  illegal  start  of  expression	  var    modules$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
137	[BUG]  [BUGGY]  var  a$$module$test=  >=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=  >=  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=  >=  illegal  start  of  expression	  var    modules$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
138	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }	  return    toModuleName(moduleName,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
139	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }	  return    toModuleName(moduleName,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
140	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }	  return    toModuleName(moduleName,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
141	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }	  return    toModuleName(moduleName,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
142	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeFilename(moduleName));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeFilename(moduleName));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeFilename(moduleName));	  return    toModuleName(moduleName,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
143	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeFilename(filename),  guessCJSModuleName);	  return    toModuleName(moduleName,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
144	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeFilename(filename),  guessCJSModuleName(filename));	  return    toModuleName(moduleName,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
145	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  reportDependencies);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  reportDependencies);	  return    toModuleName(normalizeSourceName(filename),    compiler,    reportDependencies);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
146	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    reportDependencies);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
147	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    reportDependencies);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
148	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    reportDependencies);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
149	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  errorReportDependencies);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  errorReportDependencies);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  errorReportDependencies);	  return    toModuleName(normalizeSourceName(filename),    compiler,    reportDependencies);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
150	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    compiler,    reportDependencies);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
151	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
152	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module$test,  a$$$module$test);	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
153	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
154	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
155	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
156	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test,  guessCJSModuleName);	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
157	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  }	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
158	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
159	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
160	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(moduleName);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(moduleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(moduleName);  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
161	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
162	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
163	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
164	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
165	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
166	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
167	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test,  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
168	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
169	[BUG]  [BUGGY]  var  a$$module$test=2  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=2  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=2	  var    module$test=    {    }    ;var    a$$module$test=2    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
170	[BUG]  [BUGGY]  var  a$$module$test=2  [Delete]  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=2  [Delete]  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=2  [Delete]  illegal  start  of  expression	  var    module$test=    {    }    ;var    a$$module$test=2    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
171	[BUG]  [BUGGY]  var  a$$module$test=2!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=2!=  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=2!=  illegal  start  of  expression	  var    module$test=    {    }    ;var    a$$module$test=2    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
172	[BUG]  [BUGGY]  var  a$$module$test=2  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=2  ==  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=2  ==  illegal  start  of  expression	  var    module$test=    {    }    ;var    a$$module$test=2    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
173	[BUG]  [BUGGY]  var  a$$module$test=2  >>  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=2  >>  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=2  >>  illegal  start  of  expression	  var    module$test=    {    }    ;var    a$$module$test=2    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
174	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ". "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ". "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.endsWith( ". "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
175	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
176	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
177	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
178	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
179	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modifyFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(modifyFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modifyFilename(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
180	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(module,  normalizeFilename(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
181	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(module,  normalizeFilename(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
182	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  module$test);  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
183	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
184	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
185	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
186	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(modulename),  a$$module$test);	  return    toModuleName(modulename,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
187	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  a$$$module$test);	  return    toModuleName(modulename,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
188	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
189	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test,  guessCJSModuleName);	  return    toModuleName(modulename,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
190	[BUG]  [BUGGY]  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }	  var    module$test=    {    }    if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
191	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
192	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
193	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
194	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  junit.framework);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    module);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
195	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework,  module);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework,  module);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    module);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
196	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    module);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
197	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  goog.provide( "module$test   ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  goog.provide( "module$test   ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  goog.provide( "module$test   ");  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
198	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module.module$test:  goog.provide( "module$test   ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module.module$test:  goog.provide( "module$test   ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module.module$test:  goog.provide( "module$test   ");  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
199	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
200	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  goog.provide( "module$test   ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  goog.provide( "module$test   ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  goog.provide( "module$test   ");  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
201	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
202	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
203	[BUG]  [BUGGY]  if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
204	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
205	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
206	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1!=  guessCJSModuleName(filename)  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1!=  guessCJSModuleName(filename)  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=1!=  guessCJSModuleName(filename)	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=1!=    guessCJSModuleName(filename)    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
207	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  [Delete]  guessCJSModuleName(filename)  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  [Delete]  guessCJSModuleName(filename)  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=1  [Delete]  guessCJSModuleName(filename)	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=1!=    guessCJSModuleName(filename)    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
208	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  >>  guessCJSModuleName(filename)  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  >>  guessCJSModuleName(filename)  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=1  >>  guessCJSModuleName(filename)	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=1!=    guessCJSModuleName(filename)    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
209	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  >=  guessCJSModuleName(filename)  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  >=  guessCJSModuleName(filename)  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=1  >=  guessCJSModuleName(filename)	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=1!=    guessCJSModuleName(filename)    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
210	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  ==  guessCJSModuleName(filename)  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1  ==  guessCJSModuleName(filename)  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=1  ==  guessCJSModuleName(filename)	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=1!=    guessCJSModuleName(filename)    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
211	[BUG]  [BUGGY]  if(module  <  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  <  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  <  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module    ==    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
212	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
213	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
214	[BUG]  [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
215	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
216	[BUG]  [BUGGY]  if(filename!=  null)  {  if(moduleName  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(moduleName  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(moduleName  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
217	[BUG]  [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
218	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
219	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
220	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
221	[BUG]  [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  modules.keySet())  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  for(JSModule  module  :  modules.keySet())  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  for(JSModule  module  :  modules.keySet())  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
222	[BUG]  [BUGGY]  ||  module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
223	[BUG]  [BUGGY]  if(modulePrefix!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulePrefix!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulePrefix!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modulePrefix,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
224	[BUG]  [BUGGY]  if(modulePrefix  ==  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulePrefix  ==  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulePrefix  ==  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modulePrefix,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
225	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modulePrefix,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
226	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modulePrefix,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
227	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
228	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  compiler.reportCodeChange();  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
229	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
230	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
231	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  normalizeFilename(filename);  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  normalizeFilename(filename);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  normalizeFilename(filename);  }  else  {  compiler.reportCodeChange();  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
232	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }	  if(modulename    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
233	[BUG]  [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
234	[BUG]  [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()!=  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
235	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  >  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
236	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
237	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(moduleName);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(moduleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(moduleName);  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
238	[BUG]  [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()!=  0)  {  return  toModuleName(guessCJSModuleName(filename));  }	  if(filename.length()!=    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
239	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
240	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
241	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
242	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
243	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
244	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
245	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
246	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module$test,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module$test,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  module$test,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
247	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
248	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
249	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
250	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  junit.framework,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
251	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test:  goog.provide( "module$test ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test:  goog.provide( "module$test ");  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test:  goog.provide( "module$test ");	  return    toModuleName(normalizeSourceName(filename),    compiler,    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
252	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  error:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  error:  goog.provide( "module$test ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  error:  goog.provide( "module$test ");  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
253	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
254	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
255	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
256	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
257	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modifyFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modifyFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(modifyFilename(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
258	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
259	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulePrefix,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(modulePrefix,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(modulePrefix,  normalizeFilename(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
260	[BUG]  [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()!=  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
261	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
262	[BUG]  [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
263	[BUG]  [BUGGY]  if(module.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
264	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  >  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
265	[BUG]  [BUGGY]  if(filename.length()  >=  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  >=  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  >=  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
266	[BUG]  [BUGGY]  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
267	[BUG]  [BUGGY]  if(filename.endsWith( "module$test "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( "module$test "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( "module$test "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
268	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".java "))  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
269	[BUG]  [BUGGY]  if(filename.endsWith( ".js "))  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".js "))  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js "))  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
270	[BUG]  [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
271	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    filename);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
272	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    filename);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
273	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename,  scriptNodeCount);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    filename);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
274	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filenamePrefix);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filenamePrefix);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    filename);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
275	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ". ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ". ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( ". ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.endsWith(   ".js   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
276	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( "$$ ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( "$$ ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( "$$ ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.endsWith(   ".js   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
277	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( "/.js ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( "/.js ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( "/.js ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.endsWith(   ".js   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
278	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  }	  return    toModuleName(module,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
279	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  compiler,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  compiler,  reportDependencies);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  compiler,  reportDependencies);	  return    toModuleName(module,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
280	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  }	  return    toModuleName(module,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
281	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  }	  return    toModuleName(module,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
282	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
283	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
284	[BUG]  [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
285	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
286	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modifySourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modifySourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(modifySourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
287	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename,  filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename,  filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename,  filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
288	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
289	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
290	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
291	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
292	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
293	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
294	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
295	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeModuleName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
296	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeModuleName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
297	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
298	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
299	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(moduleName);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(moduleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(moduleName);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
300	[BUG]  [BUGGY]  if(module$test!=  null)  {  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
301	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
302	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
303	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    sourceName,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
304	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    sourceName,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
305	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  EXPORTS);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  EXPORTS);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  sourceName,  EXPORTS);	  return    toModuleName(normalizeSourceName(filename),    sourceName,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
306	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    sourceName,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
307	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename),    sourceName,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
308	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.sourceStart,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.sourceStart);    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
309	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  moduleStart);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  moduleStart);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  moduleStart);	  return    toModuleName(normalizeSourceName(filename),    junit.sourceStart);    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
310	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart);  }	  return    toModuleName(normalizeSourceName(filename),    junit.sourceStart);    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
311	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.sourceStart);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.sourceStart);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  junit.sourceStart);	  return    toModuleName(normalizeSourceName(filename),    junit.sourceStart);    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
312	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart,  module);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.sourceStart,  module);	  return    toModuleName(normalizeSourceName(filename),    junit.sourceStart);    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
313	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.sourceStart,  scriptNodeCount);	  return    toModuleName(normalizeSourceName(filename),    junit.sourceStart);    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
314	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.sourceStart);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.sourceStart);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  junit.sourceStart);	  return    toModuleName(normalizeSourceName(filename),    junit.sourceStart);    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
315	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }	  var    module$test=    {    }    if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
316	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
317	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }	  var    module$test=    {    }    if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
318	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
319	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  var  module$test=  normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
320	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  module);  }	  return    toModuleName(module,    normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
321	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  filename);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  filename);  }	  return    toModuleName(module,    normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
322	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module);  }	  return    toModuleName(module,    normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
323	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module);  }	  return    toModuleName(module,    normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
324	[BUG]  [BUGGY]  if(filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length());  }	  if(filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
325	[BUG]  [BUGGY]  ||  filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length());  }	  if(filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
326	[BUG]  [BUGGY]  ||  filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }	  if(filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
327	[BUG]  [BUGGY]  if(modulename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
328	[BUG]  [BUGGY]  if(modulename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
329	[BUG]  [BUGGY]  if(modulename  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
330	[BUG]  [BUGGY]  if(modulename!=  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
331	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
332	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename,  module));  }	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
333	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename,  module));  }	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
334	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename,  module));  }	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
335	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeFilename(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeFilename(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeFilename(filename,  module));  }	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
336	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename,  module),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename,  module),  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename,  module),  guessCJSModuleName(filename));	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
337	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename,  module));  }	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
338	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeFilename(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeFilename(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeFilename(filename,  module));  }	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
339	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
340	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
341	[BUG]  [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
342	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
343	[BUG]  [BUGGY]  if(filename!=  null)  {  if(moduleName  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(moduleName  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(moduleName  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
344	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
345	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(moduleName    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
346	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(moduleName));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(moduleName));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(moduleName));  }	  if(moduleName    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
347	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(moduleName);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(moduleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(moduleName);  }	  if(moduleName    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
348	[BUG]  [BUGGY]  if(modulePrefix!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulePrefix!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulePrefix!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix);  }	  return    toModuleName(module,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
349	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix);  }	  return    toModuleName(module,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
350	[BUG]  [BUGGY]  if(modulePrefix  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulePrefix  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulePrefix  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix);  }	  return    toModuleName(module,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
351	[BUG]  [BUGGY]  if(modulePrefix!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  filename);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulePrefix!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulePrefix!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  filename);  }	  return    toModuleName(module,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
352	[BUG]  [BUGGY]  if(modulePrefix  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  filename);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulePrefix  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulePrefix  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  filename);  }	  return    toModuleName(module,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
353	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }	  return    toModuleName(filename,    normalizeSourceName(modulename));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
354	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }	  return    toModuleName(filename,    normalizeSourceName(modulename));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
355	[BUG]  [BUGGY]  if(modulename.length()  ==  0)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename.length()  ==  0)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename.length()  ==  0)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }	  return    toModuleName(filename,    normalizeSourceName(modulename));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
356	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(filename,    normalizeSourceName(modulename));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
357	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(filename,    normalizeSourceName(modulename));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
358	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module$test));  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(module$test));	  return    toModuleName(filename,    normalizeSourceName(modulename));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
359	[BUG]  [BUGGY]  if(modulename.startsWith( "module "))  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename.startsWith( "module "))  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename.startsWith( "module "))  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }	  return    toModuleName(filename,    normalizeSourceName(modulename));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
360	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
361	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
362	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
363	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX,  filename);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX,  filename);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
364	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX,  scriptNodeCount);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
365	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename),  module);  }	  return    toModuleName(normalizeFilename(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
366	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  module);  }	  return    toModuleName(normalizeFilename(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
367	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename),  module);  }	  return    toModuleName(normalizeFilename(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
368	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeFilename(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeFilename(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeFilename(filename),  module);  }	  return    toModuleName(normalizeFilename(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
369	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  module$test);	  return    toModuleName(normalizeFilename(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
370	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  module,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  module,  a$$module$test);	  return    toModuleName(normalizeFilename(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
371	[BUG]  [BUGGY]  if(modulename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(moduleName    ==    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
372	[BUG]  [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(moduleName    ==    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
373	[BUG]  [BUGGY]  if(modulename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(moduleName    ==    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
374	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module$test,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
375	[BUG]  [BUGGY]  if(module$test!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module$test,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
376	[BUG]  [BUGGY]  if(module$test  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module$test,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
377	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module$test,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
378	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)||  module$test  ==  normalizeSourceName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)||  module$test  ==  normalizeSourceName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)||  module$test  ==  normalizeSourceName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module$test,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
379	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(modulename),  guessCJSModuleName);	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
380	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName,  filename);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName,  filename);	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
381	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
382	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName,  scriptNodeCount);	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
383	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename)+  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename)+  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename)+  guessCJSModuleName);	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
384	[BUG]  [BUGGY]  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	&&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
385	[BUG]  [BUGGY]  |!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  |!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	|!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
386	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(modifySourceName(filename));  }	  ||!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
387	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }	  return    toModuleName(modulename,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
388	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeModuleName(modulename));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeModuleName(modulename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeModuleName(modulename));	  return    toModuleName(modulename,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
389	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }	  return    toModuleName(modulename,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
390	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }	  return    toModuleName(modulename,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
391	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }	  return    toModuleName(modulename,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
392	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename),  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeModuleName(filename),  guessCJSModuleName(filename));	  return    toModuleName(modulename,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
393	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(modulename,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
394	[BUG]  [BUGGY]  ||!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length());  }	  if(!filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
395	[BUG]  [BUGGY]  if(!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length());  }	  if(!filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
396	[BUG]  [BUGGY]  if(!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }	  if(!filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
397	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename  =  filename.substring(0,  filename.length()  -  1);	  if(filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
398	[BUG]  [BUGGY]  ||  filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
399	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
400	[BUG]  [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	Filename  filename  =  filename.substring(0,  filename.length()  -  1);	  if(filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
401	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	String  filename  =  filename.substring(0,  filename.length()  -  1);	  if(filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
402	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
403	[BUG]  [BUGGY]  if(modulename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
404	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
405	[BUG]  [BUGGY]  if(modulename  ==  null  ||  modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null  ||  modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||  modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
406	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null    &&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
407	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null    &&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
408	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null    &&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
409	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  <  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  <  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  <  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null    &&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
410	[BUG]  [BUGGY]  if(modulename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename!=    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
411	[BUG]  [BUGGY]  if(modulename!=  null  ||  modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null  ||  modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null  ||  modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename!=    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
412	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename!=    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
413	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
414	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
415	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix,  guessCJSModuleName(filename));	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
416	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler.guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler.guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  compiler.guessCJSModuleName(filename));	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
417	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename,  scriptNodeCount));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename,  scriptNodeCount));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename,  scriptNodeCount));	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
418	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(filename),  guessCJSModuleName(modulename));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(filename),  guessCJSModuleName(modulename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(filename),  guessCJSModuleName(modulename));	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
419	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName);  }	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
420	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName);  }	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
421	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
422	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName,  filename);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName,  filename);	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
423	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName,  scriptNodeCount);	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
424	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
425	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename.length()    ==    0)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
426	[BUG]  [BUGGY]  if(modulename.length()!=  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename.length()!=  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename.length()!=  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename.length()    ==    0)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
427	[BUG]  [BUGGY]  ||  modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename.length()    ==    0)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
428	[BUG]  [BUGGY]  if(modulename.length()  >=  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename.length()  >=  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename.length()  >=  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename.length()    ==    0)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
429	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null    ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
430	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }	  if(filename    ==    null    ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
431	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null    ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
432	[BUG]  [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
433	[BUG]  [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()!=  0)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
434	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
435	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(modifyFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(modifyFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(modifyFilename(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
436	[BUG]  [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
437	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }	  return    toModuleName(normalizeSourceName(filename),    module,    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
438	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }	  return    toModuleName(normalizeSourceName(filename),    module,    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
439	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
440	[BUG]  [BUGGY]  if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
441	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
442	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
443	[BUG]  [BUGGY]  if(module$test!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
444	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeModuleName(moduleName));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeModuleName(moduleName));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeModuleName(moduleName));	  return    toModuleName(moduleName,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
445	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }	  return    toModuleName(moduleName,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
446	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }	  return    toModuleName(moduleName,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
447	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }	  return    toModuleName(moduleName,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
448	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(module));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(module));  }	  if(module    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
449	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
450	[BUG]  [BUGGY]  if(module  >=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  >=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  >=  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
451	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(module));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(module));  }	  if(module    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
452	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }	  var    module$test=    {    }    if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
453	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
454	[BUG]  [BUGGY]  if(filename!=  null)  {  var  module$test=  normalizeSourceName(filename);var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  var  module$test=  normalizeSourceName(filename);var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  var  module$test=  normalizeSourceName(filename);var  module$test=  {  }  ;  }	  var    module$test=    {    }    if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
455	[BUG]  [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()!=  0)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
456	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  >  0)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
457	[BUG]  [BUGGY]  if(filename.length()  >=  0)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  >=  0)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  >=  0)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
458	[BUG]  [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
459	[BUG]  [BUGGY]  if(filename.length()  ==  0  ||  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0  ||  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0  ||  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
460	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
461	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework,  reportDependencies);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework,  reportDependencies);	  return    toModuleName(normalizeSourceName(filename),    compiler,    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
462	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework);  }  else  {  throw  new  IllegalStateException( " ");  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
463	[BUG]  [BUGGY]  ||!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }	  if(!filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
464	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
465	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
466	[BUG]  [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
467	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
468	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_PREFIX);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
469	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
470	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  compiler.guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  compiler.guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  compiler.guessCJSModuleName(filename));	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
471	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename,  scriptNodeCount));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename,  scriptNodeCount));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename,  scriptNodeCount));	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
472	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  true,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  true,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  true,  guessCJSModuleName(filename));	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
473	[BUG]  [BUGGY]  return  toModuleName(module,  guessCJSModuleName(filename),  normalizeSourceName(filename));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  guessCJSModuleName(filename),  normalizeSourceName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  guessCJSModuleName(filename),  normalizeSourceName(filename));	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
474	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(a$$module$test));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(a$$module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(a$$module$test));	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
475	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename,    module),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
476	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename,    module),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
477	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename,    module),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
478	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename,    module),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
479	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename,    module),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
480	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test,  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename,    module),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
481	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    ;    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
482	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    ;    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
483	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    ;    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
484	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".java "))  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    ;    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
485	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  }	  return    toModuleName(normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
486	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename,  module));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename,  module));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename,  module));	  return    toModuleName(normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
487	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename,  a$$module$test));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename,  a$$module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename,  a$$module$test));	  return    toModuleName(normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
488	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename,  scriptNodeCount));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename,  scriptNodeCount));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename,  scriptNodeCount));	  return    toModuleName(normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
489	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  }	  return    toModuleName(normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
490	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  }	  return    toModuleName(normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
491	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeFilename(filename));  }	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
492	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
493	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
494	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
495	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeFilename(modulename));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeFilename(modulename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeFilename(modulename));	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
496	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename),  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeFilename(filename),  guessCJSModuleName(filename));	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
497	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
498	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
499	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
500	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  EXPORTS);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  EXPORTS);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  filename,  EXPORTS);	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
501	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename));  }	  return    toModuleName(normalizeFilename(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
502	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename));  }	  return    toModuleName(normalizeFilename(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
503	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename));  }	  return    toModuleName(normalizeFilename(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
504	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename,  module));  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename,  module));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename,  module));	  return    toModuleName(normalizeFilename(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
505	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename,  a$$module$test));  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename,  a$$module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename,  a$$module$test));	  return    toModuleName(normalizeFilename(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
506	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename,  scriptNodeCount));  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename,  scriptNodeCount));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename,  scriptNodeCount));	  return    toModuleName(normalizeFilename(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
507	[BUG]  [BUGGY]  if(filename!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null    &&!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
508	[BUG]  [BUGGY]  if(module!=  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null    &&!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
509	[BUG]  [BUGGY]  if(filename!=  null)  {  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null    &&!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
510	[BUG]  [BUGGY]  if(filename!=  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null    &&!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
511	[BUG]  [BUGGY]  if(module  ==  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null    &&!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
512	[BUG]  [BUGGY]  if(module!=  null)  {  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null    &&!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
513	[BUG]  [BUGGY]  if(sourceFilename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(sourceFilename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(sourceFilename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  }	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
514	[BUG]  [BUGGY]  if(sourceFilename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(sourceFilename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(sourceFilename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  }	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
515	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  }	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
516	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  sourceFilename));  }	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
517	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  a$$module$test));  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  a$$module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  a$$module$test));	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
518	[BUG]  [BUGGY]  if(sourceFilename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  filename));  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(sourceFilename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(sourceFilename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  filename));  }	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
519	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
520	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
521	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
522	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
523	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
524	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
525	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()  <  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()  <  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.length()  <  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
526	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
527	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
528	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
529	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
530	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
531	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( "/.js "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( "/.js "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( "/.js "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
532	[BUG]  [BUGGY]  ||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
533	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  >  0)  {  return  toModuleName(guessCJSModuleName(filename));  }	  if(filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
534	[BUG]  [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }	  filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
535	[BUG]  [BUGGY]  filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
536	[BUG]  [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename));  }	  filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
537	[BUG]  [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(messageCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(messageCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  ==  0)  {  return  toModuleName(messageCJSModuleName(filename));  }	  filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
538	[BUG]  [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
539	[BUG]  [BUGGY]  if(filename  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(moduleName    ==    null    ||!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
540	[BUG]  [BUGGY]  if(moduleName!=  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(moduleName    ==    null    ||!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
541	[BUG]  [BUGGY]  if(modulename  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(moduleName    ==    null    ||!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
542	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
543	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
544	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
545	[BUG]  [BUGGY]  if(isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
546	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
547	[BUG]  [BUGGY]  ||!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
548	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(module$test,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(module$test,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(module$test,  normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
549	[BUG]  [BUGGY]  ||  isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
550	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(modulename,  normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
551	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modulePrefix,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
552	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(moduleName));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(moduleName));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeModuleName(moduleName));  }	  if(moduleName!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
553	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(moduleName!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
554	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
555	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
556	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(filename,  normalizeSourceName(module));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(filename,  normalizeSourceName(module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(filename,  normalizeSourceName(module));  }	  return    toModuleName(filename,    normalizeSourceName(module));    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
557	[BUG]  [BUGGY]  if(module.isModuleName())  {  return  toModuleName(filename,  normalizeSourceName(module));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module.isModuleName())  {  return  toModuleName(filename,  normalizeSourceName(module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module.isModuleName())  {  return  toModuleName(filename,  normalizeSourceName(module));  }	  return    toModuleName(filename,    normalizeSourceName(module));    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
558	[BUG]  [BUGGY]  if(module.isModule())  {  return  toModuleName(filename,  normalizeSourceName(module));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module.isModule())  {  return  toModuleName(filename,  normalizeSourceName(module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module.isModule())  {  return  toModuleName(filename,  normalizeSourceName(module));  }	  return    toModuleName(filename,    normalizeSourceName(module));    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
559	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module),  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(module),  guessCJSModuleName(filename));	  return    toModuleName(filename,    normalizeSourceName(module));    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
560	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(filename,  normalizeSourceName(module));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(filename,  normalizeSourceName(module));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(filename,  normalizeSourceName(module));  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(filename,    normalizeSourceName(module));    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
561	[BUG]  [BUGGY]  if(module.isModule())  {  return  toModuleName(filename,  normalizeSourceName(module));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module.isModule())  {  return  toModuleName(filename,  normalizeSourceName(module));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module.isModule())  {  return  toModuleName(filename,  normalizeSourceName(module));  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(filename,    normalizeSourceName(module));    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
562	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(filename,  normalizeSourceName(module));  }  else  {  compiler.reportDependencies();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(filename,  normalizeSourceName(module));  }  else  {  compiler.reportDependencies();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(filename,  normalizeSourceName(module));  }  else  {  compiler.reportDependencies();  }	  return    toModuleName(filename,    normalizeSourceName(module));    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
563	[BUG]  [BUGGY]  ||!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	  if(!filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
564	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  guessCJSModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  guessCJSModuleName(filename);  }	  if(!filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
565	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.startsWith( ". "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.startsWith( ". "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.startsWith( ". "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.startsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
566	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.startsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.startsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.startsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.startsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
567	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename)&&  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename)&&  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename)&&  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.startsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
568	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)||  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)||  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)||  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.startsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
569	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
570	[BUG]  [BUGGY]  if(module$test!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
571	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
572	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
573	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
574	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename,  scriptNodeCount));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename,  scriptNodeCount));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename,  scriptNodeCount));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
575	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename,  a$$module$test));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename,  a$$module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename,  a$$module$test));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
576	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(module$test));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(module$test));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
577	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filenamePrefix  +  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filenamePrefix  +  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  filenamePrefix  +  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX    +    filename);    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
578	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  a$$module$test);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX    +    filename);    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
579	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  scriptNodeCount);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX    +    filename);    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
580	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX    +    filename);    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
581	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX    +    filename);    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
582	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filenamePrefix);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filenamePrefix);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX    +    filename);    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
583	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(guessCJSModuleName(filename));  }	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
584	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  1))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  1))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  1))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
585	[BUG]  [BUGGY]  |(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  |(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	|(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
586	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(modifySourceName(filename));  }	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
587	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  2))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  2))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  2))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
588	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeFilename(filename));  }	  return    toModuleName(module,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
589	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  guessCJSModuleName());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  guessCJSModuleName());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeFilename(filename),  guessCJSModuleName());	  return    toModuleName(module,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
590	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(module,  normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(module,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
591	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
592	[BUG]  [BUGGY]  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
593	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
594	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
595	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename  =  filename.substring(0,  filename.length()  -  3);	  if(filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    3);    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
596	[BUG]  [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	Filename  filename  =  filename.substring(0,  filename.length());	  if(filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    3);    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
597	[BUG]  [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
598	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  normalizeModuleName(filename,  module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  normalizeModuleName(filename,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  normalizeModuleName(filename,  module);  }	  return    normalizeModuleName(filename,    module);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
599	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeModuleName(filename,  module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  normalizeModuleName(filename,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  normalizeModuleName(filename,  module);  }	  return    normalizeModuleName(filename,    module);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
600	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  normalizeModuleName(filename,  module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  normalizeModuleName(filename,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  normalizeModuleName(filename,  module);  }	  return    normalizeModuleName(filename,    module);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
601	[BUG]  [BUGGY]  return  normalizeModuleName(filename,  module,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  normalizeModuleName(filename,  module,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  normalizeModuleName(filename,  module,  guessCJSModuleName);	  return    normalizeModuleName(filename,    module);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
602	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  normalizeModuleName(filename,  module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  normalizeModuleName(filename,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  normalizeModuleName(filename,  module);  }	  return    normalizeModuleName(filename,    module);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
603	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  normalizeModuleName(filename,  module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  normalizeModuleName(filename,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  normalizeModuleName(filename,  module);  }	  return    normalizeModuleName(filename,    module);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
604	[BUG]  [BUGGY]  return  normalizeModuleName(filename,  module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  normalizeModuleName(filename,  module,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  normalizeModuleName(filename,  module,  a$$module$test);	  return    normalizeModuleName(filename,    module);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
605	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  return  toModuleName(guessCJSModuleName(filename));  }	  ||    filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
606	[BUG]  [BUGGY]  ||  filename  >=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  >=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  >=  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  ||    filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
607	[BUG]  [BUGGY]  |  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  |  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	|  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  ||    filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
608	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  ||    filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
609	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    module$test);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
610	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    module$test);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
611	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    module$test);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
612	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    module$test);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
613	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    module$test);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
614	[BUG]  [BUGGY]  if(isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
615	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
616	[BUG]  [BUGGY]  ||!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
617	[BUG]  [BUGGY]  ||  isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
618	[BUG]  [BUGGY]  if(isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
619	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename),  compiler);  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
620	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  }	  return    toModuleName(module,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
621	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module$test,  guessCJSModuleName);	  return    toModuleName(module,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
622	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  }	  return    toModuleName(module,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
623	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module$test,  a$$module$test);	  return    toModuleName(module,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
624	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  module$test);  }	  return    toModuleName(module,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
625	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
626	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
627	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modifySourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(modifySourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modifySourceName(filename),  module$test);  }	  if(filename!=    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
628	[BUG]  [BUGGY]  ||!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	  if(!filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
629	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
630	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
631	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
632	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
633	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
634	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
635	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
636	[BUG]  [BUGGY]  if(module  >=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  >=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  >=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
637	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.module);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  junit.module);	  return    toModuleName(normalizeSourceName(filename),    junit.module);    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
638	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  junit.module);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  junit.module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  junit.module);  }	  return    toModuleName(normalizeSourceName(filename),    junit.module);    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
639	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.module);  }	  return    toModuleName(normalizeSourceName(filename),    junit.module);    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
640	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.module);  }	  return    toModuleName(normalizeSourceName(filename),    junit.module);    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
641	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.module,  compiler);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.module,  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.module,  compiler);	  return    toModuleName(normalizeSourceName(filename),    junit.module);    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
642	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler.module);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler.module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler.module);	  return    toModuleName(normalizeSourceName(filename),    junit.module);    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
643	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
644	[BUG]  [BUGGY]  if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
645	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
646	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".java ")||  filename.endsWith( ".java "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".java ")||  filename.endsWith( ".java "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( ".java ")||  filename.endsWith( ".java "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".java   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
647	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( "java. "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( "java. "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( "java. "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".java   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
648	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( "java/ "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( "java/ "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( "java/ "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".java   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
649	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( "java "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( "java "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( "java "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".java   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
650	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(!filename.endsWith( ".java "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(!filename.endsWith( ".java "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(!filename.endsWith( ".java "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".java   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
651	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=2!=  guessCJSModuleName(filename);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=2!=  guessCJSModuleName(filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=2!=  guessCJSModuleName(filename);	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
652	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=2  ==  guessCJSModuleName(filename);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=2  ==  guessCJSModuleName(filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=2  ==  guessCJSModuleName(filename);	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
653	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1!=  guessCJSModuleName(filename);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=1!=  guessCJSModuleName(filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=1!=  guessCJSModuleName(filename);	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
654	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=2!=  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=2!=  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=2!=  guessCJSModuleName(filename));	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
655	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=2  ==  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=2  ==  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=2  ==  guessCJSModuleName(filename));	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
656	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }	  return    toModuleName(normalizeFilename(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
657	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }	  return    toModuleName(normalizeFilename(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
658	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }	  return    toModuleName(normalizeFilename(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
659	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }	  return    toModuleName(normalizeFilename(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
660	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeFilename(filename),  a$$module$test);  }	  return    toModuleName(normalizeFilename(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
661	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  module$test,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  module$test,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  module$test,  a$$$module$test);	  return    toModuleName(normalizeFilename(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
662	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  &&  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null    ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
663	[BUG]  [BUGGY]  filename!=  null  &&  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename!=  null  &&  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename!=  null  &&  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null    ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
664	[BUG]  [BUGGY]  filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null    ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
665	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(a$$module$test));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(a$$module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(a$$module$test));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName());    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
666	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName());  }	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName());    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
667	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName());  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName());  }	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName());    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
668	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName());  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName());  }	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName());    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
669	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(guessCJSModuleName(filename));  }	  ||    filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
670	[BUG]  [BUGGY]  |  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  |  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	|  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  ||    filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
671	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  ||    filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
672	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }	  var    module$test=    {    }    if(filename.endsWith(   ".java   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
673	[BUG]  [BUGGY]  if(filename.endsWith( "java   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( "java   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( "java   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename.endsWith(   ".java   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
674	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(filename.endsWith(   ".java   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
675	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
676	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
677	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
678	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
679	[BUG]  [BUGGY]  if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
680	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
681	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module.module$test:  goog.provide( "module$test   ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module.module$test:  goog.provide( "module$test   ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module.module$test:  goog.provide( "module$test   ");  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
682	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
683	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test,  a$$$$module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test,  a$$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test,  a$$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
684	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
685	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
686	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }	  return    toModuleName(sourceName,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
687	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }	  return    toModuleName(sourceName,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
688	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }	  return    toModuleName(sourceName,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
689	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }	  return    toModuleName(sourceName,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
690	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(sourceName));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(sourceName));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(sourceName));	  return    toModuleName(sourceName,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
691	[BUG]  [BUGGY]  if(sourceName!=  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(sourceName!=  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(sourceName!=  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }	  return    toModuleName(sourceName,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
692	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
693	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename));  }	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
694	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename,  scriptNodeCount));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename,  scriptNodeCount));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename,  scriptNodeCount));	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
695	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  compiler,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
696	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
697	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
698	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
699	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
700	[BUG]  [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
701	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
702	[BUG]  [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
703	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  standardizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  standardizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  standardizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
704	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  NormalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  NormalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  NormalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
705	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  }	  return    toModuleName(normalizeSourceName(filename),    module,    compiler);    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
706	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  }	  return    toModuleName(normalizeSourceName(filename),    module,    compiler);    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
707	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler,  reportDependencies);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  compiler,  reportDependencies);	  return    toModuleName(normalizeSourceName(filename),    module,    compiler);    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
708	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  compiler,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module,    compiler);    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
709	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeFilename(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
710	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
711	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
712	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modifyFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(modifyFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(modifyFilename(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
713	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }	  return    toModuleName(normalizeSourceName(filename,    module),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
714	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  compiler,  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  compiler,  reportDependencies);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  compiler,  reportDependencies);	  return    toModuleName(normalizeSourceName(filename,    module),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
715	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }	  return    toModuleName(normalizeSourceName(filename,    module),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
716	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }	  return    toModuleName(normalizeSourceName(filename,    module),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
717	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }	  return    toModuleName(normalizeSourceName(filename,    module),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
718	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)||  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)||  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)||  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    module!=    MODULE_NAME_SEPARATOR)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
719	[BUG]  [BUGGY]  &&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  &&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    module!=    MODULE_NAME_SEPARATOR)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
720	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    module!=    MODULE_NAME_SEPARATOR)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
721	[BUG]  [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    module!=    MODULE_NAME_SEPARATOR)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
722	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module  ==  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module  ==  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module  ==  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    module!=    MODULE_NAME_SEPARATOR)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
723	[BUG]  [BUGGY]  &&  filename!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  &&  filename!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	&&  filename!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    module!=    MODULE_NAME_SEPARATOR)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
724	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
725	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName);  }	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
726	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName);  }	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
727	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  filename);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  filename);	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
728	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  scriptNodeCount);	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
729	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
730	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName,  filename);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName,  filename);	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
731	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName,  scriptNodeCount);	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
732	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName);  }	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
733	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName);  }	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
734	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename)+  guessCJSModuleName);	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
735	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
736	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
737	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
738	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filenamePrefix,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filenamePrefix,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filenamePrefix,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
739	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
740	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
741	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  compiler.guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  compiler.guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  compiler.guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
742	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  testCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  testCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  testCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
743	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  sourceName,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  sourceName,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  sourceName,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
744	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
745	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
746	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
747	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
748	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
749	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
750	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
751	[BUG]  [BUGGY]  ||  filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename.length()    >=    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
752	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
753	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
754	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
755	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
756	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
757	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeModuleName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
758	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeModuleName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
759	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeModuleName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
760	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeModuleName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
761	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeModuleName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
762	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test);	  return    toModuleName(normalizeModuleName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
763	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename);	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    filename);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
764	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename);	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    filename);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
765	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    filename);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
766	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    filename);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
767	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName));  }	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName));    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
768	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$module$test));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$module$test));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName));    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
769	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName));  }	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName));    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
770	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName));  }	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName));    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
771	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  filename));  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  filename));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName));    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
772	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  scriptNodeCount));  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  scriptNodeCount));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  scriptNodeCount));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName));    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
773	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    module);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
774	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    module);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
775	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    module);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
776	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
777	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
778	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
779	[BUG]  [BUGGY]  if(module!=  null)  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
780	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
781	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(module!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(module!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(module!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
782	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
783	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
784	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
785	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
786	[BUG]  [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
787	[BUG]  [BUGGY]  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	&&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
788	[BUG]  [BUGGY]  if(isModuleName(filename))  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(isModuleName(filename))  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(isModuleName(filename))  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
789	[BUG]  [BUGGY]  if(isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
790	[BUG]  [BUGGY]  ||!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
791	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  toModuleName(module,  normalizeModuleName(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
792	[BUG]  [BUGGY]  ||  isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
793	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename,  module));  }	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
794	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename,  module),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename,  module),  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename,  module),  guessCJSModuleName(filename));	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
795	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
796	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
797	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
798	[BUG]  [BUGGY]  if(filename.startsWith( "module$test "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.startsWith( "module$test "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.startsWith( "module$test "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename.startsWith(   "module$test   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
799	[BUG]  [BUGGY]  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  	  var    module$test=    {    }    if(filename.startsWith(   "module$test   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
800	[BUG]  [BUGGY]  var  a$$module$test=1  >=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=1  >=  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=1  >=  illegal  start  of  expression	  var    modules$test=    {    }    ;var    a$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
801	[BUG]  [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(guessCJSModuleName(filename));  }	  ||(filename    ==    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
802	[BUG]  [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  1))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  1))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  ==  null  &&  filename.length()  >  1))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename    ==    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
803	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( "java ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( "java ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( "java ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.endsWith(   ".java   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
804	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( "java. ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( "java. ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( "java. ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.endsWith(   ".java   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
805	[BUG]  [BUGGY]  ||(filename  ==  null  &&  filename.endsWith( ".java ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  ==  null  &&  filename.endsWith( ".java ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  ==  null  &&  filename.endsWith( ".java ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.endsWith(   ".java   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
806	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( "java/ ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( "java/ ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( "java/ ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.endsWith(   ".java   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
807	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.startsWith( ".java ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.startsWith( ".java ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.startsWith( ".java ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.endsWith(   ".java   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
808	[BUG]  [BUGGY]  if(filename  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null    ||    normalizeSourceName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
809	[BUG]  [BUGGY]  if(modulename!=  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null    ||    normalizeSourceName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
810	[BUG]  [BUGGY]  if(moduleName  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null    ||    normalizeSourceName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
811	[BUG]  [BUGGY]  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null    ||    normalizeSourceName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
812	[BUG]  [BUGGY]  if(filename!=  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null    ||    normalizeSourceName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
813	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(sourceName  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(sourceName  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null    ||    normalizeSourceName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
814	[BUG]  [BUGGY]  var  a$$module$test=  ==  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=  ==  }  ;var  a$$module$test=  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=  ==  }  ;var  a$$module$test=	  ;var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
815	[BUG]  [BUGGY]  var  module$test=!=  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=!=  }  ;var  a$$module$test=  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=!=  }  ;var  a$$module$test=	  ;var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
816	[BUG]  [BUGGY]  var  module$test=  >=  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  >=  }  ;var  a$$module$test=  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  >=  }  ;var  a$$module$test=	  ;var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
817	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  ==  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=  ==  illegal  start  of  expression	  ;var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
818	[BUG]  [BUGGY]  if(filename!=  null)  {  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
819	[BUG]  [BUGGY]  ||  module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
820	[BUG]  [BUGGY]  if(modulePrefix!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulePrefix!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulePrefix!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
821	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
822	[BUG]  [BUGGY]  if(modulePrefix  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulePrefix  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulePrefix  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
823	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  modulePrefix);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  modulePrefix);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(modulename),  modulePrefix);	  return    toModuleName(modulename,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
824	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
825	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
826	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
827	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
828	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
829	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test,  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename),    module,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
830	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler,  a$$module$test,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler,  a$$module$test,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  compiler,  a$$module$test,  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename),    module,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
831	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(normalizeSourceName(filename),    module,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
832	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
833	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
834	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
835	[BUG]  [BUGGY]  if(filename!=  null)  {  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
836	[BUG]  [BUGGY]  if(filename!=  null)  {  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
837	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.endsWith( ".java "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null    ||    filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
838	[BUG]  [BUGGY]  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null    ||    filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
839	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null    ||    filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
840	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ". "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ". "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.endsWith( ". "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null    ||    filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
841	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  junit.framework);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  junit.framework);  }	  return    toModuleName(normalizeSourceName(filename,    module),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
842	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  junit.framework);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  junit.framework);  }	  return    toModuleName(normalizeSourceName(filename,    module),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
843	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  reportDependencies);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  reportDependencies);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  reportDependencies);	  return    toModuleName(normalizeSourceName(filename,    module),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
844	[BUG]  [BUGGY]  if(junit.framework!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  filename);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(junit.framework!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(junit.framework!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  filename);  }	  return    toModuleName(normalizeSourceName(filename,    module),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
845	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    module,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
846	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    module,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
847	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  }	  return    toModuleName(normalizeSourceName(filename),    module,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
848	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
849	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_PREFIX,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_PREFIX,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
850	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.equals( "$$ ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.equals( "$$ ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.equals( "$$ ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.equals(   "   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
851	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.equals( "* ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.equals( "* ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.equals( "* ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.equals(   "   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
852	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.equals( "_ ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.equals( "_ ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.equals( "_ ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.equals(   "   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
853	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.equals( "- ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.equals( "- ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.equals( "- ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.equals(   "   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
854	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.equals( "/ ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.equals( "/ ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.equals( "/ ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.equals(   "   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
855	[BUG]  [BUGGY]  if(filename.length()  >=  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  >=  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  >=  0)  {  return  toModuleName(guessCJSModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(guessCJSModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
856	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename,  module));  }	  if(filename.length()    ==    0)    {    return    toModuleName(guessCJSModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
857	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
858	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
859	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
860	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test,  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
861	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test);  }  else  {  compiler.reportCodeChange();  }	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
862	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  guessCJSModuleName);	  return    toModuleName(modulename,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
863	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
864	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
865	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
866	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(modulename),  module$test);	  return    toModuleName(modulename,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
867	[BUG]  [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
868	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  a$$module$test);	  return    toModuleName(modulename,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
869	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test,  filename);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test,  filename);	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
870	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
871	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  compiler,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  compiler,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  compiler,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
872	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test,  compiler);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test,  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  a$$module$test,  compiler);	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
873	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
874	[BUG]  [BUGGY]  if(filename!=  null)  {  compiler.reportCodeChange();  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  compiler.reportCodeChange();  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  compiler.reportCodeChange();  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
875	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  filename));	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    filename);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
876	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module);	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    filename);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
877	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
878	[BUG]  [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    ;    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
879	[BUG]  [BUGGY]  if(filename  ==  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    ;    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
880	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    ;    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
881	[BUG]  [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    ;    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
882	[BUG]  [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    ;    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
883	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  ;  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    ;    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
884	[BUG]  [BUGGY]  filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  >=  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
885	[BUG]  [BUGGY]  filename.length()  ==  1)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  ==  1)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  ==  1)  {  return  toModuleName(normalizeSourceName(filename));  }	  filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
886	[BUG]  [BUGGY]  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
887	[BUG]  [BUGGY]  filename.length()  ==  2)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  ==  2)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  ==  2)  {  return  toModuleName(normalizeSourceName(filename));  }	  filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
888	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
889	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  testCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  testCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  testCJSModuleName);	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
890	[BUG]  [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=  ==  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  var  module$test=  {  }  ;var  a$$module$test=  ==  illegal  start  of  expression	  ;var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
891	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=!=  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=!=  illegal  start  of  expression	  ;var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
892	[BUG]  [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  >=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  ;var  a$$module$test=  >=  illegal  start  of  expression  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  ;var  a$$module$test=  >=  illegal  start  of  expression	  ;var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
893	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
894	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
895	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
896	[BUG]  [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
897	[BUG]  [BUGGY]  ||(filename  ==  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  ==  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  ==  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
898	[BUG]  [BUGGY]  ;var  a$$module$test=1  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ;var  a$$module$test=1  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	;var  a$$module$test=1	  var    modules$test=    {    }    ;var    a$$module$test=1    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
899	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ",  module$test));	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    module$test);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
900	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(module,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
901	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeModuleName(module));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeModuleName(module));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeModuleName(module));	  return    toModuleName(module,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
902	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename),  module$test);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename),  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeModuleName(filename),  module$test);	  return    toModuleName(module,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
903	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename),  module);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeModuleName(filename),  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeModuleName(filename),  module);	  return    toModuleName(module,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
904	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceName,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceName,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.sourceName,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
905	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.sourceStart,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
906	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  EXPORTS);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  EXPORTS);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  EXPORTS);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
907	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
908	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  modules,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  modules,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  modules,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
909	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  a$$module$test,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  a$$module$test,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  a$$module$test,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
910	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  compiler,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  compiler,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  compiler,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
911	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test,  module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test,  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test,  module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
912	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
913	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
914	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename),  compiler);	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
915	[BUG]  [BUGGY]  ||  filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
916	[BUG]  [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test);  }	  if(filename!=    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
917	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.framework,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.framework,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  junit.framework,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename,    module),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
918	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.sourceStart);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.sourceStart);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  junit.sourceStart);	  return    toModuleName(normalizeSourceName(filename,    module),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
919	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.module);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  junit.module);	  return    toModuleName(normalizeSourceName(filename,    module),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
920	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.reportDependencies);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.reportDependencies);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  junit.reportDependencies);	  return    toModuleName(normalizeSourceName(filename,    module),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
921	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.module$test);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  junit.module$test);	  return    toModuleName(normalizeSourceName(filename,    module),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
922	[BUG]  [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test=1  ==  guessCJSModuleName(filename)  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  ==  }  ;var  a$$module$test=1  ==  guessCJSModuleName(filename)  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  ==  }  ;var  a$$module$test=1  ==  guessCJSModuleName(filename)	  junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;var    a$$module$test=1    ==    guessCJSModuleName(filename)    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
923	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.module,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.module,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.module);    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
924	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.module,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.module,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.module,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    junit.module);    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
925	[BUG]  [BUGGY]  ||(filename  >=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  >=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  >=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename    ==    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
926	[BUG]  [BUGGY]  ||(filename  [Delete]  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  [Delete]  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  [Delete]  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename    ==    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
927	[BUG]  [BUGGY]  ||(filename  >>  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  >>  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  >>  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename    ==    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
928	[BUG]  [BUGGY]  null  var  module$test=  ==  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  null  var  module$test=  ==  }  ;var  a$$module$test=  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	null  var  module$test=  ==  }  ;var  a$$module$test=	  var    module$test=    ==    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
929	[BUG]  [BUGGY]  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ;var  a$$module$test=  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	;var  a$$module$test=	  var    module$test=    ==    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
930	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  filename,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
931	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
932	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
933	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  filename);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  filename);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
934	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  baseUri);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  baseUri);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  baseUri);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
935	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename,  module),  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename,  module),  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename,  module),  guessCJSModuleName);	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
936	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename,  module),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename,  module),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename,  module),  a$$module$test);	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
937	[BUG]  [BUGGY]  return  normalizeModuleName(filename,  module));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  normalizeModuleName(filename,  module));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  normalizeModuleName(filename,  module));	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
938	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename,  module),  guessCJSModuleName());  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename,  module),  guessCJSModuleName());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename,  module),  guessCJSModuleName());	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
939	[BUG]  [BUGGY]  return  normalizeFilename(filename,  module$test));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  normalizeFilename(filename,  module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  normalizeFilename(filename,  module$test));	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
940	[BUG]  [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
941	[BUG]  [BUGGY]  ||(modulename!=  null  &&  modulename.endsWith( ".js ")))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(modulename!=  null  &&  modulename.endsWith( ".js ")))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(modulename!=  null  &&  modulename.endsWith( ".js ")))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename!=    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
942	[BUG]  [BUGGY]  ||(modulename!=  null  &&  modulename.length()  >  0))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(modulename!=  null  &&  modulename.length()  >  0))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(modulename!=  null  &&  modulename.length()  >  0))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename!=    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
943	[BUG]  [BUGGY]  ||(modulename!=  null  &&  modulename.length()  ==  0))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(modulename!=  null  &&  modulename.length()  ==  0))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(modulename!=  null  &&  modulename.length()  ==  0))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename!=    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
944	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename  +  suffix);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename  +  suffix);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  filename  +  suffix);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX    +    filename);    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
945	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename  +  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename  +  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  filename  +  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX    +    filename);    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
946	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  EXPORTS);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  EXPORTS);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  EXPORTS);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX    +    filename);    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
947	[BUG]  [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()!=  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  }	  var    module$test=    {    }    if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
948	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
949	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName);  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
950	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName);  }	  if(moduleName!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
951	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  DEFAULT_FILENAME_PREFIX)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  DEFAULT_FILENAME_PREFIX)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module!=  DEFAULT_FILENAME_PREFIX)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    module!=    MODULE_NAME_SEPARATOR)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
952	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  compiler);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  compiler);	  return    toModuleName(normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
953	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  filename);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  filename);  }	  return    toModuleName(normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
954	[BUG]  [BUGGY]  return  toModuleName(sourceName,  normalizeSourceName(filename),  module);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(sourceName,  normalizeSourceName(filename),  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(sourceName,  normalizeSourceName(filename),  module);	  return    toModuleName(sourceName,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
955	[BUG]  [BUGGY]  return  toModuleName(sourceName,  normalizeSourceName(filename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(sourceName,  normalizeSourceName(filename),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(sourceName,  normalizeSourceName(filename),  a$$module$test);	  return    toModuleName(sourceName,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
956	[BUG]  [BUGGY]  return  toModuleName(sourceName,  normalizeSourceName(filename),  compiler);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(sourceName,  normalizeSourceName(filename),  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(sourceName,  normalizeSourceName(filename),  compiler);	  return    toModuleName(sourceName,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
957	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
958	[BUG]  [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
959	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
960	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
961	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFileName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeFileName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeFileName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
962	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  scriptNodeCount);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    filename);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
963	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  filename);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  filename);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    filename);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
964	[BUG]  [BUGGY]  filename.length()  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
965	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  EXPORTS);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  EXPORTS);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  EXPORTS);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    module);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
966	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  compiler);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  compiler);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    module);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
967	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename),  module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename),  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeFilename(filename),  module$test);	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
968	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
969	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename),  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename),  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeFilename(filename),  guessCJSModuleName);	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
970	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeFilename(filename),  a$$module$test);	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
971	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename),  compiler);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeFilename(filename),  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeFilename(filename),  compiler);	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
972	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
973	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
974	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
975	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  normalizeSourceName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  normalizeSourceName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module!=  normalizeSourceName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module$test,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
976	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&!module$test.startsWith( "module$ "))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&!module$test.startsWith( "module$ "))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&!module$test.startsWith( "module$ "))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module$test,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
977	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    if(filename.startsWith(   "module$test   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
978	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   "  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   "  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   "	  var    module$test=    {    }    if(filename.startsWith(   "module$test   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
979	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(modifySourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
980	[BUG]  [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(modifySourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
981	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix,  guessCJSModuleName(filename));	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
982	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename  +  1));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename  +  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename  +  1));	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
983	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  sourceName,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  sourceName,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  sourceName,  guessCJSModuleName(filename));	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
984	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  testCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  testCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  testCJSModuleName(filename));	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
985	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  filename);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  filename);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
986	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  filename));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  filename));	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
987	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  sourceFilename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  sourceFilename),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  sourceFilename),  a$$module$test);	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
988	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  compiler));  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  compiler));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  compiler));	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
989	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  sourceFilename),  module);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  sourceFilename),  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  sourceFilename),  module);	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
990	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  filename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  filename),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  filename),  a$$module$test);	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
991	[BUG]  [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
992	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart  +  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.sourceStart  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.sourceStart  +  1);	  return    toModuleName(normalizeSourceName(filename),    junit.sourceStart);    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
993	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler.sourceStart);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler.sourceStart);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler.sourceStart);	  return    toModuleName(normalizeSourceName(filename),    junit.sourceStart);    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
994	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleSEPARATOR());  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleSEPARATOR());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleSEPARATOR());	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName());    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
995	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  compiler),  guessCJSModuleName());  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  compiler),  guessCJSModuleName());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  compiler),  guessCJSModuleName());	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName());    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
996	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleSEPARATOR);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleSEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleSEPARATOR);	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName());    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
997	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  testCJSModuleName());  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  testCJSModuleName());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  testCJSModuleName());	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName());    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
998	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
999	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  normalizeSourceName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  normalizeSourceName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module!=  normalizeSourceName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1000	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&!module.isSupported())  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&!module.isSupported())  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&!module.isSupported())  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1001	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1002	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
1003	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
1004	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
1005	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
1006	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename),    module,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1007	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename),    module,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1008	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename),    module,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1009	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  EXPORTS);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  EXPORTS);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  EXPORTS);	  return    toModuleName(normalizeSourceName(filename),    module,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1010	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1011	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1012	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1013	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1014	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1015	[BUG]  [BUGGY]  ||  filename.length()  ==  1)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.length()  ==  1)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()  ==  1)  {  return  toModuleName(normalizeSourceName(filename));  }	  ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1016	[BUG]  [BUGGY]  if(module!=  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1017	[BUG]  [BUGGY]  if(module  ==  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1018	[BUG]  [BUGGY]  if(!isModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1019	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  if(module!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1020	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1021	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.startsWith( ".js ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.startsWith( ".js ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.startsWith( ".js ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.endsWith(   ".js   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1022	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  compiler);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  compiler);	  return    toModuleName(normalizeModuleName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1023	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1024	[BUG]  [BUGGY]  if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1025	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1026	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  normalizeModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  normalizeModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  normalizeModuleName(filename);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1027	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
1028	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  sourceFilename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  sourceFilename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  sourceFilename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
1029	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  filename),  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  filename),  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  filename),  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
1030	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX  +  filename);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX  +  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX  +  filename);	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
1031	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  module$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  module$test,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    compiler,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1032	[BUG]  [BUGGY]  if(compiler!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(compiler!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(compiler!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1033	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test,  module$test);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test,  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  a$$module$test,  module$test);	  return    toModuleName(normalizeSourceName(filename),    compiler,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1034	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  module$test);	  return    toModuleName(normalizeSourceName(filename),    compiler,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1035	[BUG]  [BUGGY]  null  var  module$test=  {  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  null  var  module$test=  {  }  ;var  a$$module$test=  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	null  var  module$test=  {  }  ;var  a$$module$test=	  var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1036	[BUG]  [BUGGY]  var  a$$module$test=  contul  contul(filename).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=  contul  contul(filename).toLowerCase();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=  contul  contul(filename).toLowerCase();	  var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1037	[BUG]  [BUGGY]  var  a$$module$test=  contul  contul(filename).toUpperCase();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  a$$module$test=  contul  contul(filename).toUpperCase();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  a$$module$test=  contul  contul(filename).toUpperCase();	  var    module$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1038	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(modulename,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1039	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename),  module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename),  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeModuleName(filename),  module$test);	  return    toModuleName(modulename,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1040	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeModuleName(filename),  a$$module$test);	  return    toModuleName(modulename,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1041	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  filename,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
1042	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  module);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(modulename),  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(modulename),  module);	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1043	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
1044	[BUG]  [BUGGY]  ||(modulePrefix!=  null  &&  modulePrefix.length()  >  0)||(modulePrefix  ==  null  &&  modulePrefix.length()  >  0))  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(modulePrefix!=  null  &&  modulePrefix.length()  >  0)||(modulePrefix  ==  null  &&  modulePrefix.length()  >  0))  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(modulePrefix!=  null  &&  modulePrefix.length()  >  0)||(modulePrefix  ==  null  &&  modulePrefix.length()  >  0))  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modulePrefix,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1045	[BUG]  [BUGGY]  ||(modulePrefix!=  null  &&  modulePrefix.length()  >  0)||(modulePrefix!=  null  &&  modulePrefix.length()  >  0))  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(modulePrefix!=  null  &&  modulePrefix.length()  >  0)||(modulePrefix!=  null  &&  modulePrefix.length()  >  0))  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(modulePrefix!=  null  &&  modulePrefix.length()  >  0)||(modulePrefix!=  null  &&  modulePrefix.length()  >  0))  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modulePrefix,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1046	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.startsWith( ".java "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.startsWith( ".java "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.startsWith( ".java "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".java   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1047	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".java ")||  filename.endsWith( ".js "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".java ")||  filename.endsWith( ".js "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( ".java ")||  filename.endsWith( ".js "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".java   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1048	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.startsWith( "/.js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.startsWith( "/.js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.startsWith( "/.js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.startsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1049	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$modulePrefix);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$modulePrefix);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  a$$modulePrefix);	  return    toModuleName(modulename,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1050	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModulePrefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModulePrefix);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModulePrefix);	  return    toModuleName(modulename,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1051	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler.getModulePrefix());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler.getModulePrefix());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  compiler.getModulePrefix());	  return    toModuleName(modulename,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1052	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.ModuleSupplier:  goog.provide( "module$test ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.ModuleSupplier:  goog.provide( "module$test ");  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.ModuleSupplier:  goog.provide( "module$test ");	  return    toModuleName(normalizeSourceName(filename),    compiler,    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
1053	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test "));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test "));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test "));	  return    toModuleName(normalizeSourceName(filename),    compiler,    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
1054	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
1055	[BUG]  [BUGGY]  if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
1056	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
1057	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  module$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  module$test,  a$$module$test);	  return    toModuleName(normalizeModuleName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1058	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  a$$module$test,  module$test);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  a$$module$test,  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  a$$module$test,  module$test);	  return    toModuleName(normalizeModuleName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1059	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  module$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  module$test,  a$$module$test);	  return    toModuleName(normalizeFilename(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1060	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  a$$module$test,  module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  a$$module$test,  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  a$$module$test,  module$test);	  return    toModuleName(normalizeFilename(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1061	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
1062	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
1063	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test "));var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test "));var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test "));var  module$test=  {  }	  var    module$test=    {    }    if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
1064	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler.guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler.guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler.guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
1065	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename,  compiler));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename,  compiler));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  guessCJSModuleName(filename,  compiler));	  return    toModuleName(normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
1066	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename));  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1067	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  modules));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  modules));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  modules));  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1068	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeFilename(filename),  module$test);	  return    toModuleName(moduleName,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
1069	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeFilename(filename),  a$$module$test);	  return    toModuleName(moduleName,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
1070	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeFilename(filename)+  1);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeFilename(filename)+  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeFilename(filename)+  1);	  return    toModuleName(moduleName,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
1071	[BUG]  [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1072	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1073	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1074	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1075	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  compiler,  a$$module$test);	  return    toModuleName(modulename,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
1076	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename)&&!module$test)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename)&&!module$test)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename)&&!module$test)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1077	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(name))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(name))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(name))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1078	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  moduleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  moduleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  moduleName(normalizeSourceName(filename));  }	  if(module!=    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1079	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  filename);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  filename);	  return    toModuleName(normalizeSourceName(filename),    compiler,    module);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1080	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  baseUri);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  baseUri);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  baseUri);	  return    toModuleName(normalizeSourceName(filename),    compiler,    module);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1081	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  filenamePrefix);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  filenamePrefix);	  return    toModuleName(normalizeSourceName(filename),    compiler,    module);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1082	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  sourceFilename);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  sourceFilename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  sourceFilename);	  return    toModuleName(normalizeSourceName(filename),    compiler,    module);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1083	[BUG]  [BUGGY]  return  normalizeModuleName(filename,  moduleName));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  normalizeModuleName(filename,  moduleName));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  normalizeModuleName(filename,  moduleName));	  return    toModuleName(moduleName,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
1084	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1085	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizePath(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizePath(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizePath(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1086	[BUG]  [BUGGY]  ||(modulename!=  null  &&  module.isModuleName(filename)))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(modulename!=  null  &&  module.isModuleName(filename)))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(modulename!=  null  &&  module.isModuleName(filename)))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(modulename    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1087	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  compiler,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  compiler,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  compiler,  a$$module$test);	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1088	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test,  module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test,  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test,  module$test);	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1089	[BUG]  [BUGGY]  ||  filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1090	[BUG]  [BUGGY]  if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module$test);  }	  if(filename    ==    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1091	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(module,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1092	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeFilename(module));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeFilename(module));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeFilename(module));	  return    toModuleName(module,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1093	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  false);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  false);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeFilename(filename),  false);	  return    toModuleName(module,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1094	[BUG]  [BUGGY]  ||(module!=  null  &&  module.isModule()))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(module!=  null  &&  module.isModule()))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(module!=  null  &&  module.isModule()))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1095	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  NormalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(module,  NormalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(module,  NormalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1096	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  NormalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(module,  NormalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(module,  NormalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1097	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  compiler,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  compiler,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  compiler,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1098	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test,  filename);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  a$$$module$test,  filename);	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1099	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  modules$test,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  modules$test,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  modules$test,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1100	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module),  module);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module),  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(module),  module);	  return    toModuleName(module,    normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1101	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  sourceFilename);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  sourceFilename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  sourceFilename);	  return    toModuleName(module,    normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1102	[BUG]  [BUGGY]  return  toModuleName(compiler,  normalizeSourceName(filename),  module);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(compiler,  normalizeSourceName(filename),  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(compiler,  normalizeSourceName(filename),  module);	  return    toModuleName(module,    normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1103	[BUG]  [BUGGY]  ||(modulename!=  null  &&  modulename.length()  >  0)||(modulename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(modulename!=  null  &&  modulename.length()  >  0)||(modulename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(modulename!=  null  &&  modulename.length()  >  0)||(modulename  ==  null  &&  filename.length()  >  0))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1104	[BUG]  [BUGGY]  ||(modulename  ==  null  &&  modulename.length()  >  0)||(modulename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(modulename  ==  null  &&  modulename.length()  >  0)||(modulename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(modulename  ==  null  &&  modulename.length()  >  0)||(modulename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1105	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  sourceName,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    sourceName,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
1106	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  sourceName);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  sourceName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  sourceName);	  return    toModuleName(normalizeSourceName(filename),    sourceName,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
1107	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  guessCJSModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  guessCJSModuleName(filename);  }	  if(filename    ==    null)    {    return    guessCJSModuleName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1108	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.equals( " ")))  {  return  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.equals( " ")))  {  return  guessCJSModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.equals( " ")))  {  return  guessCJSModuleName(filename);  }	  if(filename    ==    null)    {    return    guessCJSModuleName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1109	[BUG]  [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  ==  null  &&  filename.length()  >  0))  {  return  guessCJSModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  ==  null  &&  filename.length()  >  0))  {  return  guessCJSModuleName(filename);  }	  if(filename    ==    null)    {    return    guessCJSModuleName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1110	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  guessCJSModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  guessCJSModuleName(filename);  }	  if(filename    ==    null)    {    return    guessCJSModuleName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1111	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  compiler);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  compiler);	  return    toModuleName(modulename,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1112	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  scriptNodeCount);	  return    toModuleName(modulename,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1113	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  a$$);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  a$$);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  a$$);	  return    toModuleName(modulename,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1114	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1115	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  normalizeSourceName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  normalizeSourceName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module!=  normalizeSourceName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1116	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1117	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1118	[BUG]  [BUGGY]  if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1119	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1120	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&!module$test)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&!module$test)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&!module$test)  {  return  toModuleName(normalizeFilename(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1121	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1122	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    module);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1123	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  compiler),  junit.framework,  module);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  compiler),  junit.framework,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  compiler),  junit.framework,  module);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    module);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1124	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(filename,  normalizeSourceName(module));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(filename,  normalizeSourceName(module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(filename,  normalizeSourceName(module));  }	  return    toModuleName(filename,    normalizeSourceName(module));    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1125	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module),  module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module),  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(module),  module$test);	  return    toModuleName(filename,    normalizeSourceName(module));    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1126	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(module),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(filename,    normalizeSourceName(module));    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1127	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(module),  a$$module$test);	  return    toModuleName(filename,    normalizeSourceName(module));    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1128	[BUG]  [BUGGY]  if(modulename!=  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null)  {  return  toModuleName(filename,  normalizeSourceName(modulename));  }  else  {  throw  new  IllegalStateException( " ");  }	  return    toModuleName(filename,    normalizeSourceName(modulename));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1129	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(module,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
1130	[BUG]  [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module),  compiler);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(filename,  normalizeSourceName(module),  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(filename,  normalizeSourceName(module),  compiler);	  return    toModuleName(module,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
1131	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  module$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  module$test,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename,    module),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1132	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  compiler,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  compiler,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  compiler,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename,    module),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1133	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  compiler),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  compiler),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  compiler),  a$$module$test);	  return    toModuleName(normalizeSourceName(filename,    module),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1134	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test,  compiler);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test,  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test,  compiler);	  return    toModuleName(normalizeSourceName(filename,    module),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1135	[BUG]  [BUGGY]  ||  filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1136	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1137	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1138	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeModuleName(filename),  module);  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1139	[BUG]  [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||!guessCJSModuleName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(moduleName    ==    null    ||!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
1140	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  compiler,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(modulename,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
1141	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  module);	  return    toModuleName(modulename,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
1142	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1143	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename)+  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename)+  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename)+  1);	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1144	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename  +  1));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename  +  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  guessCJSModuleName(filename  +  1));	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1145	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.equals( ". ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.equals( ". ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.equals( ". ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.equals(   "   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1146	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(guessCJSModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(guessCJSModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1147	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(guessCJSModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(guessCJSModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1148	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.startsWith( ".js "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.startsWith( ".js "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.startsWith( ".js "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1149	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename,  module),  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename,  module),  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename,  module),  guessCJSModuleName);	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1150	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename,  module),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename,  module),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename,  module),  a$$module$test);	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1151	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename,  module),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename,  module),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename,  module),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1152	[BUG]  [BUGGY]  return  normalizeModuleName(filename,  module,  guessCJSModuleName));  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  normalizeModuleName(filename,  module,  guessCJSModuleName));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  normalizeModuleName(filename,  module,  guessCJSModuleName));	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1153	[BUG]  [BUGGY]  return  normalizeModuleName(filename,  module$test));  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  normalizeModuleName(filename,  module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  normalizeModuleName(filename,  module$test));	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1154	[BUG]  [BUGGY]  if(module!=  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1155	[BUG]  [BUGGY]  if(filename!=  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1156	[BUG]  [BUGGY]  if(!isModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1157	[BUG]  [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1158	[BUG]  [BUGGY]  if(filename  ==  null)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1159	[BUG]  [BUGGY]  if(filename.endsWith( ".js "))  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".js "))  {  var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js "))  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1160	[BUG]  [BUGGY]  if(!filename.endsWith( ".js "))  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!filename.endsWith( ".js "))  {  var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!filename.endsWith( ".js "))  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1161	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".java "))  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1162	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1163	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1164	[BUG]  [BUGGY]  if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1165	[BUG]  [BUGGY]  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	&&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1166	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&!module$test)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&!module$test)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&!module$test)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1167	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&!module.isSupported())  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&!module.isSupported())  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&!module.isSupported())  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1168	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1169	[BUG]  [BUGGY]  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	&&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1170	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  reportDependencies,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    compiler,    reportDependencies);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1171	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  EXPORTS);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  EXPORTS);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  EXPORTS);	  return    toModuleName(normalizeSourceName(filename),    compiler,    reportDependencies);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1172	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module$test,  scriptNodeCount);	  return    toModuleName(module,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1173	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  compiler);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module$test,  compiler);	  return    toModuleName(module,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1174	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  a$$);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  a$$);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module$test,  a$$);	  return    toModuleName(module,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1175	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  filename);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module$test,  filename);	  return    toModuleName(module,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1176	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1177	[BUG]  [BUGGY]  return  normalizeModuleName(filename,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  normalizeModuleName(filename,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  normalizeModuleName(filename,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeModuleName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1178	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeModuleName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1179	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX,  filename);	  return    toModuleName(normalizeModuleName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1180	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  filename);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  filename);	  return    toModuleName(normalizeModuleName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1181	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  module,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  module,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  module,  guessCJSModuleName(filename));	  return    toModuleName(normalizeFilename(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1182	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename)+  1);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename)+  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename)+  1);	  return    toModuleName(normalizeFilename(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1183	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename  +  1));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename  +  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename  +  1));	  return    toModuleName(normalizeFilename(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1184	[BUG]  [BUGGY]  if(module!=  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1185	[BUG]  [BUGGY]  if(isModuleName(filename)||!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(isModuleName(filename)||!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(isModuleName(filename)||!isModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1186	[BUG]  [BUGGY]  if(!isModuleName(filename))  {  return  normalizeModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename))  {  return  normalizeModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename))  {  return  normalizeModuleName(filename);  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1187	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1188	[BUG]  [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }	  ||!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1189	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  compiler);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  compiler);	  return    toModuleName(normalizeFilename(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1190	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  module,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  module,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  module,  guessCJSModuleName);	  return    toModuleName(normalizeFilename(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1191	[BUG]  [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	Filename  filename  =  filename.substring(0,  filename.length()  -  3);	  if(filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    3);    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
1192	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename),  module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename),  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename),  module$test);  }	  if(filename!=    null)    {    return    toModuleName(modulePrefix,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1193	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulePrefix,  NormalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulePrefix,  NormalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modulePrefix,  NormalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modulePrefix,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1194	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  guessCJSModuleName);	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1195	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleNameSEPARATOR);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleNameSEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  guessCJSModuleNameSEPARATOR);	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1196	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  baseUri);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  baseUri);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  baseUri);	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1197	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  true);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  true);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  true);	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1198	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1199	[BUG]  [BUGGY]  return  normalizeModuleName(filename,  module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  normalizeModuleName(filename,  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  normalizeModuleName(filename,  module$test);	  return    normalizeModuleName(filename,    module);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1200	[BUG]  [BUGGY]  module  =  normalizeModuleName(filename,  module);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  module  =  normalizeModuleName(filename,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	module  =  normalizeModuleName(filename,  module);	  return    normalizeModuleName(filename,    module);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1201	[BUG]  [BUGGY]  filename  =  normalizeModuleName(filename,  module);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename  =  normalizeModuleName(filename,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename  =  normalizeModuleName(filename,  module);	  return    normalizeModuleName(filename,    module);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1202	[BUG]  [BUGGY]  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
1203	[BUG]  [BUGGY]  if(filename.endsWith( "module$test "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( "module$test "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( "module$test "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
1204	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  compiler);  }	  return    toModuleName(normalizeSourceName(filename,    module),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1205	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  compiler,  a$$1);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  compiler,  a$$1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  compiler,  a$$1);	  return    toModuleName(normalizeSourceName(filename,    module),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1206	[BUG]  [BUGGY]  null  var  modules$test=  {  }  ;var  a$$module$test=  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  null  var  modules$test=  {  }  ;var  a$$module$test=  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	null  var  modules$test=  {  }  ;var  a$$module$test=	  var    modules$test=    {    }    ;var    a$$module$test=    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1207	[BUG]  [BUGGY]  ||  module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module    ==    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1208	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  baseUri);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  baseUri);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  baseUri);	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1209	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(modifySourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1210	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".java ")))  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".java ")))  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( ".java ")))  {  return  toModuleName(modifySourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1211	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1212	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulename,  NormalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulename,  NormalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modulename,  NormalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1213	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName);  }	  if(filename!=    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1214	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  compiler.guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  compiler.guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  compiler.guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1215	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename  +  1));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename  +  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename  +  1));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1216	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename).toLowerCase());  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename).toLowerCase());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename).toLowerCase());	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1217	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  compiler),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  compiler),  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  compiler),  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1218	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename)+  1);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename)+  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename)+  1);	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1219	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  a$$modulePrefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  a$$modulePrefix);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  a$$modulePrefix);	  return    toModuleName(module,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
1220	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix,  guessCJSModuleName);	  return    toModuleName(module,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
1221	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModulePrefix);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModulePrefix);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModulePrefix);	  return    toModuleName(module,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
1222	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  compiler.getModulePrefix());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  compiler.getModulePrefix());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  compiler.getModulePrefix());	  return    toModuleName(module,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
1223	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    compiler,    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1224	[BUG]  [BUGGY]  return  toModuleName(sourceName,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(sourceName,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(sourceName,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1225	[BUG]  [BUGGY]  return  toModuleName(name,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(name,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(name,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1226	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  EXPORTS);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  EXPORTS);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  EXPORTS);	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1227	[BUG]  [BUGGY]  return  toModuleName(name,  normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(name,  normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(name,  normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1228	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1229	[BUG]  [BUGGY]  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	&&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1230	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1231	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1232	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1233	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  a$$$module$test,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  a$$$module$test,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  a$$$module$test,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1234	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  compiler,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  compiler,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  compiler,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1235	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test,  module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test,  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$$module$test,  module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1236	[BUG]  [BUGGY]  ||(moduleName!=  null  &&  moduleName.endsWith( ".js ")))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(moduleName!=  null  &&  moduleName.endsWith( ".js ")))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(moduleName!=  null  &&  moduleName.endsWith( ".js ")))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(moduleName!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
1237	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  sourceName,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  sourceName,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  sourceName,  guessCJSModuleName(filename));	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1238	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename  +  1));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename  +  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename  +  1));	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1239	[BUG]  [BUGGY]  if(module!=  null  &&!guessCJSModuleName(filename)||  module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null  &&!guessCJSModuleName(filename)||  module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null  &&!guessCJSModuleName(filename)||  module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null    &&!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
1240	[BUG]  [BUGGY]  if(module!=  null  &&!guessCJSModuleName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null  &&!guessCJSModuleName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null  &&!guessCJSModuleName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null    &&!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
1241	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test,  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test,  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test,  guessCJSModuleName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1242	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1243	[BUG]  [BUGGY]  if(module  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1244	[BUG]  [BUGGY]  if(filename  ==  null)  {  compiler.reportCodeChange();  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  compiler.reportCodeChange();  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  compiler.reportCodeChange();  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1245	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1246	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1247	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module,    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1248	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
1249	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  EXPORTS);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  EXPORTS);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  EXPORTS);	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
1250	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  EXPORTS);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  EXPORTS);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  EXPORTS);	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
1251	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$);	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
1252	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$1));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$1));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName));    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1253	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName,  a$$));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName));    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1254	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test));  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName));    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1255	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  scriptNodeCount);	  return    toModuleName(normalizeSourceName(filename),    module,    compiler);    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
1256	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  compiler,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    module,    compiler);    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
1257	[BUG]  [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
1258	[BUG]  [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
1259	[BUG]  [BUGGY]  if(filename  ==  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
1260	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  builder,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  builder,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  builder,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1261	[BUG]  [BUGGY]  ||(filename  >=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  >=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  >=  null  &&  filename.length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
1262	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  module$test,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1263	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  modules,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  modules,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  modules,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1264	[BUG]  [BUGGY]  filename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null    ||    filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
1265	[BUG]  [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1266	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1267	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module),  a$$module$test);  }  else  {  throw  new  IllegalStateException( " ");  }	  return    toModuleName(normalizeSourceName(filename,    module),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1268	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  module$test);	  return    toModuleName(normalizeSourceName(filename,    module),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1269	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
1270	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    if(filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
1271	[BUG]  [BUGGY]  if(moduleName!=  null  &&  module!=  normalizeSourceName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null  &&  module!=  normalizeSourceName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null  &&  module!=  normalizeSourceName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(moduleName!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
1272	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
1273	[BUG]  [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
1274	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
1275	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(modifySourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1276	[BUG]  [BUGGY]  if(module  ==  null)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1277	[BUG]  [BUGGY]  if(filename  >=  null)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  >=  null)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  >=  null)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1278	[BUG]  [BUGGY]  if(filename!=  null  &&  module!=  normalizeSourceName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  &&  module!=  normalizeSourceName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&  module!=  normalizeSourceName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1279	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1280	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1281	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1282	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1283	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module,  compiler);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module,  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module,  compiler);	  return    toModuleName(normalizeSourceName(filename),    module,    compiler);    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
1284	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1285	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.ModuleSupplier:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.ModuleSupplier:  goog.provide( "module$test ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.ModuleSupplier:  goog.provide( "module$test ");  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1286	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.ModuleSupplier:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.ModuleSupplier:  goog.provide( "module$test ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.ModuleSupplier:  goog.provide( "module$test ");  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1287	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1288	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1289	[BUG]  [BUGGY]  if(modulename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(modulename    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1290	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  module,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  module,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  module,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    compiler,    module);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1291	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    module);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1292	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  module);  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    module);    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1293	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  sourceName);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  sourceName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  sourceName);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX    +    filename);    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1294	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  module);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX  +  filename,  module);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX    +    filename);    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1295	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1296	[BUG]  [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||!guessCJSModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1297	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test "));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test "));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test "));  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1298	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  goog.provide( "module$test   ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  goog.provide( "module$test   ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  goog.provide( "module$test   ");  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1299	[BUG]  [BUGGY]  return  toModuleName(defaultModuleName(filename),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(defaultModuleName(filename),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(defaultModuleName(filename),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeModuleName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1300	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX,  module);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  DEFAULT_FILENAME_PREFIX,  module);	  return    toModuleName(normalizeModuleName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1301	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modulePrefix,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1302	[BUG]  [BUGGY]  if(modulePrefix  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulePrefix  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulePrefix  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulePrefix,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modulePrefix,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1303	[BUG]  [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1304	[BUG]  [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1305	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1306	[BUG]  [BUGGY]  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1307	[BUG]  [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1308	[BUG]  [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1309	[BUG]  [BUGGY]  File  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  File  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	File  filename  =  filename.substring(0,  filename.length()  -  2);	  if(!filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1310	[BUG]  [BUGGY]  File  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  File  filename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	File  filename  =  filename.substring(0,  filename.length());	  if(!filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1311	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1312	[BUG]  [BUGGY]  if(modulename.length()  >  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename.length()  >  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename.length()  >  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename.length()    ==    0)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1313	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(modulename,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1314	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  filename);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  module$test,  filename);	  return    toModuleName(modulename,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1315	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName));    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1316	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  module$test));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  module$test));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName));    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1317	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  baseUri));  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  baseUri));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  baseUri));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName));    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1318	[BUG]  [BUGGY]  if(module$test!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module$test,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1319	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module  <=  normalizeSourceName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module  <=  normalizeSourceName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module  <=  normalizeSourceName(filename))  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module$test,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1320	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module.isModule())  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module.isModule())  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module.isModule())  {  return  toModuleName(module$test,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module$test,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1321	[BUG]  [BUGGY]  if(!moduleNames.contains(filename))  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!moduleNames.contains(filename))  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!moduleNames.contains(filename))  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }	  return    toModuleName(sourceName,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1322	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }	  return    toModuleName(sourceName,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1323	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(sourceName,  normalizeSourceName(filename));  }	  return    toModuleName(sourceName,    normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1324	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1325	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1326	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  baseUri);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  baseUri);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  baseUri);	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1327	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1328	[BUG]  [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1329	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
1330	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(module,  filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(module,  filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeSourceName(module,  filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
1331	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  module);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  module);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1332	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  scriptNodeCount);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1333	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  true);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  true);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_SEPARATOR,  true);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1334	[BUG]  [BUGGY]  return  toModuleName(moduleName,  normalizeModuleName(filename),  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(moduleName,  normalizeModuleName(filename),  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(moduleName,  normalizeModuleName(filename),  a$$module$test);	  return    toModuleName(normalizeModuleName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1335	[BUG]  [BUGGY]  File  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  File  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	File  filename  =  filename.substring(0,  filename.length()  -  1);	  if(!filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
1336	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1337	[BUG]  [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1338	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1339	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1340	[BUG]  [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1341	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
1342	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1343	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1344	[BUG]  [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1345	[BUG]  [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1346	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX));	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1347	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  sourceFilename),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  sourceFilename),  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  sourceFilename),  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename,    sourceFilename));    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1348	[BUG]  [BUGGY]  if(module!=  MODULE_NAME_SEPARATOR  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  MODULE_NAME_SEPARATOR  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  MODULE_NAME_SEPARATOR  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename)&&    module!=    MODULE_NAME_SEPARATOR)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
1349	[BUG]  [BUGGY]  if(filename.length()  <=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  <=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  <=  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename.length()    >=    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1350	[BUG]  [BUGGY]  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename.length()    >=    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1351	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1352	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1353	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeFilename(filename),  module);  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1354	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(moduleName,  normalizeSourceName(filename));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(moduleName,  normalizeSourceName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(moduleName,  normalizeSourceName(filename));	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
1355	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(moduleName(filename));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(moduleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(moduleName(filename));	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
1356	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  builder,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  builder,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  builder,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
1357	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  &&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&  filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null    ||    filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
1358	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.startsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename    ==    null    ||    filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
1359	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeFilename(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1360	[BUG]  [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1361	[BUG]  [BUGGY]  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1362	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1363	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1364	[BUG]  [BUGGY]  ||  filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  3);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  3);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.endsWith( ".js "))  {  filename  =  filename.substring(0,  filename.length()  -  3);  }	  if(filename.endsWith(   ".js   "))    {    filename    =    filename.substring(0,    filename.length()    -    3);    }    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
1365	[BUG]  [BUGGY]  if(filename.endsWith( ".js "))  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".js "))  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js "))  {  return  toModuleName(modifySourceName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1366	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(modifySourceName(filename),  module);  }	  if(filename.length()    ==    0)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1367	[BUG]  [BUGGY]  if(module.isModule())  {  return  toModuleName(module,  normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module.isModule())  {  return  toModuleName(module,  normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module.isModule())  {  return  toModuleName(module,  normalizeSourceName(filename),  module);  }	  return    toModuleName(module,    normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1368	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  File.separatorChar  +  filename);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  File.separatorChar  +  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename)+  File.separatorChar  +  filename);	  return    toModuleName(module,    normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1369	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module.sourceName);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module.sourceName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module.sourceName);	  return    toModuleName(module,    normalizeSourceName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1370	[BUG]  [BUGGY]  if(modulename!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1371	[BUG]  [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1372	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename,  module$test));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename,  module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName(filename,  module$test));	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1373	[BUG]  [BUGGY]  filename.length()  <=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  <=  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  <=  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1374	[BUG]  [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1375	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$$module$test.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$$module$test.toLowerCase());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$$module$test.toLowerCase());	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1376	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  guessCJSModuleName,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(modulename,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1377	[BUG]  [BUGGY]  if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1378	[BUG]  [BUGGY]  if(!isModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1379	[BUG]  [BUGGY]  if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR  ||  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR  ||  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR  ||  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1380	[BUG]  [BUGGY]  if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1381	[BUG]  [BUGGY]  if(!isModuleName(filename)&&  module!=  compiler)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename)&&  module!=  compiler)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename)&&  module!=  compiler)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1382	[BUG]  [BUGGY]  if(module$test!=  null)  {  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    if(filename.startsWith(   "module$test   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1383	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(filename.startsWith( "module$test   "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename.startsWith(   "module$test   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1384	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  baseUri());  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  baseUri());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  baseUri());	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName());    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
1385	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  builder,  guessCJSModuleName());  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  builder,  guessCJSModuleName());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  builder,  guessCJSModuleName());	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName());    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
1386	[BUG]  [BUGGY]  ||(filename  ==  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  ==  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  ==  null  &&  filename.equals( " ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.equals(   "   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1387	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1388	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  processCommonJsModulesCallback);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  processCommonJsModulesCallback);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  processCommonJsModulesCallback);	  return    toModuleName(normalizeSourceName(filename),    compiler,    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1389	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  compiler,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");  }	  return    toModuleName(normalizeSourceName(filename),    compiler,    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
1390	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  modules,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  modules,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  modules,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1391	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1392	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  }	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1393	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_PREFIX,  module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_PREFIX,  module$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_PREFIX,  module$test,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1394	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler);  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
1395	[BUG]  [BUGGY]  if(a$$module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(a$$module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(a$$module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
1396	[BUG]  [BUGGY]  ||  handleModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  handleModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  handleModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1397	[BUG]  [BUGGY]  ||  translateCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  translateCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  translateCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1398	[BUG]  [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  if(!guessCJSModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  if(!guessCJSModuleName(filename)&&  module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null)    {    if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1399	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  baseUri,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  baseUri,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  baseUri,  guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1400	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  testCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  testCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  testCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1401	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler.guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  compiler.guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  compiler.guessCJSModuleName(filename));	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1402	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix,  compiler);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix,  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix,  compiler);	  return    toModuleName(modulename,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1403	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix,  error);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix,  error);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  modulePrefix,  error);	  return    toModuleName(modulename,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1404	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(guessCJSModuleName(filename));  }	  if(filename!=    null    &&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1405	[BUG]  [BUGGY]  if(module!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(filename!=    null    &&    filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1406	[BUG]  [BUGGY]  if(modulename!=  null  &&  module!=  normalizeSourceName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null  &&  module!=  normalizeSourceName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null  &&  module!=  normalizeSourceName(filename,  module))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(modulename!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1407	[BUG]  [BUGGY]  if(modulePrefix!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulePrefix!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulePrefix!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modulePrefix,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1408	[BUG]  [BUGGY]  return  normalizeModuleName(filename,  module,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  normalizeModuleName(filename,  module,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  normalizeModuleName(filename,  module,  guessCJSModuleName(filename));	  return    normalizeModuleName(filename,    module);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1409	[BUG]  [BUGGY]  if(moduleName  ==  null  ||  normalizeFilename(filename))  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||  normalizeFilename(filename))  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||  normalizeFilename(filename))  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }	  return    toModuleName(moduleName,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
1410	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1411	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  errorReports);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  compiler,  errorReports);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  compiler,  errorReports);	  return    toModuleName(normalizeSourceName(filename),    compiler,    reportDependencies);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1412	[BUG]  [BUGGY]  if(moduleName  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(moduleName    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
1413	[BUG]  [BUGGY]  if(moduleName  ==  null  ||  moduleName.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||  moduleName.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||  moduleName.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(moduleName    ==    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
1414	[BUG]  [BUGGY]  if(filename.endsWith( ".js "))  {  var  module$test=  normalizeSourceName(filename,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".js "))  {  var  module$test=  normalizeSourceName(filename,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js "))  {  var  module$test=  normalizeSourceName(filename,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1415	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module	  var    module$test=    {    }    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1416	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.module,  module);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.module,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.module,  module);	  return    toModuleName(normalizeSourceName(filename),    junit.module);    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
1417	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(moduleName,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  >  0)  {  return  toModuleName(moduleName,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  >  0)  {  return  toModuleName(moduleName,  normalizeSourceName(filename));  }	  if(filename.length()    >    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1418	[BUG]  [BUGGY]  if(module$test  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1419	[BUG]  [BUGGY]  if(module$test  ==  null  ||  module  >  filename)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null  ||  module  >  filename)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null  ||  module  >  filename)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1420	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module)).toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module)).toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename,  module)).toLowerCase();  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1421	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  module);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeFilename(filename),  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeFilename(filename),  module);	  return    toModuleName(normalizeFilename(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1422	[BUG]  [BUGGY]  return  toModuleName(compiler,  normalizeFilename(filename),  module);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(compiler,  normalizeFilename(filename),  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(compiler,  normalizeFilename(filename),  module);	  return    toModuleName(normalizeFilename(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1423	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  module,  compiler);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  module,  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  module,  compiler);	  return    toModuleName(normalizeFilename(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1424	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename,  module),  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename,  module),  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename,  module),  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeFilename(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1425	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  module$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  module$test,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1426	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1427	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  test,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1428	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test,  compiler);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test,  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  a$$module$test,  compiler);	  return    toModuleName(normalizeSourceName(filename),    module,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1429	[BUG]  [BUGGY]  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1430	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1431	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  compiler)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  compiler)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module!=  compiler)  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1432	[BUG]  [BUGGY]  if(!moduleNames.contains(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!moduleNames.contains(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!moduleNames.contains(filename))  {  return  toModuleName(normalizeSourceName(filename),  compiler);  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename),    compiler);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1433	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1434	[BUG]  [BUGGY]  if(module.isModule())  {  return  toModuleName(module,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module.isModule())  {  return  toModuleName(module,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module.isModule())  {  return  toModuleName(module,  normalizeFilename(filename));  }	  return    toModuleName(module,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1435	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename),    sourceName,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
1436	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX,  module);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX,  module);	  return    toModuleName(normalizeSourceName(filename),    sourceName,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
1437	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX,  filename);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  sourceName,  DEFAULT_FILENAME_PREFIX,  filename);	  return    toModuleName(normalizeSourceName(filename),    sourceName,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
1438	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename));  }	  if(filename!=    null    ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
1439	[BUG]  [BUGGY]  if(moduleName!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(moduleName    ==    null    ||!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
1440	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeFilename(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1441	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(moduleName,  normalizeFilename(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1442	[BUG]  [BUGGY]  return  toModuleName(normalizeModuleName(filename),  module,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeModuleName(filename),  module,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeModuleName(filename),  module,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeModuleName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1443	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename),  module);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename),  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeModuleName(filename),  module);	  return    toModuleName(normalizeModuleName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1444	[BUG]  [BUGGY]  return  toModuleName(compiler,  normalizeModuleName(filename),  module);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(compiler,  normalizeModuleName(filename),  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(compiler,  normalizeModuleName(filename),  module);	  return    toModuleName(normalizeModuleName(filename),    module);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1445	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1446	[BUG]  [BUGGY]  if(moduleName.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1447	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)/  module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)/  module,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename)/  module,  a$$module$test);	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1448	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  modules,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  modules,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  modules,  a$$module$test);	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1449	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  File.separatorChar  +  filename,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename)+  File.separatorChar  +  filename,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename)+  File.separatorChar  +  filename,  a$$module$test);	  return    toModuleName(module,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1450	[BUG]  [BUGGY]  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	module$test=  {  }  else  if(filename.endsWith( ".js "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1451	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js ")||  filename.endsWith( ".java "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( ".js ")||  filename.endsWith( ".java "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( ".js ")||  filename.endsWith( ".java "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1452	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(!filename.endsWith( ".js "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(!filename.endsWith( ".js "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(!filename.endsWith( ".js "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1453	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_PREFIX,  module$test,  a$$$module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_PREFIX,  module$test,  a$$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  MODULE_NAME_PREFIX,  module$test,  a$$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    a$$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1454	[BUG]  [BUGGY]  if(module  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1455	[BUG]  [BUGGY]  if(module.isModule())  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module.isModule())  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module.isModule())  {  if(filename  ==  null)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1456	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1457	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test   ");var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
1458	[BUG]  [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  var  module$test=  {  }  else  if(filename.endsWith( ".js "))  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test	  var    module$test=    {    }    else    if(filename.endsWith(   ".js   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
1459	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  modules,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  modules,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  modules,  a$$module$test);  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1460	[BUG]  [BUGGY]  if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1461	[BUG]  [BUGGY]  if(moduleName  ==  null  ||  normalizeModuleName(filename))  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||  normalizeModuleName(filename))  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||  normalizeModuleName(filename))  {  return  toModuleName(moduleName,  normalizeModuleName(filename));  }	  return    toModuleName(moduleName,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
1462	[BUG]  [BUGGY]  if(modulename  ==  null  ||  moduleName.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null  ||  moduleName.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||  moduleName.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1463	[BUG]  [BUGGY]  if(modulename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||  filename.endsWith( ".js "))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1464	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module$test);	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
1465	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName);	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
1466	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module);	  return    toModuleName(module,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
1467	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(module,  normalizeModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1468	[BUG]  [BUGGY]  if(filename.length()  >=  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  >=  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  >=  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1469	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    module,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1470	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1471	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  DEFAULT_PROTOTYPE_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  DEFAULT_PROTOTYPE_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  DEFAULT_FILENAME_PREFIX,  DEFAULT_PROTOTYPE_SEPARATOR);	  return    toModuleName(normalizeSourceName(filename),    module,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1472	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1473	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  a$$module$test);  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1474	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX,  filename);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX,  filename);	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
1475	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
1476	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename,    module),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
1477	[BUG]  [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1478	[BUG]  [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null)  {  return  toModuleName(normalizeModuleName(filename,  module));  }	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1479	[BUG]  [BUGGY]  return  normalizeModuleName(filename,  module),  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  normalizeModuleName(filename,  module),  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  normalizeModuleName(filename,  module),  guessCJSModuleName(filename));	  return    toModuleName(normalizeModuleName(filename,    module));    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1480	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  var  module$test=  normalizeSourceName(filename,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".java "))  {  var  module$test=  normalizeSourceName(filename,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".java "))  {  var  module$test=  normalizeSourceName(filename,  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename.endsWith(   ".java   "))    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1481	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  module);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  module);	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1482	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  filename);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  filename);	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1483	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  DEFAULT_FILENAME_SEPARATOR);	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1484	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  DEFAULT_FILENAME_PREFIX,  a$$module$test);	  return    toModuleName(normalizeFilename(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1485	[BUG]  [BUGGY]  if(filename.length()  <=  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  <=  0)  {  return  toModuleName(guessCJSModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  <=  0)  {  return  toModuleName(guessCJSModuleName(filename));  }	  if(filename.length()    ==    0)    {    return    toModuleName(guessCJSModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1486	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.length()  ==  0)  {  return  toModuleName(guessCJSModuleName(filename),  module);  }	  if(filename.length()    ==    0)    {    return    toModuleName(guessCJSModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1487	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  MODULE_NAME_SEPARATOR);	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1488	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  filename);	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1489	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  guessCJSModuleName);	  return    toModuleName(modulename,    normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1490	[BUG]  [BUGGY]  if(module  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null    &&!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
1491	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler.reportCodeChange());  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler.reportCodeChange());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module,  compiler.reportCodeChange());  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1492	[BUG]  [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1493	[BUG]  [BUGGY]  if(module  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1494	[BUG]  [BUGGY]  if(filename  ==  null  ||  module!=  normalizeSourceName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  module!=  normalizeSourceName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  module!=  normalizeSourceName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(filename    ==    null)    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1495	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  modules$test,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  modules$test,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  modules$test,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1496	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$module$test.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$module$test.toLowerCase());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$module$test.toLowerCase());	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1497	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$module$test,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$module$test,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module$test,  module$test,  a$$module$test,  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename),    module$test,    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1498	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix,  compiler);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix,  compiler);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  modulePrefix,  compiler);	  return    toModuleName(module,    normalizeSourceName(filename),    modulePrefix);    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
1499	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module,  guessCJSModuleName);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module,  guessCJSModuleName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module,  guessCJSModuleName);	  return    toModuleName(normalizeSourceName(filename),    module,    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
1500	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(modifySourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(modifySourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(modifySourceName(filename));  }	  if(filename!=    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1501	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(modifySourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(modifySourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(modifySourceName(filename),  module);  }	  if(filename!=    null)    {    return    toModuleName(modifySourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1502	[BUG]  [BUGGY]  if(moduleName!=  null  ||  moduleName.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null  ||  moduleName.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null  ||  moduleName.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(moduleName!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
1503	[BUG]  [BUGGY]  if(moduleName!=  null  &&  moduleName.length()  >  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null  &&  moduleName.length()  >  0)  {  return  toModuleName(normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null  &&  moduleName.length()  >  0)  {  return  toModuleName(normalizeModuleName(filename));  }	  if(moduleName!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
1504	[BUG]  [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(modulename));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  toModuleName(normalizeModuleName(modulename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  toModuleName(normalizeModuleName(modulename));  }	  if(moduleName!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
1505	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  modules,  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  modules,  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  modules,  a$$module$test);  }	  if(module$test!=    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1506	[BUG]  [BUGGY]  if(modulename!=  null  &&  moduleName.length()  >  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null  &&  moduleName.length()  >  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null  &&  moduleName.length()  >  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename!=    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1507	[BUG]  [BUGGY]  if(modulename!=  null  &&  modulename.length()  >  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null  &&  modulename.length()  >  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null  &&  modulename.length()  >  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename!=    null)    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1508	[BUG]  [BUGGY]  var  module$test=  {  }  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  ;	  var    module$test=    {    }    if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1509	[BUG]  [BUGGY]  var  module$test=  {  }  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  if(filename!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1510	[BUG]  [BUGGY]  var  module$test=  {  }  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  if(module!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ");var  module$test=  {  }	  var    module$test=    {    }    if(filename!=    null)    {    return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1511	[BUG]  [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||!guessCJSModuleName(filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1512	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1513	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  toModuleName(module,  filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  toModuleName(module,  filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  toModuleName(module,  filename))  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1514	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename))  {  return  normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename))  {  return  normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename))  {  return  normalizeSourceName(filename,  module));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1515	[BUG]  [BUGGY]  if(modulename!=  null  &&  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename!=  null  &&  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename!=  null  &&  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null    ||    normalizeSourceName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
1516	[BUG]  [BUGGY]  if(modulename  ==  null  ||  normalizeSourceName(filename))  {  return  moduleName(modulename,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null  ||  normalizeSourceName(filename))  {  return  moduleName(modulename,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||  normalizeSourceName(filename))  {  return  moduleName(modulename,  normalizeSourceName(filename));  }	  if(modulename    ==    null    ||    normalizeSourceName(filename))    {    return    toModuleName(modulename,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
1517	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.trim().length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.trim().length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.trim().length()  >  0))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1518	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(moduleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(moduleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  toModuleName(moduleName(filename));  }	  ||(filename!=    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1519	[BUG]  [BUGGY]  if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1520	[BUG]  [BUGGY]  if(!isModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename)&&  filename.length()  >  0)  {  return  toModuleName(normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1521	[BUG]  [BUGGY]  if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR  ||  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR  ||  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename)&&  module!=  MODULE_NAME_SEPARATOR  ||  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1522	[BUG]  [BUGGY]  if(!isModuleName(filename)&&  toModuleName(modulename))  {  return  toModuleName(normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!isModuleName(filename)&&  toModuleName(modulename))  {  return  toModuleName(normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!isModuleName(filename)&&  toModuleName(modulename))  {  return  toModuleName(normalizeFilename(filename));  }	  if(!isModuleName(filename))    {    return    toModuleName(normalizeFilename(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1523	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX,  module);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX,  module);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
1524	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX,  module$test);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX,  module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  DEFAULT_FILENAME_PREFIX,  module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    DEFAULT_FILENAME_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
1525	[BUG]  [BUGGY]  if(module!=  null  &&  module.isModule())  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null  &&  module.isModule())  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null  &&  module.isModule())  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1526	[BUG]  [BUGGY]  if(modulename  ==  null  ||  normalizeModuleName(filename))  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null  ||  normalizeModuleName(filename))  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||  normalizeModuleName(filename))  {  return  toModuleName(modulename,  normalizeModuleName(filename));  }	  return    toModuleName(modulename,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1527	[BUG]  [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename),  modulePrefix);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(modulename,  normalizeModuleName(filename),  modulePrefix);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(modulename,  normalizeModuleName(filename),  modulePrefix);	  return    toModuleName(modulename,    normalizeModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1528	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.framework,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  junit.framework,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  junit.framework,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename,    module),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
1529	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  compiler,  junit.framework);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  compiler,  junit.framework);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  compiler,  junit.framework);	  return    toModuleName(normalizeSourceName(filename,    module),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
1530	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  this.junit.framework);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  this.junit.framework);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  this.junit.framework);	  return    toModuleName(normalizeSourceName(filename,    module),    junit.framework);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
1531	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module$test,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(module,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1532	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  error);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  module$test,  error);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  module$test,  error);	  return    toModuleName(module,    normalizeSourceName(filename),    module$test);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1533	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ".js "))  {  return  guessCJSModuleName(filename);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ".js "))  {  return  guessCJSModuleName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.endsWith( ".js "))  {  return  guessCJSModuleName(filename);  }	  if(filename    ==    null)    {    return    guessCJSModuleName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1534	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1535	[BUG]  [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module!=  null)  {  return  toModuleName(normalizeFilename(filename));  }  else  {  throw  new  IllegalStateException( " ");  }	  if(filename!=    null)    {    return    toModuleName(normalizeFilename(filename));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1536	[BUG]  [BUGGY]  if(modulename  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename),  compiler);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    compiler);    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
1537	[BUG]  [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( "java/lang/Object "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  var  module$test=  {  }  else  if(filename.endsWith( "java/lang/Object "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	var  module$test=  {  }  else  if(filename.endsWith( "java/lang/Object "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".java   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1538	[BUG]  [BUGGY]  module$test=  {  }  else  if(filename.endsWith( ".java "))  {  var  module$test=  {  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  module$test=  {  }  else  if(filename.endsWith( ".java "))  {  var  module$test=  {  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	module$test=  {  }  else  if(filename.endsWith( ".java "))  {  var  module$test=  {  }	  var    module$test=    {    }    else    if(filename.endsWith(   ".java   "))    {    var    module$test=    {    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1539	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename).toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename).toLowerCase());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename).toLowerCase());	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1540	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename,  module$test));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename,  module$test));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName(filename,  module$test));	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1541	[BUG]  [BUGGY]  &&  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  &&  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	&&  filename!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  ||    filename!=    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
1542	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  module,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    module);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1543	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  junit.framework,  module,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  junit.framework,  module,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(normalizeSourceName(filename),    junit.framework,    module);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1544	[BUG]  [BUGGY]  if(moduleName!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName!=  null  &&!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1545	[BUG]  [BUGGY]  if(module.isModule())  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module.isModule())  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module.isModule())  {  if(!guessCJSModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1546	[BUG]  [BUGGY]  if(module.hasModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module.hasModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module.hasModuleName(filename))  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1547	[BUG]  [BUGGY]  if(!guessCJSModuleName(filename)&&  module.isModule())  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(!guessCJSModuleName(filename)&&  module.isModule())  {  return  toModuleName(module,  normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(!guessCJSModuleName(filename)&&  module.isModule())  {  return  toModuleName(module,  normalizeSourceName(filename));  }	  if(!guessCJSModuleName(filename))    {    return    toModuleName(module,    normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1548	[BUG]  [BUGGY]  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  var  module$test=  {  }  ;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  var  module$test=  {  }  ;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  var  module$test=  {  }  ;  }	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1549	[BUG]  [BUGGY]  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  var  module$test=  {  }  ;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  var  module$test=  {  }  ;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename.endsWith( ".js ")||  filename.endsWith( ".js "))  {  var  module$test=  {  }  ;	  var    module$test=    {    }    ;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1550	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test "));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test "));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  module,  junit.framework.AssertionFailedError:  goog.provide( "module$test "));	  return    toModuleName(normalizeSourceName(filename),    module,    junit.framework.AssertionFailedError:    goog.provide(   "module$test       ");    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1551	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  junit.framework.AssertionFailedError:  goog.provide( "module$test ",  module$test);  }	  return    toModuleName(normalizeSourceName(filename),    junit.framework.AssertionFailedError:    goog.provide(   "module$test   ",    module$test);    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
1552	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  module);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename),  module);  }	  if(filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    module);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1553	[BUG]  [BUGGY]  &&  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  &&  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	&&  filename  ==  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  ||    filename    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1554	[BUG]  [BUGGY]  if(moduleName  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(moduleName    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
1555	[BUG]  [BUGGY]  if(moduleName  ==  null  ||  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(moduleName  ==  null  ||  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename,  module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(moduleName  ==  null  ||  module!=  MODULE_NAME_SEPARATOR)  {  return  toModuleName(normalizeSourceName(filename,  module));  }	  if(moduleName    ==    null)    {    return    toModuleName(normalizeSourceName(filename,    module));    }    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
1556	[BUG]  [BUGGY]  ||(filename  ==  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||(filename  ==  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||(filename  ==  null  &&  filename.endsWith( ".js ")))  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename!=    null    &&    filename.endsWith(   ".js   ")))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1557	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR,  module);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR,  module);	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1558	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR,  scriptNodeCount);	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1559	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  filename,  DEFAULT_FILENAME_SEPARATOR,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    filename,    DEFAULT_FILENAME_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1560	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test  ==  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
1561	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module$test!=  null)  {  return  toModuleName(normalizeSourceName(filename),  module$test);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(module$test    ==    null)    {    return    toModuleName(normalizeSourceName(filename),    a$$module$test);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
1562	[BUG]  [BUGGY]  ||  filename  ==  null  ||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename  ==  null  ||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename  ==  null  ||  filename.length()  >  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  ||(filename    ==    null    &&    filename.length()    >    0))    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
1563	[BUG]  [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  normalizeSourceName(filename),  guessCJSModuleName,  DEFAULT_FILENAME_PREFIX);	  return    toModuleName(module,    normalizeSourceName(filename),    guessCJSModuleName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1564	[BUG]  [BUGGY]  &&  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  &&  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	&&  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1565	[BUG]  [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(moduleName(filename));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  ||  filename.length()  ==  0)  {  return  toModuleName(moduleName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	||  filename.length()  ==  0)  {  return  toModuleName(moduleName(filename));  }	  ||    filename.length()    ==    0)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1566	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  &&  filename.length()  >  0)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1567	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeModuleName(filename));  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1568	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeModuleName(filename);  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(filename!=  null)  {  return  normalizeModuleName(filename);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(filename!=  null)  {  return  normalizeModuleName(filename);  }  else  {  compiler.reportCodeChange();  }	  if(filename!=    null)    {    return    toModuleName(normalizeModuleName(filename));    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1569	[BUG]  [BUGGY]  if(modulename  ==  null  ||  normalizeFilename(filename))  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null  ||  normalizeFilename(filename))  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||  normalizeFilename(filename))  {  return  toModuleName(modulename,  normalizeFilename(filename));  }	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1570	[BUG]  [BUGGY]  if(modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeFilename(filename));  }	  return    toModuleName(modulename,    normalizeFilename(filename));    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1571	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename,  compiler));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename,  compiler));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename,  compiler));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1572	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename,  filename));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename,  filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename,  module),  guessCJSModuleName(filename,  filename));	  return    toModuleName(normalizeSourceName(filename,    module),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1573	[BUG]  [BUGGY]  if(module  ==  null)  {  return  toModuleName(filename,  normalizeSourceName(module));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null)  {  return  toModuleName(filename,  normalizeSourceName(module));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null)  {  return  toModuleName(filename,  normalizeSourceName(module));  }	  return    toModuleName(filename,    normalizeSourceName(module));    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1574	[BUG]  [BUGGY]  return  toModuleName(module,  guessCJSModuleName(filename));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(module,  guessCJSModuleName(filename));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(module,  guessCJSModuleName(filename));	  return    toModuleName(normalizeFilename(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1575	[BUG]  [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename,  compiler));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename,  compiler));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeFilename(filename),  guessCJSModuleName(filename,  compiler));	  return    toModuleName(normalizeFilename(filename),    guessCJSModuleName(filename));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1576	[BUG]  [BUGGY]  if(modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename.length()  ==  0)  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
1577	[BUG]  [BUGGY]  if(modulename  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(modulename  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(modulename  ==  null  ||  normalizeSourceName(filename))  {  return  toModuleName(modulename,  normalizeSourceName(filename),  a$$module$test);  }	  return    toModuleName(modulename,    normalizeSourceName(filename),    a$$module$test);    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
1578	[BUG]  [BUGGY]  if(module  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null  ||  filename.length()  ==  0)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
1579	[BUG]  [BUGGY]  if(module  ==  null  ||  module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  if(module  ==  null  ||  module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	if(module  ==  null  ||  module!=  null)  {  return  toModuleName(normalizeSourceName(filename));  }	  if(module    ==    null)    {    return    toModuleName(normalizeSourceName(filename));    }    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
1580	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module,  a$$module$test);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    module);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1581	[BUG]  [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module,  scriptNodeCount);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      String  guessCJSModuleName(String  filename)  {      [BUGGY]  return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module,  scriptNodeCount);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  guessCJSModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	70	70	5	replace	return  toModuleName(normalizeSourceName(filename),  DEFAULT_FILENAME_PREFIX,  module,  scriptNodeCount);	  return    toModuleName(normalizeSourceName(filename),    DEFAULT_FILENAME_PREFIX,    module);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
