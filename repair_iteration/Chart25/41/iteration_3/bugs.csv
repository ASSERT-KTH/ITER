bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	7	4	add
2	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	7	4	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	7	4	add
4	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	7	4	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	7	4	add
6	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	7	4	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
8	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
10	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
12	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	13	4	add
14	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	13	4	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	13	4	add
16	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	13	4	add
17	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemIndicatorPaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemIndicatorPaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemIndicatorPaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    	compilable	  [FE]  AssertionFailedError  	8	4	replace
19	[BUG]  [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    	compilable	  [FE]  AssertionFailedError  	8	4	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectWidth    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	9	4	add
21	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectWidth    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	9	4	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectWidth    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	9	4	add
23	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectWidth    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	9	4	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectWidth    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	9	4	add
25	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectWidth    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	9	4	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	5	4	add
27	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	5	4	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	5	4	add
29	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	5	4	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	5	4	add
31	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	5	4	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	18	4	add
33	[BUG]  [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	18	4	add
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	18	4	add
35	[BUG]  [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	18	4	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	18	4	add
37	[BUG]  [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	18	4	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,  column));  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.setStroke(getItemOutlineStroke(row,  column));  g2.draw(line);	  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,    column));    	compilable	  [FE]  AssertionFailedError  	4	4	replace
39	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,  column));  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,  column));  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setStroke(getItemOutlineStroke(row,  column));  g2.draw(line);	  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,    column));    	compilable	  [FE]  AssertionFailedError  	4	4	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  if(isItemLabelVisible(row,  column))  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	if(isItemLabelVisible(row,  column))  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,    column));    	compilable	  [FE]  AssertionFailedError  	16	4	replace
41	[BUG]  [BUGGY]  if(isItemLabelVisible(row,  column))  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  if(isItemLabelVisible(row,  column))  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	if(isItemLabelVisible(row,  column))  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,    column));    	compilable	  [FE]  AssertionFailedError  	16	4	replace
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	15	4	add
43	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	15	4	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	15	4	add
45	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	15	4	add
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	15	4	add
47	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	15	4	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);	          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    	compilable	  [FE]  AssertionFailedError  	24	4	replace
49	[BUG]  [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);	          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    	compilable	  [FE]  AssertionFailedError  	24	4	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	1	4	add
51	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	1	4	add
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	1	4	add
53	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	1	4	add
54	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setLine(getItemOutlineLine(row,  column));  g2.setLine(getItemOutlineLine(row,  column));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setLine(getItemOutlineLine(row,  column));  g2.setLine(getItemOutlineLine(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setLine(getItemOutlineLine(row,  column));  g2.setLine(getItemOutlineLine(row,  column));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
56	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
58	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
59	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d	  	non-compiled	[CE]  ')'  expected	3	None	add
60	[BUG]  [BUGGY]  g2.setPaint(getItemInlinePaint(row,  column));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setPaint(getItemInlinePaint(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setPaint(getItemInlinePaint(row,  column));	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemInlinePaint(row,    column));    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
61	[BUG]  [BUGGY]  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)  [FE]          AssertionFailedError      [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	          Line2D    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    	non-compiled	[CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)	12	None	replace
62	[BUG]  [BUGGY]  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  [CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)  [FE]        AssertionFailedError      [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);	          Line2D    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    	non-compiled	[CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)	11	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	23	4	add
64	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	23	4	add
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	23	4	add
66	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	23	4	add
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	23	4	add
68	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	23	4	add
69	[BUG]  [BUGGY]  if(isItemOutlinePaint)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [CE]  cannot  find  symbol  isItemOutlinePaint  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  if(isItemOutlinePaint)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	if(isItemOutlinePaint)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    	non-compiled	[CE]  cannot  find  symbol  isItemOutlinePaint	8	None	replace
70	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemIndividualPaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemIndividualPaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemIndividualPaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	7	4	add
72	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	7	4	add
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	23	4	add
74	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	23	4	add
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	23	4	add
76	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	23	4	add
77	[BUG]  [BUGGY]  Line2D  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  [CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)  [FE]        AssertionFailedError      [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  Line2D  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	Line2D  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);	          Line2D    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    	non-compiled	[CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)	11	None	replace
78	[BUG]  [BUGGY]  if(isItemOutlinePaint)  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  }  [CE]  cannot  find  symbol  isItemOutlinePaint  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  if(isItemOutlinePaint)  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  }  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	if(isItemOutlinePaint)  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  }	          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectWidth    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    	non-compiled	[CE]  cannot  find  symbol  isItemOutlinePaint	10	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	if(getItemOutlinePaint(row,  column)!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,    column));    	compilable	  [FE]  AssertionFailedError  	14	4	replace
80	[BUG]  [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	if(getItemOutlinePaint(row,  column)!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,    column));    	compilable	  [FE]  AssertionFailedError  	14	4	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	1	4	add
82	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	1	4	add
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
84	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
86	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  }  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  }	  if(isItemOutlinePaint)    {    g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    }    	compilable	  [FE]  AssertionFailedError  	20	4	replace
88	[BUG]  [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  }  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  }	  if(isItemOutlinePaint)    {    g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    }    	compilable	  [FE]  AssertionFailedError  	20	4	replace
89	[BUG]  [BUGGY]  if(isItemOutlinePaint)  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [CE]  cannot  find  symbol  isItemOutlinePaint  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  if(isItemOutlinePaint)  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	if(isItemOutlinePaint)  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    	non-compiled	[CE]  cannot  find  symbol  isItemOutlinePaint	24	None	replace
90	[BUG]  [BUGGY]  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  [CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)  [FE]          AssertionFailedError      [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);	          Line2D    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    	non-compiled	[CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)	12	None	replace
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	7	4	add
92	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	7	4	add
93	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemInlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemInlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemInlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	18	4	add
95	[BUG]  [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);	  	compilable	  [FE]  AssertionFailedError  	18	4	add
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	23	4	add
97	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  *  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    *    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	23	4	add
98	[BUG]  [BUGGY]  if(isItemOutlinePaint(row,  column))  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  if(isItemOutlinePaint(row,  column))  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	if(isItemOutlinePaint(row,  column))  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
99	[BUG]  [BUGGY]  if(isItemOutlinePaint(row,  column))  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  if(isItemOutlinePaint(row,  column))  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	if(isItemOutlinePaint(row,  column))  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
100	[BUG]  [BUGGY]  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowerVal,  rectY  +  rectHeight  /  2.0d);  [CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)  [FE]        AssertionFailedError      [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowerVal,  rectY  +  rectHeight  /  2.0d);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  /  2.0d,  lowerVal,  rectY  +  rectHeight  /  2.0d);	          Line2D    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    	non-compiled	[CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)	11	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
102	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
104	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  lowVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    lowVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
105	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemInlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemInlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemInlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	5	4	add
107	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	5	4	add
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	add	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	5	4	add
109	[BUG]  [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]          g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	                g2.draw(line);        line        =        new        Line2D.Double(lowVal,        rectY        +        rectHeight        /        2.0d,        highVal,        rectY        +        rectHeight        /        2.0d);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    /    2.0d,    highVal,    rectY    +    rectHeight    /    2.0d);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	5	4	add
110	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemInlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (this.errorIndicatorPaint  !=  null)  {  g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemInlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	337	337	4	replace	g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemInlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
