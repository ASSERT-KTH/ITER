bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }	  	compilable	  [FE]  AssertionFailedError  	30	4	add
2	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }	  	compilable	  [FE]  AssertionFailedError  	30	4	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }	  	compilable	  [FE]  AssertionFailedError  	30	4	add
4	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }	  	compilable	  [FE]  AssertionFailedError  	30	4	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    	compilable	  [FE]  AssertionFailedError  	20	4	replace
6	[BUG]  [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    	compilable	  [FE]  AssertionFailedError  	20	4	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }	          g2.draw(line);    if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    	compilable	  [FE]  AssertionFailedError  	31	4	replace
8	[BUG]  [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }	          g2.draw(line);    if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    	compilable	  [FE]  AssertionFailedError  	31	4	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	14	4	add
10	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	14	4	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }	  	compilable	  [FE]  AssertionFailedError  	14	4	add
12	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }	  	compilable	  [FE]  AssertionFailedError  	14	4	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	14	4	add
14	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	14	4	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	1	4	add
16	[BUG]  [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	1	4	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	1	4	add
18	[BUG]  [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	1	4	add
19	[BUG]  [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setFont(getItemOutlineFont(row,  column));  g2.setFont(getItemOutlineFont(row,  column));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setFont(getItemOutlineFont(row,  column));  g2.setFont(getItemOutlineFont(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setFont(getItemOutlineFont(row,  column));  g2.setFont(getItemOutlineFont(row,  column));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	          g2.draw(line);    g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    	compilable	  [FE]  AssertionFailedError  	25	4	replace
21	[BUG]  [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	          g2.draw(line);    g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    	compilable	  [FE]  AssertionFailedError  	25	4	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
23	[BUG]  [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
25	[BUG]  [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
27	[BUG]  [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
28	[BUG]  [BUGGY]  g2.setPaint(getItemInlinePaint(row,  column));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  g2.setPaint(getItemInlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	g2.setPaint(getItemInlinePaint(row,  column));	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemInlinePaint(row,    column));    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
29	[BUG]  [BUGGY]  g2.setPaint(getItemIndicatorPaint(row,  column));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  g2.setPaint(getItemIndicatorPaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	g2.setPaint(getItemIndicatorPaint(row,  column));	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemIndicatorPaint(row,    column));    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  g2.draw(line);  }	          g2.draw(line);    g2.draw(line);    	compilable	  [FE]  AssertionFailedError  	11	4	replace
31	[BUG]  [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  g2.draw(line);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  g2.draw(line);  }	          g2.draw(line);    g2.draw(line);    	compilable	  [FE]  AssertionFailedError  	11	4	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    2.0d,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
33	[BUG]  [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    2.0d,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
34	[BUG]  [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    2.0d,    highVal,    rectY    +    rectHeight    *    0.75);    Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);	  	non-compiled	[CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)	21	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.25);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    2.0d,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.25);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
36	[BUG]  [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.25);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.25);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    2.0d,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.25);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
37	[BUG]  [BUGGY]  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)  [FE]          AssertionFailedError      [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    Line2D    line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    	non-compiled	[CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)	18	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }	          g2.draw(line);    if(this.errorIndicatorStroke!=    null)    {    g2.draw(line);    }    	compilable	  [FE]  AssertionFailedError  	33	4	replace
39	[BUG]  [BUGGY]  if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }	          g2.draw(line);    if(this.errorIndicatorStroke!=    null)    {    g2.draw(line);    }    	compilable	  [FE]  AssertionFailedError  	33	4	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  g2.draw(line);  if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        if(this.errorIndicatorStroke!=    null)    {    g2.draw(line);    }    g2.draw(line);  if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }	  	compilable	  [FE]  AssertionFailedError  	32	4	add
41	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  g2.draw(line);  if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  g2.draw(line);  if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorStroke!=    null)    {    g2.draw(line);    }    g2.draw(line);  if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }	  	compilable	  [FE]  AssertionFailedError  	32	4	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        if(this.errorIndicatorStroke!=    null)    {    g2.draw(line);    }    if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }	  	compilable	  [FE]  AssertionFailedError  	32	4	add
43	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorStroke!=    null)    {    g2.draw(line);    }    if(this.errorIndicatorStroke!=  null)  {  g2.draw(line);  }	  	compilable	  [FE]  AssertionFailedError  	32	4	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	7	4	add
45	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	7	4	add
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	7	4	add
47	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	7	4	add
48	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemIndicatorPaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemIndicatorPaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemIndicatorPaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  g2.draw(line);  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        g2.draw(line);    g2.draw(line);  g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	10	4	add
50	[BUG]  [BUGGY]          g2.draw(line);    g2.draw(line);  g2.draw(line);  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  g2.draw(line);  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        g2.draw(line);    g2.draw(line);  g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	10	4	add
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);	  line    =    new    Line2D.Double(highVal,    rectX    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    	compilable	  [FE]  AssertionFailedError  	29	4	replace
52	[BUG]  [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);	  line    =    new    Line2D.Double(highVal,    rectX    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    	compilable	  [FE]  AssertionFailedError  	29	4	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	12	4	add
54	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	12	4	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }	  	compilable	  [FE]  AssertionFailedError  	12	4	add
56	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }	  	compilable	  [FE]  AssertionFailedError  	12	4	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	12	4	add
58	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	12	4	add
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	19	4	add
60	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	19	4	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	19	4	add
62	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	19	4	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	19	4	add
64	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	19	4	add
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	26	4	add
66	[BUG]  [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	26	4	add
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	26	4	add
68	[BUG]  [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	26	4	add
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	26	4	add
70	[BUG]  [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	26	4	add
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);	  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    2.0d,    highVal,    rectY    +    rectHeight    *    0.75);    	compilable	  [FE]  AssertionFailedError  	22	4	replace
72	[BUG]  [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  /  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);	  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    2.0d,    highVal,    rectY    +    rectHeight    *    0.75);    	compilable	  [FE]  AssertionFailedError  	22	4	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	16	4	add
74	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	16	4	add
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	16	4	add
76	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	16	4	add
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	16	4	add
78	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	16	4	add
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,  column));  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	g2.setStroke(getItemOutlineStroke(row,  column));  g2.draw(line);	          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,    column));    	compilable	  [FE]  AssertionFailedError  	4	4	replace
80	[BUG]  [BUGGY]  g2.setStroke(getItemOutlineStroke(row,  column));  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  g2.setStroke(getItemOutlineStroke(row,  column));  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	g2.setStroke(getItemOutlineStroke(row,  column));  g2.draw(line);	          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,    column));    	compilable	  [FE]  AssertionFailedError  	4	4	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	5	4	add
82	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	5	4	add
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	5	4	add
84	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	5	4	add
85	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlineStroke(row,  column));  [CE]  method  setPaint  in  class  Graphics2D  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlineStroke(row,  column));	  	non-compiled	[CE]  method  setPaint  in  class  Graphics2D  cannot  be  applied  to  given  types;	5	None	add
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line    =    new    Line2D.Double(highVal,    rectX    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	28	4	add
87	[BUG]  [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line    =    new    Line2D.Double(highVal,    rectX    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	28	4	add
88	[BUG]  [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  Line2D  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  Line2D  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line    =    new    Line2D.Double(highVal,    rectX    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    Line2D  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	non-compiled	[CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)	28	None	add
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line    =    new    Line2D.Double(highVal,    rectX    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	28	4	add
90	[BUG]  [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line    =    new    Line2D.Double(highVal,    rectX    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	28	4	add
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  g2.draw(line);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	34	4	add
92	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  g2.draw(line);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	34	4	add
93	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);	  	non-compiled	[CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)	34	None	add
94	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	non-compiled	[CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)	34	None	add
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	24	4	add
96	[BUG]  [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	24	4	add
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	24	4	add
98	[BUG]  [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	24	4	add
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	24	4	add
100	[BUG]  [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	24	4	add
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	if(getItemOutlinePaint(row,  column)!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	          g2.draw(line);    if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    	compilable	  [FE]  AssertionFailedError  	15	4	replace
102	[BUG]  [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(getItemOutlinePaint(row,  column)!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	          g2.draw(line);    if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    	compilable	  [FE]  AssertionFailedError  	15	4	replace
103	[BUG]  [BUGGY]  if(isItemOutlinePaint)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rect  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(isItemOutlinePaint)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rect  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(isItemOutlinePaint)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rect	          g2.draw(line);    g2.draw(line);    	non-compiled	[CE]  not  a  statement	11	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	1	4	add
105	[BUG]  [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	1	4	add
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	if(getItemOutlinePaint(row,  column)!=  null)  {  g2.draw(line);  }	          g2.draw(line);    if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    	compilable	  [FE]  AssertionFailedError  	13	4	replace
107	[BUG]  [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)  {  g2.draw(line);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(getItemOutlinePaint(row,  column)!=  null)  {  g2.draw(line);  }	          g2.draw(line);    if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    	compilable	  [FE]  AssertionFailedError  	13	4	replace
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	19	4	add
109	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	19	4	add
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	          g2.draw(line);    g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    	compilable	  [FE]  AssertionFailedError  	27	4	replace
111	[BUG]  [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	          g2.draw(line);    g2.draw(line);    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    	compilable	  [FE]  AssertionFailedError  	27	4	replace
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
113	[BUG]  [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	compilable	  [FE]  AssertionFailedError  	3	4	add
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	if(this.errorIndicatorPaint!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  }	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,    column));    	compilable	  [FE]  AssertionFailedError  	6	4	replace
115	[BUG]  [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(this.errorIndicatorPaint!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  }	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,    column));    	compilable	  [FE]  AssertionFailedError  	6	4	replace
116	[BUG]  [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)g2.setPaint(getItemInlinePaint(row,  column));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)g2.setPaint(getItemInlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(getItemOutlinePaint(row,  column)!=  null)g2.setPaint(getItemInlinePaint(row,  column));	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemInlinePaint(row,    column));    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	16	4	add
118	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.setPaint(getItemOutlinePaint(row,  column));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.setPaint(getItemOutlinePaint(row,  column));	  	compilable	  [FE]  AssertionFailedError  	16	4	add
119	[BUG]  [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemIndicatorPaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setPaint(getItemIndicatorPaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setPaint(getItemOutlinePaint(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemIndicatorPaint(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	if(this.errorIndicatorPaint!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,    column));    	compilable	  [FE]  AssertionFailedError  	8	4	replace
121	[BUG]  [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorPaint!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(this.errorIndicatorPaint!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,    column));    	compilable	  [FE]  AssertionFailedError  	8	4	replace
122	[BUG]  [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)g2.setPaint(getItemIndicatorPaint(row,  column));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(getItemOutlinePaint(row,  column)!=  null)g2.setPaint(getItemIndicatorPaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(getItemOutlinePaint(row,  column)!=  null)g2.setPaint(getItemIndicatorPaint(row,  column));	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setPaint(getItemIndicatorPaint(row,    column));    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
123	[BUG]  [BUGGY]  if(isItemOutlinePaint(row,  column))  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(isItemOutlinePaint(row,  column))  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(isItemOutlinePaint(row,  column))  {  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	          g2.draw(line);    g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
124	[BUG]  [BUGGY]  if(this.outlinePaint!=  null)  {  g2.draw(line);  }  [CE]  cannot  find  symbol  outlinePaint  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.outlinePaint!=  null)  {  g2.draw(line);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(this.outlinePaint!=  null)  {  g2.draw(line);  }	          g2.draw(line);    if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    	non-compiled	[CE]  cannot  find  symbol  outlinePaint	15	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line    =    new    Line2D.Double(highVal,    rectX    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	28	4	add
126	[BUG]  [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line    =    new    Line2D.Double(highVal,    rectX    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	28	4	add
127	[BUG]  [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [CE]  method  setStroke  in  class  Graphics2D  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlineStroke(row,  column));  g2.setStroke(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setStroke(getItemOutlineStroke(row,    column));    g2.setStroke(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));	  	non-compiled	[CE]  method  setStroke  in  class  Graphics2D  cannot  be  applied  to  given  types;	1	None	add
128	[BUG]  [BUGGY]  Line2D  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  Line2D  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	Line2D  line  =  new  Line2D.Double(highVal,  rectX  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  line    =    new    Line2D.Double(highVal,    rectX    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    	non-compiled	[CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)	29	None	replace
129	[BUG]  [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemInlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.setStroke(getItemOutlineStroke(row,    column));    g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemInlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.setStroke(getItemOutlineStroke(row,        column));        g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemInlineStroke(row,  column));  g2.setPaint(getItemOutlinePaint(row,  column));	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
130	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rect  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rect  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rect	  	non-compiled	[CE]  not  a  statement	14	None	add
131	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(lowVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	16	4	add
133	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	16	4	add
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorStroke!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	if(this.errorIndicatorStroke!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,    column));    	compilable	  [FE]  AssertionFailedError  	8	4	replace
135	[BUG]  [BUGGY]  if(this.errorIndicatorStroke!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  if(this.errorIndicatorStroke!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	if(this.errorIndicatorStroke!=  null)  {  g2.setPaint(getItemOutlinePaint(row,  column));  g2.setStroke(getItemOutlineStroke(row,  column));  }	          g2.setPaint(getItemOutlinePaint(row,    column));    g2.setStroke(getItemOutlineStroke(row,    column));    	compilable	  [FE]  AssertionFailedError  	8	4	replace
136	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
137	[BUG]  [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rect  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    if(this.errorIndicatorPaint!=  null)  {  g2.draw(line);  }  else  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  }  g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rect  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        if(this.errorIndicatorPaint!=    null)    {    g2.draw(line);    }    else    {    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    }    g2.draw(line);  if(this.errorIndicatorPaint!=  null)  {  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rect	  	non-compiled	[CE]  not  a  statement	12	None	add
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    2.0d,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
139	[BUG]  [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  2.0d,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    2.0d,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);	  	compilable	  [FE]  AssertionFailedError  	21	4	add
140	[BUG]  [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]  line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	line        =        new        Line2D.Double(highVal,        rectY        +        rectWidth        *        0.25,        highVal,        rectY        +        rectHeight        *        0.75);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectWidth    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    Line2D  line  =  new  Line2D.Double(highVal,  rectY  +  rectWidth  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	non-compiled	[CE]  variable  line  is  already  defined  in  method  drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int)	19	None	add
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	add	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	24	4	add
142	[BUG]  [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(this.errorIndicatorPaint);  }  else  {  g2.setPaint(getItemOutlinePaint(row,  column));  }  Line2D  line  =  null;  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  /  2.0d,  highVal,  rectY  +  rectHeight  /  2.0d);  g2.draw(line);      [BUGGY]          g2.draw(line);    g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);  [BUGGY]      line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,          highVal,  rectY  +  rectHeight  *  0.75);  highVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  line  =  new  Line2D.Double(lowVal,  rectY  +  rectHeight  *  0.25,  lowVal,  rectY  +  rectHeight  *  0.75);  g2.draw(line);  CategoryItemLabelGenerator  generator  =  getItemLabelGenerator(row,  column);  if  (generator  !=  null  &&  isItemLabelVisible(row,  column))  {  drawItemLabel(g2,  dataset,  row,  column,  plot,  generator,  bar,  [CLASS]  StatisticalBarRenderer  [METHOD]  drawHorizontalItem  [RETURN_TYPE]  void  Graphics2D  g2  CategoryItemRendererState  state  Rectangle2D  dataArea  CategoryPlot  plot  CategoryAxis  domainAxis  ValueAxis  rangeAxis  StatisticalCategoryDataset  dataset  int  row  int  column  [VARIABLES]  Stroke  errorIndicatorStroke  stroke  CategoryItemRendererState  state  double  base  highVal  lclip  lowVal  rectHeight  rectWidth  rectX  rectY  seriesGap  transY1  transY2  uclip  value  valueDelta  Rectangle2D  bar  dataArea  CategoryItemLabelGenerator  generator  Paint  errorIndicatorPaint  paint  seriesPaint  Line2D  line  long  serialVersionUID  CategoryPlot  plot  int  categoryCount  column  row  seriesCount  Graphics2D  g2  StatisticalCategoryDataset  dataset  boolean  Number  meanValue  CategoryAxis  domainAxis  EntityCollection  entities  ValueAxis  rangeAxis  RectangleEdge  xAxisLocation  yAxisLocation  	projects/Chart25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	0.7071067811865475	338	339	4	replace	                g2.draw(line);        g2.draw(line);    line    =    new    Line2D.Double(highVal,    rectY    +    rectHeight    *    0.25,    highVal,    rectY    +    rectHeight    *    0.75);    g2.draw(line);  g2.draw(line);  line  =  new  Line2D.Double(highVal,  rectY  +  rectHeight  *  0.25,  highVal,  rectY  +  rectHeight  *  0.75);	  	compilable	  [FE]  AssertionFailedError  	24	4	add
