bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.statesInitialized.add(stateInitialized,  isLastStep);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.statesInitialized.add(stateInitialized,  isLastStep);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.add(stateInitialized,  isLastStep);	      this.statesInitialized.add(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  this.statesInitialized.remove(stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.statesInitialized.remove(stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.remove(stateInitialized);	      this.statesInitialized.add(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  this.statesInitialized.set(stateInitialized);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.statesInitialized.set(stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.set(stateInitialized);	      this.statesInitialized.add(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this.statesInitialized);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this.statesInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(this.statesInitialized);	      this.expandableODE    =    expandableODE.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  this.expandableODE  =  isLastStep.evaluate(this.statesInitialized);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  isLastStep.evaluate(this.statesInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  isLastStep.evaluate(this.statesInitialized);	      this.expandableODE    =    expandableODE.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(this.statesInitialized);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  equations.evaluate(this.statesInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  equations.evaluate(this.statesInitialized);	      this.expandableODE    =    expandableODE.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	        this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	1	1	add
8	[BUG]  [BUGGY]      this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	1	1	add
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	        this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	1	1	add
10	[BUG]  [BUGGY]      this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	1	1	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	        this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	1	1	add
12	[BUG]  [BUGGY]      this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	1	1	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	        this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	1	1	add
14	[BUG]  [BUGGY]      this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	1	1	add
15	[BUG]  [BUGGY]  this.statesInitialized  =  isLastStep;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.statesInitialized  =  isLastStep;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  isLastStep;	      this.statesInitialized    =    stateInitialized;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized  &&  isLastStep;	      this.statesInitialized    =    stateInitialized;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(this);	  this.expandableODE    =    expandableODE.evaluate(this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
18	[BUG]  [BUGGY]  this.expandableODE  =  expansionable.evaluate(this);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  expansionable.evaluate(this);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expansionable.evaluate(this);	  this.expandableODE    =    expandableODE.evaluate(this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
19	[BUG]  [BUGGY]  this.expandableODE  =  expandable.evaluate(this);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  expandable.evaluate(this);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandable.evaluate(this);	  this.expandableODE    =    expandableODE.evaluate(this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(this);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  equations.evaluate(this);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  equations.evaluate(this);	  this.expandableODE    =    expandableODE.evaluate(this);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  this.eventsStates.add(stateInitialized);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.add(stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(stateInitialized);	      this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  this.eventsStates.remove(stateInitialized);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.remove(stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.remove(stateInitialized);	      this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
23	[BUG]  [BUGGY]  this.expandableODE  =  expandable.equals(this.expandableODE);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  expandable.equals(this.expandableODE);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandable.equals(this.expandableODE);	  this.expandableODE    =    expandableODE.equals(this.expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(this.expandableODE);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  stateInitialized.equals(this.expandableODE);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.equals(this.expandableODE);	  this.expandableODE    =    expandableODE.equals(this.expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  this.expandableODE  =  expansionable.equals(this.expandableODE);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  expansionable.equals(this.expandableODE);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expansionable.equals(this.expandableODE);	  this.expandableODE    =    expandableODE.equals(this.expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
26	[BUG]  [BUGGY]  this.expandableODE  =  isLastStep.equals(this.expandableODE);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  isLastStep.equals(this.expandableODE);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  isLastStep.equals(this.expandableODE);	  this.expandableODE    =    expandableODE.equals(this.expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  this.eventsStates.clear();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	        this.eventsStates.clear();    this.eventsStates.clear();	  	compilable	  [FE]  AssertionError  	5	1	add
28	[BUG]  [BUGGY]      this.eventsStates.clear();  this.eventsStates.clear();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  this.eventsStates.clear();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.eventsStates.clear();    this.eventsStates.clear();	  	compilable	  [FE]  AssertionError  	5	1	add
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	        this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	5	1	add
30	[BUG]  [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	5	1	add
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	        this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	5	1	add
32	[BUG]  [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	5	1	add
33	[BUG]  [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  continue;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  continue;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
34	[BUG]  [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.eventsStates.clear();    if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
35	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expandable);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expandable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  expandable);	      this.expandableODE    =    expandableODE.evaluate(this,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  stateInitialized);	      this.expandableODE    =    expandableODE.evaluate(this,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  this.expandableODE  =  isLastStep.evaluate(this,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  isLastStep.evaluate(this,  stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  isLastStep.evaluate(this,  stateInitialized);	      this.expandableODE    =    expandableODE.evaluate(this,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  this.eventsStates.add(expable);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.add(expable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(expable);	      this.eventsStates.add(expableODE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  this.eventsStates.add(expandable);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.add(expandable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(expandable);	      this.eventsStates.add(expableODE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
40	[BUG]  [BUGGY]  this.eventsStates.add(isLastStep);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.add(isLastStep);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(isLastStep);	      this.eventsStates.add(expableODE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
41	[BUG]  [BUGGY]  this.expandableODE  =  isLastStep;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  isLastStep;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  isLastStep;	      this.expandableODE    =    expandableODE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  this.expandableODE  =  expandable;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  expandable;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandable;	      this.expandableODE    =    expandableODE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  this.eventsStates.put(name,  isLastStep,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.put(name,  isLastStep,  stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  isLastStep,  stateInitialized);	      this.eventsStates.put(name,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  this.eventsStates.put(null,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.put(null,  stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(null,  stateInitialized);	      this.eventsStates.put(name,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(expandableODE);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  stateInitialized.equals(expandableODE);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.equals(expandableODE);	      this.expandableODE    =    expandableODE.equals(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(expandable);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  stateInitialized.equals(expandable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.equals(expandable);	      this.expandableODE    =    expandableODE.equals(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
47	[BUG]  [BUGGY]  this.expandableODE  =  equations.equals(stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  equations.equals(stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  equations.equals(stateInitialized);	      this.expandableODE    =    expandableODE.equals(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  this.expandableODE  =  isLastStep.equals(stateInitialized);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  isLastStep.equals(stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  isLastStep.equals(stateInitialized);	      this.expandableODE    =    expandableODE.equals(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
49	[BUG]  [BUGGY]  this.expandableODE  =  expansionable;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  expansionable;  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expansionable;	  this.expandableODE    =    stateInitialized;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  this.expandableODE  =  expansionable.evaluate(this.statesInitialized);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  expansionable.evaluate(this.statesInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expansionable.evaluate(this.statesInitialized);	      this.expandableODE    =    expandableODE.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
51	[BUG]  [BUGGY]  this.expandableODE  =  expandable.evaluate(this.statesInitialized);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  expandable.evaluate(this.statesInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandable.evaluate(this.statesInitialized);	      this.expandableODE    =    expandableODE.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
52	[BUG]  [BUGGY]  this.eventsStates.add(expansion);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.add(expansion);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(expansion);	      this.eventsStates.add(expableODE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
53	[BUG]  [BUGGY]  this.eventsStates.add(null);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.add(null);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(null);	      this.eventsStates.add(expableODE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
54	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.put(name,  stateInitialized  +  1);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized  +  1);	      this.eventsStates.put(name,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
55	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  stateStates);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  stateStates);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  stateStates);	      this.eventsStates.put(name,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
56	[BUG]  [BUGGY]      this.statesInitialized  =  stateInitialized;  This.statesInitialized  =  stateInitialized;  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.statesInitialized  =  stateInitialized;  This.statesInitialized  =  stateInitialized;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.statesInitialized    =    stateInitialized;    This.statesInitialized  =  stateInitialized;	  	non-compiled	[CE]  cannot  find  symbol  This	1	None	add
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	        this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	1	1	add
58	[BUG]  [BUGGY]      this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	1	1	add
59	[BUG]  [BUGGY]      this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  [CE]  cannot  find  symbol  expandableODE  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }	  	non-compiled	[CE]  cannot  find  symbol  expandableODE	1	None	add
60	[BUG]  [BUGGY]  this.expandableODE  =  expansionable.equals(stateInitialized);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  expansionable.equals(stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expansionable.equals(stateInitialized);	      this.expandableODE    =    expandableODE.equals(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(stateInitialized);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  stateInitialized.equals(stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.equals(stateInitialized);	      this.expandableODE    =    expandableODE.equals(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  this.statesInitialized.clear();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.statesInitialized.clear();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.clear();	      this.statesInitialized.add(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expansionable);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expansionable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  expansionable);	      this.expandableODE    =    expandableODE.evaluate(this,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
64	[BUG]  [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.eventsStates.clear();    if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
65	[BUG]  [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.eventsStates.clear();    if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear();  }	  	non-compiled	[CE]  ';'  expected	5	None	add
66	[BUG]  [BUGGY]  this.eventsStates.add(new  Integer(stateInitialized));  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.add(new  Integer(stateInitialized));  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(new  Integer(stateInitialized));	      this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
67	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized));  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized));	      this.eventsStates.put(name,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
68	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized),  stateInitialized);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized),  stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized),  stateInitialized);	      this.eventsStates.put(name,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
69	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized? "true "  :  stateInitialized);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.eventsStates.put(name,  stateInitialized? "true "  :  stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized? "true "  :  stateInitialized);	      this.eventsStates.put(name,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
70	[BUG]  [BUGGY]  this.expandableODE  =  this.expandableODE.equals(expandable);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  this.expandableODE.equals(expandable);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  this.expandableODE.equals(expandable);	  this.expandableODE    =    expandableODE.equals(this.expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
71	[BUG]  [BUGGY]  this.expandableODE  =  expandedable;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  expandedable;  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandedable;	  this.expandableODE    =    stateInitialized;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
72	[BUG]  [BUGGY]  this.expandableODE  =  expandable.equals(stateInitialized);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  expandable.equals(stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandable.equals(stateInitialized);	      this.expandableODE    =    expandableODE.equals(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
73	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expandableODE);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expandableODE);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  expandableODE);	      this.expandableODE    =    expandableODE.evaluate(this,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
74	[BUG]  [BUGGY]  this.expandableODE  =  expansionable.evaluate(this,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  expansionable.evaluate(this,  stateInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expansionable.evaluate(this,  stateInitialized);	      this.expandableODE    =    expandableODE.evaluate(this,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
75	[BUG]  [BUGGY]      this.eventsStates.clear();  Arrays.sort(this.eventsStates);  this.eventsStates.clear();  [CE]  cannot  find  symbol  Arrays  [FE]    AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  Arrays.sort(this.eventsStates);  this.eventsStates.clear();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.eventsStates.clear();    Arrays.sort(this.eventsStates);  this.eventsStates.clear();	  	non-compiled	[CE]  cannot  find  symbol  Arrays	5	None	add
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	        this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	5	1	add
77	[BUG]  [BUGGY]      this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	5	1	add
78	[BUG]  [BUGGY]      this.eventsStates.clear();  this.eventsStates.clear();  if(expanableODE!=  null)  {  this.eventsStates.clear();  }  [CE]  cannot  find  symbol  expanableODE  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  this.eventsStates.clear();  if(expanableODE!=  null)  {  this.eventsStates.clear();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.eventsStates.clear();    this.eventsStates.clear();  if(expanableODE!=  null)  {  this.eventsStates.clear();  }	  	non-compiled	[CE]  cannot  find  symbol  expanableODE	5	None	add
79	[BUG]  [BUGGY]      this.eventsStates.clear();  this.eventsStates.clear();  if(expanableODE  ==  null)  {  this.eventsStates.clear();  }  [CE]  cannot  find  symbol  expanableODE  [FE]          AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]      this.eventsStates.clear();  this.eventsStates.clear();  if(expanableODE  ==  null)  {  this.eventsStates.clear();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	        this.eventsStates.clear();    this.eventsStates.clear();  if(expanableODE  ==  null)  {  this.eventsStates.clear();  }	  	non-compiled	[CE]  cannot  find  symbol  expanableODE	5	None	add
80	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  +  1;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.statesInitialized  =  stateInitialized  +  1;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized  +  1;	      this.statesInitialized    =    stateInitialized;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
81	[BUG]  [BUGGY]  this.expandableODE  =  this.statesInitialized.evaluate(expandable);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;    [BUGGY]  this.expandableODE  =  this.statesInitialized.evaluate(expandable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  this.statesInitialized.evaluate(expandable);	      this.expandableODE    =    expandableODE.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
