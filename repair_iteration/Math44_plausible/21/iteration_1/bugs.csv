bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.expandable  =  equations.elements();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]  this.expandable  =  equations.elements();  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	this.expandable  =  equations.elements();	}  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2	[BUG]  [BUGGY]  this.expandable  =  equations.equals(expandable);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]  this.expandable  =  equations.equals(expandable);  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	this.expandable  =  equations.equals(expandable);	}  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
3	[BUG]  [BUGGY]  this.expandable  =  equations.size();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]  this.expandable  =  equations.size();  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	this.expandable  =  equations.size();	}  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
4	[BUG]  [BUGGY]  this.events.clear();  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]  this.events.clear();  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	this.events.clear();	}  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
6	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  expandable.addChangeListener(this);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  expandable.addChangeListener(this);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  expandable.addChangeListener(this);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
7	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  setEquations(elements.get(i),  isLastStep);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  setEquations(elements.get(i),  isLastStep);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  setEquations(elements.get(i),  isLastStep);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
8	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  setEquations(equivalents.get(i),  isLastStep);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  setEquations(equivalents.get(i),  isLastStep);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  setEquations(equivalents.get(i),  isLastStep);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
9	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  setEquations(elements.get(i),  isLastStep,  isLastStep);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  setEquations(elements.get(i),  isLastStep,  isLastStep);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  setEquations(elements.get(i),  isLastStep,  isLastStep);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
10	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  expandable.addElement(i,  equations);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  expandable.addElement(i,  equations);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    if(equations!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  expandable.addElement(i,  equations);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
11	[BUG]  [BUGGY]    if(equivalences!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equivalences.get(i);  if(  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    if(equivalences!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equivalences.get(i);  if(  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    if(equivalences!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equivalences.get(i);  if(		non-compiled	[CE]  illegal  start  of  expression	42	None	add
12	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expan  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expan  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expan		non-compiled	[CE]  ')'  expected	42	None	add
13	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expansion  =(ExpandableStatefulODE)equinoxes.get(i);  if(expand  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expansion  =(ExpandableStatefulODE)equinoxes.get(i);  if(expand  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expansion  =(ExpandableStatefulODE)equinoxes.get(i);  if(expand		non-compiled	[CE]  ')'  expected	42	None	add
14	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expand  [CE]  ')'  expected  [FE]          AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expand  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expand		non-compiled	[CE]  ')'  expected	42	None	add
15	[BUG]  [BUGGY]    if(equivalences!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equivalences.get(i);  if(expand  [CE]  ')'  expected  [FE]            AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    if(equivalences!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equivalences.get(i);  if(expand  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    if(equivalences!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equivalences.get(i);  if(expand		non-compiled	[CE]  ')'  expected	42	None	add
16	[BUG]  [BUGGY]  if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  i++)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expan  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]  if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  i++)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expan  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  i++)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expan	}  	non-compiled	[CE]  ')'  expected	41	None	replace
17	[BUG]  [BUGGY]    this.expandable  =  equations.elementsInitialized;  [CE]  cannot  find  symbol  elementsInitialized  [FE]    AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    this.expandable  =  equations.elementsInitialized;  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    this.expandable  =  equations.elementsInitialized;		non-compiled	[CE]  cannot  find  symbol  elementsInitialized	42	None	add
18	[BUG]  [BUGGY]    this.expandable  =  equations.getExpandable();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    this.expandable  =  equations.getExpandable();  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    this.expandable  =  equations.getExpandable();		non-compiled	[CE]  cannot  find  symbol	42	None	add
19	[BUG]  [BUGGY]    this.expandable  =  equations.getExpandableState();  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  this.expandable  =  equations;  [BUGGY]    this.expandable  =  equations.getExpandableState();  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	193	193	1	replace	    this.expandable  =  equations.getExpandableState();		non-compiled	[CE]  cannot  find  symbol	42	None	add
