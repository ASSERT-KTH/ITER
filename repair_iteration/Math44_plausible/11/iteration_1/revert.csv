projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();setEventsStates(eventsStates);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=Collections.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95setEventsStates(eventsStates);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<Integer>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<Increment>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.stepHandlers=newArrayList<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventStatement>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventsState>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=Collections.emptyList();this.eventsStates=Collections.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=Collections.emptyList();this.eventsStates=Collections.emptyList();setEventsStates(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=Collections.emptyList();this.eventsStates=Collections.emptyList();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=Collections.emptyList();this.eventsStates=Collections.emptyList();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newLinkedList<EventState>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=Collections.EMPTY_LIST;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=Collections.<EventState>emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();isLastStep=true;this.eventsStates=newArrayList<EventState>();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();isLastStep=true;This.eventsStates=newArrayList<EventState>();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();isLastStep=true;if(isLastStep){this.eventsStates=newArrayList<EventState>();isLastStep=true;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();isLastStep=true;if(isLastStep){this.eventsStates=newArrayList<EventState>();isLastStep=true;}else{setEventsStates(-1);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newLinkedList<EventState>();setEventsStates(eventsStates);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95eventsStates=newArrayList<EventState>();setEventsStates(eventsStates);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newLinkedList<EventStatement>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newLinkedHashSet<EventStatement>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newLinkedList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95setEventsStates(eventsStates,stepStart);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95setEventsStates(eventsStates.size());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.stepHandlers=newLinkedList<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.stepHandlers=newArrayList<StepHandler>(stepStart);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();this.eventsStates=newArrayList<EventState>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();if(eventsStates==null){this.eventsStates=newArrayList<EventState>();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();if(eventsStates==null){this.eventsStates=newArrayList<EventState>();}else{setEventsStates(-1);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();if(eventsStates==null){this.eventsStates=newArrayList<EventState>();}else{setEventsStates(true);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newLinkedList<Integer>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<Integer>(stepSize);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95if(isLastStep){this.eventsStates=newArrayList<EventState>();isLastStep=true;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newLinkedList<EventState>();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newLinkedList<EventsState>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newLinkedList<Increment>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newTreeSet<Increment>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.stepHandlers=newArrayList<StepHandler>();this.stepHandlers=newArrayList<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.stepHandlers=newArrayList<StepHandler>();if(stepHandlers==null){this.stepHandlers=newArrayList<StepHandler>();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.stepHandlers=newArrayList<StepHandler>();This.stepHandlers=newArrayList<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.stepHandlers=newArrayList<StepHandler>();if(stepHandlers==null){this.stepHandlers=newArrayList<StepHandler>();}else{setMaxEvaluations(1);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95Set<EventState>eventsStates=newLinkedHashSet<EventState>();setEventsStates(eventsStates);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();if(this.eventsStates==null){this.eventsStates=newArrayList<EventState>();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();ArrayList<EventState>this.eventsStates=newArrayList<EventState>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();This.eventsStates=newArrayList<EventState>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.stepHandlers=newArrayList<StepHandler>();ArrayList<StepHandler>stepHandlers=newArrayList<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.stepHandlers=newArrayList<StepHandler>();ArrayList<StepHandler>steps=newArrayList<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95setEventsStates(events);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95setEventsStates(statesInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95setEventsStates(eventsInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=Collections.emptyList();this.eventsStates=Collections.emptyList();setMaxEvaluations(-2);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newTreeSet<EventStatement>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();isLastStep=true;ArrayList<EventState>this.eventsStates=newArrayList<EventState>();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();isLastStep=true;ArrayList<EventState>steps=newArrayList<EventState>();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();isLastStep=true;ArrayList<EventState>events=newArrayList<EventState>();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();isLastStep=true;this.eventsStates=newArrayList<EventState>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();this.eventsStates=newTreeList<EventState>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=newArrayList<EventState>();isLastStep=true;if(this.eventsStates!=null){this.eventsStates=newArrayList<EventState>();isLastStep=true;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95if(eventsStates!=null){this.eventsStates=newArrayList<EventState>();setEventsStates(eventsStates);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=Collections.synchronizedList(this.eventsStates);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95this.eventsStates=Collections.emptyList();this.eventsStates=Collections.emptyList();resetOccurred=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java95setEventsStates(eventsStates.values());
