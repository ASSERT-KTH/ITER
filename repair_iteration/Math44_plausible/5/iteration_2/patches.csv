bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  stepSize=  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=    Double.NEGATIVE_INFINITY    +    1;    stepSize=  Double.NEGATIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	53	1	add
2	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  stepSize=  Double.NEGATIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  stepSize=  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.NEGATIVE_INFINITY    +    1;    stepSize=  Double.NEGATIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	53	1	add
3	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  StepSize=  Double.NEGATIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  StepSize  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  StepSize=  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.NEGATIVE_INFINITY    +    1;    StepSize=  Double.NEGATIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  StepSize	53	None	add
4	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  stepsInitialized  =  Double.NEGATIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  stepsInitialized  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.NEGATIVE_INFINITY    +    1;    stepsInitialized  =  Double.NEGATIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	53	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  stepSize=  Double.NEGATIVE_INFINITY  +  2;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=    Double.NEGATIVE_INFINITY    +    1;    stepSize=  Double.NEGATIVE_INFINITY  +  2;	  	compilable	  [FE]  AssertionError  	53	1	add
6	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  stepSize=  Double.NEGATIVE_INFINITY  +  2;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  stepSize=  Double.NEGATIVE_INFINITY  +  2;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.NEGATIVE_INFINITY    +    1;    stepSize=  Double.NEGATIVE_INFINITY  +  2;	  	compilable	  [FE]  AssertionError  	53	1	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	25	1	replace
8	[BUG]  [BUGGY]  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	25	1	replace
9	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	25	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	65	1	add
11	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	65	1	add
12	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    StepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	65	None	add
13	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    stepsInitialized  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	65	None	add
14	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    steps  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  steps	65	None	add
15	[BUG]  [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	43	None	replace
16	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	43	None	replace
17	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	43	None	replace
18	[BUG]  [BUGGY]  this.stepHandlers  =  new  LinkedList  <  Integer>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  LinkedList  <  Integer>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers  =  new  LinkedList  <  Integer>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    Integer>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
19	[BUG]  [BUGGY]  this.stepHandlers  =  new  java.util.ArrayList  <  Integer>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  java.util.ArrayList  <  Integer>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers  =  new  java.util.ArrayList  <  Integer>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    Integer>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	40	None	replace
20	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  Integer>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  Integer>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers  =  new  TreeSet  <  Integer>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    Integer>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	40	None	replace
21	[BUG]  [BUGGY]  stepStart=  Double.NEGATIVE_INFINITY;  stepsSize=  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  stepsSize  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart=  Double.NEGATIVE_INFINITY;  stepsSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart=  Double.NEGATIVE_INFINITY;  stepsSize=  Double.NEGATIVE_INFINITY;	  stepSize=    Double.NEGATIVE_INFINITY;    stepsSize=    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  stepsSize	59	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart=  Double.POSITIVE_INFINITY;  stepStart=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepStart=  Double.POSITIVE_INFINITY;  stepStart=  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    phaseSize=    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	13	1	replace
23	[BUG]  [BUGGY]  stepStart=  Double.POSITIVE_INFINITY;  stepStart=  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart=  Double.POSITIVE_INFINITY;  stepStart=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart=  Double.POSITIVE_INFINITY;  stepStart=  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    phaseSize=    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	13	1	replace
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	5	1	add
25	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	5	1	add
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	5	1	add
27	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	5	1	add
28	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  This	5	None	add
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  isLastStep  =  true;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	5	1	add
30	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  isLastStep  =  true;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  isLastStep  =  true;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	5	1	add
31	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  isLastStep);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize,  isLastStep);	  stepHandlers.add(new    Integer(stepStart),    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	60	None	replace
32	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  hasLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  hasLastStep);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize,  hasLastStep);	  stepHandlers.add(new    Integer(stepStart),    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	60	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MAX_VALUE;  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MAX_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MAX_VALUE;    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MAX_VALUE;	  	compilable	  [FE]  AssertionError  	55	1	add
34	[BUG]  [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MAX_VALUE;  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MAX_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MAX_VALUE;  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MAX_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MAX_VALUE;    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MAX_VALUE;	  	compilable	  [FE]  AssertionError  	55	1	add
35	[BUG]  [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MAX_VALUE;  StepSize=  Double.MIN_VALUE;  stepSize=  Double.MAX_VALUE;  [CE]  cannot  find  symbol  StepSize  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MAX_VALUE;  StepSize=  Double.MIN_VALUE;  stepSize=  Double.MAX_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MAX_VALUE;    StepSize=  Double.MIN_VALUE;  stepSize=  Double.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  StepSize	55	None	add
36	[BUG]  [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MAX_VALUE;  Step  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MAX_VALUE;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MAX_VALUE;  Step  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MAX_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MAX_VALUE;    Step  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  2;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=  Double.NEGATIVE_INFINITY  +  2;	  stepSize=    Double.NEGATIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	54	1	replace
38	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  2;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NEGATIVE_INFINITY  +  2;	  stepSize=    Double.NEGATIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	54	1	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  /  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=  Double.NEGATIVE_INFINITY  /  1;	  stepSize=    Double.NEGATIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	54	1	replace
40	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  /  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  /  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NEGATIVE_INFINITY  /  1;	  stepSize=    Double.NEGATIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	54	1	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=        Double.NEGATIVE_INFINITY;        stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	14	1	add
42	[BUG]  [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.NEGATIVE_INFINITY;        stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	14	1	add
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=        Double.NEGATIVE_INFINITY;        stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	14	1	add
44	[BUG]  [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.NEGATIVE_INFINITY;        stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	14	1	add
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=        Double.NEGATIVE_INFINITY;        stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;	  	compilable	  [FE]  AssertionError  	14	1	add
46	[BUG]  [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.NEGATIVE_INFINITY;        stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;	  	compilable	  [FE]  AssertionError  	14	1	add
47	[BUG]  [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers  =  new  TreeList  <  StepHandler>();	  stepHandlers    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
48	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	39	None	replace
49	[BUG]  [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	39	None	replace
50	[BUG]  [BUGGY]  StepHandler  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	39	None	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepStart    =    Double.NaN;    stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	48	1	add
52	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart    =    Double.NaN;    stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	48	1	add
53	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  AssertionError>();  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  AssertionError>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart    =    Double.NaN;    stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  AssertionError>();	  	non-compiled	[CE]  incompatible  types	48	None	add
54	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepStart    =    Double.NaN;    stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	48	1	add
55	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart    =    Double.NaN;    stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	48	1	add
56	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  Incrementor>();  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  Incrementor>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart    =    Double.NaN;    stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  Incrementor>();	  	non-compiled	[CE]  incompatible  types	48	None	add
57	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  Integer>();  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  Integer>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart    =    Double.NaN;    stepStart  =  Double.NaN;  this.eventsStates  =  new  ArrayList  <  Integer>();	  	non-compiled	[CE]  incompatible  types	48	None	add
58	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NEGATIVE;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NEGATIVE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NEGATIVE;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NEGATIVE;    	non-compiled	[CE]  incompatible  types	70	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=        Double.NEGATIVE_INFINITY;        stepSize=    Double.NaN;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;	  	compilable	  [FE]  AssertionError  	18	1	add
60	[BUG]  [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.NEGATIVE_INFINITY;        stepSize=    Double.NaN;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;	  	compilable	  [FE]  AssertionError  	18	1	add
61	[BUG]  [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NaN;  StepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;  [CE]  cannot  find  symbol  StepSize  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NaN;  StepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.NEGATIVE_INFINITY;        stepSize=    Double.NaN;    StepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  StepSize	18	None	add
62	[BUG]  [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NaN;  stepSize=  Double.NNEGATIVE_INFINITY;  stepSize=  Double.NaN;  [CE]  cannot  find  symbol  NNEGATIVE_INFINITY  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NaN;  stepSize=  Double.NNEGATIVE_INFINITY;  stepSize=  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.NEGATIVE_INFINITY;        stepSize=    Double.NaN;    stepSize=  Double.NNEGATIVE_INFINITY;  stepSize=  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  NNEGATIVE_INFINITY	18	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    LinkedList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	3	1	replace
64	[BUG]  [BUGGY]  stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    LinkedList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	3	1	replace
65	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    LinkedList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	41	1	add
67	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	41	1	add
68	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	41	None	add
69	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	41	None	add
70	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    steps  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  steps	41	None	add
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	49	1	replace
72	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	49	1	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepStart  =  Double.MIN_VALUE;	  stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	49	1	replace
74	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart  =  Double.MIN_VALUE;	  stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	49	1	replace
75	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepStart  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	49	1	replace
76	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	49	1	replace
77	[BUG]  [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	28	None	replace
78	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize  +  1));  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize  +  1));  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepSize  +  1));	  stepHandlers.add(new    Integer(stepStart    +    1));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	61	None	replace
79	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart  +  1),  stepSize);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart  +  1),  stepSize);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepStart  +  1),  stepSize);	  stepHandlers.add(new    Integer(stepStart    +    1));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	61	None	replace
80	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize  +  1));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize  +  1));  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize  +  1));	  stepHandlers.add(new    Integer(stepStart    +    1));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	61	None	replace
81	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart  +  1,  stepSize));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart  +  1,  stepSize));  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepStart  +  1,  stepSize));	  stepHandlers.add(new    Integer(stepStart    +    1));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	61	None	replace
82	[BUG]  [BUGGY]  stepStart=  Double.POSITIVE_INFINITY;  StepSize=  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  StepSize  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart=  Double.POSITIVE_INFINITY;  StepSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart=  Double.POSITIVE_INFINITY;  StepSize=  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    StepSize=    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepSize	11	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	67	1	add
84	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	67	1	add
85	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  StepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  StepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers    =    new    TreeSet    <    StepHandler>();    StepHandlers  =  new  TreeSet  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	67	None	add
86	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepsInitialized  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepsInitialized  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers    =    new    TreeSet    <    StepHandler>();    stepsInitialized  =  new  TreeSet  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	67	None	add
87	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepsHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  stepsHandlers  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepsHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers    =    new    TreeSet    <    StepHandler>();    stepsHandlers  =  new  TreeSet  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  stepsHandlers	67	None	add
88	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  LinkedList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandlers  stepHandlers  =  new  LinkedList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandlers  stepHandlers  =  new  LinkedList  <  StepHandler>();	  StepHandlers    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
89	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandlers  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandlers  stepHandlers  =  new  TreeSet  <  StepHandler>();	  StepHandlers    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
90	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandlers  stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandlers  stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();	  StepHandlers    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
91	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	37	None	replace
92	[BUG]  [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	37	None	replace
93	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	37	None	replace
94	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	24	1	add
95	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	24	1	add
96	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	24	1	add
97	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	24	1	add
98	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na	  	non-compiled	[CE]  ';'  expected	24	None	add
99	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	24	None	add
100	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N	  	non-compiled	[CE]  ';'  expected	24	None	add
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	29	1	add
102	[BUG]  [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	29	1	add
103	[BUG]  [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  stepSize=  Double.min_VALUE;  [CE]  cannot  find  symbol  min_VALUE  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  stepSize=  Double.min_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  stepSize=  Double.min_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  min_VALUE	29	None	add
104	[BUG]  [BUGGY]  stepStart=  Double.POSITIVE_INFINITY;  stepsSize=  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  stepsSize  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart=  Double.POSITIVE_INFINITY;  stepsSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart=  Double.POSITIVE_INFINITY;  stepsSize=  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    stepsSize=    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  stepsSize	62	None	replace
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart=  Double.NEGATIVE_INFINITY;  stepStart=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepStart=  Double.NEGATIVE_INFINITY;  stepStart=  Double.NEGATIVE_INFINITY;	  stepSize=    Double.NEGATIVE_INFINITY;    phaseSize=    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	17	1	replace
106	[BUG]  [BUGGY]  stepStart=  Double.NEGATIVE_INFINITY;  stepStart=  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart=  Double.NEGATIVE_INFINITY;  stepStart=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart=  Double.NEGATIVE_INFINITY;  stepStart=  Double.NEGATIVE_INFINITY;	  stepSize=    Double.NEGATIVE_INFINITY;    phaseSize=    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	17	1	replace
107	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	7	1	add
108	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	7	1	add
109	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	7	1	add
110	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	7	1	add
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	7	1	add
112	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	7	1	add
113	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  This	7	None	add
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  stepSize=  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=    Double.POSITIVE_INFINITY    +    1;    stepSize=  Double.POSITIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	57	1	add
115	[BUG]  [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  stepSize=  Double.POSITIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  stepSize=  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.POSITIVE_INFINITY    +    1;    stepSize=  Double.POSITIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	57	1	add
116	[BUG]  [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  StepSize=  Double.POSITIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  StepSize  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  StepSize=  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.POSITIVE_INFINITY    +    1;    StepSize=  Double.POSITIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  StepSize	57	None	add
117	[BUG]  [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  stepsInitialized  =  Double.POSITIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  stepsInitialized  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.POSITIVE_INFINITY    +    1;    stepsInitialized  =  Double.POSITIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	57	None	add
118	[BUG]  [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  phaseSize=  Double.POSITIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  phaseSize  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  phaseSize=  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.POSITIVE_INFINITY    +    1;    phaseSize=  Double.POSITIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  phaseSize	57	None	add
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.MAX_VALUE;  stepSize=  Double.MAX_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=    Double.MAX_VALUE;    stepSize=  Double.MAX_VALUE;	  	compilable	  [FE]  AssertionError  	1	1	add
120	[BUG]  [BUGGY]  stepSize=  Double.MAX_VALUE;  stepSize=  Double.MAX_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.MAX_VALUE;  stepSize=  Double.MAX_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.MAX_VALUE;    stepSize=  Double.MAX_VALUE;	  	compilable	  [FE]  AssertionError  	1	1	add
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.MAX_VALUE;  stepSize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=    Double.MAX_VALUE;    stepSize=  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	1	1	add
122	[BUG]  [BUGGY]  stepSize=  Double.MAX_VALUE;  stepSize=  Double.MIN_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.MAX_VALUE;  stepSize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.MAX_VALUE;    stepSize=  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	1	1	add
123	[BUG]  [BUGGY]  stepSize=  Double.MAX_VALUE;  StepSize=  Double.MAX_VALUE;  [CE]  cannot  find  symbol  StepSize  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.MAX_VALUE;  StepSize=  Double.MAX_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.MAX_VALUE;    StepSize=  Double.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  StepSize	1	None	add
124	[BUG]  [BUGGY]  stepSize=  Double.MAX_VALUE;  phaseSize=  Double.MAX_VALUE;  [CE]  cannot  find  symbol  phaseSize  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.MAX_VALUE;  phaseSize=  Double.MAX_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.MAX_VALUE;    phaseSize=  Double.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  phaseSize	1	None	add
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    stepsInitialized    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	12	1	replace
126	[BUG]  [BUGGY]  stepSize=  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    stepsInitialized    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	12	1	replace
127	[BUG]  [BUGGY]  stepsInitialized  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepsInitialized  =  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepsInitialized  =  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    stepsInitialized    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	12	None	replace
128	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  StepHandler(this.stepSize,  stepHandlers);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  StepHandler(this.stepSize,  stepHandlers);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  StepHandler(this.stepSize,  stepHandlers);	  StepHandler    stepStart    =    new    StepHandler(this.stepSize);    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	51	None	replace
129	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  StepHandler(stepHandlers);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  StepHandler(stepHandlers);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  StepHandler(stepHandlers);	  StepHandler    stepStart    =    new    StepHandler(this.stepSize);    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	51	None	replace
130	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  StepHandler(stepHandlers.size());  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  StepHandler(stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  StepHandler(stepHandlers.size());	  StepHandler    stepStart    =    new    StepHandler(this.stepSize);    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	51	None	replace
131	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  StepHandler(this.stepSize,  this.stepHandlers);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  StepHandler(this.stepSize,  this.stepHandlers);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  StepHandler(this.stepSize,  this.stepHandlers);	  StepHandler    stepStart    =    new    StepHandler(this.stepSize);    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	51	None	replace
132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	this.stepStart  =  Double.NaN;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	66	1	replace
133	[BUG]  [BUGGY]  this.stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepStart  =  Double.NaN;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	66	1	replace
134	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers  =  new  LinkedList  <  StepHandler>();  this.stepStart  =  Double.NaN;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
135	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	66	None	replace
136	[BUG]  [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  stepsInitialized  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	27	None	replace
137	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	42	None	replace
138	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	42	None	replace
139	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	42	None	replace
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepStart    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  AssertionError  	52	1	replace
141	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepStart    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  AssertionError  	52	1	replace
142	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep);	  stepHandlers.add(new    Integer(stepStart,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	21	None	replace
143	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  name);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  name);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  name);	  stepHandlers.add(new    Integer(stepStart,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	21	None	replace
144	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  0);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  0);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  0);	  stepHandlers.add(new    Integer(stepStart,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	21	None	replace
145	[BUG]  [BUGGY]  stepStart  =  new  Double.NaN;  [CE]  '('  or  '['  expected  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  new  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart  =  new  Double.NaN;	  stepSize    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  '('  or  '['  expected	63	None	replace
146	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  StepHandler(name);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  StepHandler(name);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  StepHandler(name);	  stepSize    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	63	None	replace
147	[BUG]  [BUGGY]  Step  stepSize=  Double.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  Step  stepSize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	Step  stepSize=  Double.MIN_VALUE;	  stepSize=    Double.MIN_VALUE;    Step    stepSize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
148	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE;  [CE]  cannot  find  symbol  NEGATIVE  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NEGATIVE;	  stepSize=    Double.MIN_VALUE;    Step    stepSize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  NEGATIVE	32	None	replace
149	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	8	None	replace
150	[BUG]  [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;	  this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
151	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=        Double.POSITIVE_INFINITY;        stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	9	1	add
152	[BUG]  [BUGGY]  stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.POSITIVE_INFINITY;        stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	9	1	add
153	[BUG]  [BUGGY]  stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.POSITIVE_INFINITY;  StepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  StepSize  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.POSITIVE_INFINITY;  StepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.POSITIVE_INFINITY;        stepSize=    Double.POSITIVE_INFINITY;    StepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  StepSize	9	None	add
154	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepsHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepsHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();  stepsHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	45	None	replace
155	[BUG]  [BUGGY]  stepsHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  stepsHandlers  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepsHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepsHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  stepsHandlers	45	None	replace
156	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	45	None	replace
157	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(-1);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(-1);	  stepSize=    Double.MIN_VALUE;    stepSize=    Double.MIN_VALUE;    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	34	1	replace
158	[BUG]  [BUGGY]  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(-1);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(-1);	  stepSize=    Double.MIN_VALUE;    stepSize=    Double.MIN_VALUE;    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	34	1	replace
159	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(1);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(1);	  stepSize=    Double.MIN_VALUE;    stepSize=    Double.MIN_VALUE;    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	34	1	replace
160	[BUG]  [BUGGY]  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(1);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(1);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(1);	  stepSize=    Double.MIN_VALUE;    stepSize=    Double.MIN_VALUE;    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	34	1	replace
161	[BUG]  [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;	  this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
162	[BUG]  [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepsInitialized  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	44	None	replace
163	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	44	None	replace
164	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  isLastStep);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  isLastStep);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	23	None	replace
165	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  0);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  0);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  0);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	23	None	replace
166	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  hasLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  hasLastStep);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  hasLastStep);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	23	None	replace
167	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  StepHandler(name,  Double.NaN);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  StepHandler(name,  Double.NaN);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  StepHandler(name,  Double.NaN);	  StepHandler    stepStart    =    Double.NaN;    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	50	None	replace
168	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  StepHandler(Double.NaN);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  StepHandler(Double.NaN);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  StepHandler(Double.NaN);	  StepHandler    stepStart    =    Double.NaN;    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	50	None	replace
169	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.MAX_VALUE  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=  Double.MAX_VALUE  +  1;	  stepSize=    Double.MAX_VALUE;    	compilable	  [FE]  AssertionError  	2	1	replace
170	[BUG]  [BUGGY]  stepSize=  Double.MAX_VALUE  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.MAX_VALUE  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.MAX_VALUE  +  1;	  stepSize=    Double.MAX_VALUE;    	compilable	  [FE]  AssertionError  	2	1	replace
171	[BUG]  [BUGGY]  stepSize=  Double.MIN_VALUE;  stepsize=  Double.MAX_VALUE;  [CE]  cannot  find  symbol  stepsize  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.MIN_VALUE;  stepsize=  Double.MAX_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.MIN_VALUE;  stepsize=  Double.MAX_VALUE;	  stepSize=    Double.MIN_VALUE;    stepsize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepsize	71	None	replace
172	[BUG]  [BUGGY]  stepSize=  Double.NaN;  stepsize=  Double.MIN_VALUE;  [CE]  cannot  find  symbol  stepsize  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NaN;  stepsize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NaN;  stepsize=  Double.MIN_VALUE;	  stepSize=    Double.MIN_VALUE;    stepsize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepsize	71	None	replace
173	[BUG]  [BUGGY]  stepSize=  Double.NaN;  StepSize=  Double.MIN_VALUE;  [CE]  cannot  find  symbol  StepSize  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NaN;  StepSize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NaN;  StepSize=  Double.MIN_VALUE;	  stepSize=    Double.MIN_VALUE;    StepSize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  StepSize	31	None	replace
174	[BUG]  [BUGGY]  stepSize=  Double.MIN_VALUE;  StepSize=  Double.MAX_VALUE;  [CE]  cannot  find  symbol  StepSize  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.MIN_VALUE;  StepSize=  Double.MAX_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.MIN_VALUE;  StepSize=  Double.MAX_VALUE;	  stepSize=    Double.MIN_VALUE;    StepSize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  StepSize	31	None	replace
175	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE;  StepSize=  Double.MIN_VALUE;  [CE]  cannot  find  symbol  NEGATIVE  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE;  StepSize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NEGATIVE;  StepSize=  Double.MIN_VALUE;	  stepSize=    Double.MIN_VALUE;    StepSize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  NEGATIVE	31	None	replace
176	[BUG]  [BUGGY]  stepHandlers  =  new  TreeMap  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeMap  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers  =  new  TreeMap  <  StepHandler>();	  stepHandlers    =    new    LinkedList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
177	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MIN_VALUE;    setMaxEvaluations(-1);    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	33	1	add
178	[BUG]  [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MIN_VALUE;    setMaxEvaluations(-1);    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	33	1	add
179	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  setMaxEvaluations(1);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MIN_VALUE;    setMaxEvaluations(-1);    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  setMaxEvaluations(1);	  	compilable	  [FE]  NullPointerException  	33	1	add
180	[BUG]  [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  setMaxEvaluations(1);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);  stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  setMaxEvaluations(1);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MIN_VALUE;    setMaxEvaluations(-1);    stepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  setMaxEvaluations(1);	  	compilable	  [FE]  NullPointerException  	33	1	add
181	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=  Double.POSITIVE_INFINITY  +  2;	  stepSize=    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	58	1	replace
182	[BUG]  [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.POSITIVE_INFINITY  +  2;	  stepSize=    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	58	1	replace
183	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  /  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=  Double.POSITIVE_INFINITY  /  1;	  stepSize=    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	58	1	replace
184	[BUG]  [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  /  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  /  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.POSITIVE_INFINITY  /  1;	  stepSize=    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	58	1	replace
185	[BUG]  [BUGGY]  stepStart=  Double.NEGATIVE_INFINITY;  StepSize=  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  StepSize  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart=  Double.NEGATIVE_INFINITY;  StepSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart=  Double.NEGATIVE_INFINITY;  StepSize=  Double.NEGATIVE_INFINITY;	  stepSize=    Double.NEGATIVE_INFINITY;    StepSize=    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepSize	16	None	replace
186	[BUG]  [BUGGY]  stepSize=  Double.NaN;  StepSize=  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  StepSize  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NaN;  StepSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NaN;  StepSize=  Double.NEGATIVE_INFINITY;	  stepSize=    Double.NEGATIVE_INFINITY;    StepSize=    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepSize	16	None	replace
187	[BUG]  [BUGGY]  stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	26	None	replace
188	[BUG]  [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	26	None	replace
189	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  stepsInitialized  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	38	None	replace
190	[BUG]  [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	38	None	replace
191	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	35	1	add
192	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	35	1	add
193	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	35	1	add
194	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	35	1	add
195	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	35	1	add
196	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	35	1	add
197	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na	  	non-compiled	[CE]  ';'  expected	35	None	add
198	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.N  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.N  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.N	  	non-compiled	[CE]  ';'  expected	35	None	add
199	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	36	1	replace
200	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	36	1	replace
201	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	36	None	replace
202	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	36	1	replace
203	[BUG]  [BUGGY]  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	36	1	replace
204	[BUG]  [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  steps  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	64	None	replace
205	[BUG]  [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	steps  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	64	None	replace
206	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  isLastStep));  [CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  isLastStep));  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart,  isLastStep));	  stepHandlers.add(new    Integer(stepSize,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)	22	None	replace
207	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  isLastStep);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart),  isLastStep);	  stepHandlers.add(new    Integer(stepSize,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	22	None	replace
208	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  0));  [CE]  no  suitable  constructor  found  for  Integer(double,double,int)  [FE]                          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  0));  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart,  0));	  stepHandlers.add(new    Integer(stepSize,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,int)	22	None	replace
209	[BUG]  [BUGGY]  stepsSize=  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  stepsSize  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepsSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepsSize=  Double.NEGATIVE_INFINITY;	  stepSize=    Double.NEGATIVE_INFINITY;    stepsSize=    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  stepsSize	59	None	replace
210	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(0));  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(0));  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(0));	  stepHandlers.add(new    Integer(stepStart    +    1));    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	61	None	replace
211	[BUG]  [BUGGY]  stepSize=  Double.MAX_VALUE;  stepsSize=  Double.MAX_VALUE;  [CE]  cannot  find  symbol  stepsSize  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.MAX_VALUE;  stepsSize=  Double.MAX_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.MAX_VALUE;    stepsSize=  Double.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  stepsSize	1	None	add
212	[BUG]  [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  cannot  find  symbol  steps  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	28	None	replace
213	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	28	None	replace
214	[BUG]  [BUGGY]  stepSize=  Double.NaN;  StepSize=  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  StepSize  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NaN;  StepSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NaN;  StepSize=  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    StepSize=    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepSize	11	None	replace
215	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	43	None	replace
216	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  expandable);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  expandable);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  expandable);	  stepHandlers.add(new    Integer(stepStart,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	21	None	replace
217	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  ObjectList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandlers  stepHandlers  =  new  ObjectList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandlers  stepHandlers  =  new  ObjectList  <  StepHandler>();	  StepHandlers    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
218	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  expandable);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  expandable);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize,  expandable);	  stepHandlers.add(new    Integer(stepStart),    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	60	None	replace
219	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  expansionable);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  expansionable);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize,  expansionable);	  stepHandlers.add(new    Integer(stepStart),    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	60	None	replace
220	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepStart    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	52	None	replace
221	[BUG]  [BUGGY]  stepSize  =  new  ObjectList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  new  ObjectList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  new  ObjectList  <  StepHandler>();  stepStart  =  Double.NaN;	  stepSize    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
222	[BUG]  [BUGGY]  stepSize  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;	  stepSize    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
223	[BUG]  [BUGGY]  if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	42	None	replace
224	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	42	None	replace
225	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	45	None	replace
226	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	64	None	replace
227	[BUG]  [BUGGY]  this.stepHandlers  =  new  ObjectList  <  Integer>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ObjectList  <  Integer>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers  =  new  ObjectList  <  Integer>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    Integer>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
228	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	6	None	replace
229	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  stepsSize=  Double.NEGATIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  stepsSize  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  stepsSize=  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.NEGATIVE_INFINITY    +    1;    stepsSize=  Double.NEGATIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  stepsSize	53	None	add
230	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	27	None	replace
231	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	27	None	replace
232	[BUG]  [BUGGY]  StepHandler  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	38	None	replace
233	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	65	1	add
234	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	65	1	add
235	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	7	1	add
236	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	7	1	add
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	24	1	add
238	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	24	1	add
239	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  steps	24	None	add
240	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	24	None	add
241	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepStart    =    Double.NaN;    stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	48	1	add
242	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart    =    Double.NaN;    stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	48	1	add
243	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  StepStart  =  Double.NaN;  [CE]  cannot  find  symbol  StepStart  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  StepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart    =    Double.NaN;    StepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  StepStart	48	None	add
244	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepEnd  =  Double.NaN;  [CE]  cannot  find  symbol  stepEnd  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepEnd  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart    =    Double.NaN;    stepEnd  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  stepEnd	48	None	add
245	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	44	None	replace
246	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY;  Step  stepSize=  Double.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY;  Step  stepSize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NEGATIVE_INFINITY;  Step  stepSize=  Double.MIN_VALUE;	  stepSize=    Double.MIN_VALUE;    Step    stepSize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
247	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE;  Step  stepSize=  Double.MIN_VALUE;  [CE]  cannot  find  symbol  NEGATIVE  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE;  Step  stepSize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NEGATIVE;  Step  stepSize=  Double.MIN_VALUE;	  stepSize=    Double.MIN_VALUE;    Step    stepSize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  NEGATIVE	32	None	replace
248	[BUG]  [BUGGY]  stepSize=  Double.POSITIVE_INFINITY;  stepHandlersInitialized  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  stepHandlersInitialized  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY;  stepHandlersInitialized  =  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.POSITIVE_INFINITY;  stepHandlersInitialized  =  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    stepsInitialized    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  stepHandlersInitialized	12	None	replace
249	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	66	1	replace
250	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	66	1	replace
251	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	66	1	replace
252	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    	compilable	  [FE]  AssertionError  	66	1	replace
253	[BUG]  [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  StepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  [CE]  cannot  find  symbol  StepSize  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  StepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MIN_VALUE;    StepSize=  Double.MIN_VALUE;  stepSize=  Double.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  StepSize	29	None	add
254	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY;  StepSize=  Double.MIN_VALUE;  [CE]  cannot  find  symbol  StepSize  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY;  StepSize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NEGATIVE_INFINITY;  StepSize=  Double.MIN_VALUE;	  stepSize=    Double.MIN_VALUE;    StepSize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  StepSize	31	None	replace
255	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	25	1	replace
256	[BUG]  [BUGGY]  if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	25	1	replace
257	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	25	None	replace
258	[BUG]  [BUGGY]  if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	25	None	replace
259	[BUG]  [BUGGY]  StepHandler  stepStart  =  isLastStep?  Double.NaN  :  Double.NaN;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  isLastStep?  Double.NaN  :  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  isLastStep?  Double.NaN  :  Double.NaN;	  StepHandler    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	50	None	replace
260	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  Double(Double.NaN);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  Double(Double.NaN);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  Double(Double.NaN);	  StepHandler    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	50	None	replace
261	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  steps  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  steps  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers    =    new    TreeSet    <    StepHandler>();    steps  =  new  TreeSet  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  steps	67	None	add
262	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  StepHandler(this.stepSize  -  1);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  StepHandler(this.stepSize  -  1);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  StepHandler(this.stepSize  -  1);	  StepHandler    stepStart    =    new    StepHandler(this.stepSize);    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	51	None	replace
263	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  StepHandler(this.stepHandlers);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  StepHandler(this.stepHandlers);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  StepHandler(this.stepHandlers);	  StepHandler    stepStart    =    new    StepHandler(this.stepSize);    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	51	None	replace
264	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(2);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(2);	  stepSize=    Double.MIN_VALUE;    stepSize=    Double.MIN_VALUE;    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	34	1	replace
265	[BUG]  [BUGGY]  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(2);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(2);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(2);	  stepSize=    Double.MIN_VALUE;    stepSize=    Double.MIN_VALUE;    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	34	1	replace
266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;	  stepSize=    Double.NEGATIVE_INFINITY;    phaseSize=    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	17	1	replace
267	[BUG]  [BUGGY]  stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NaN;  stepSize=  Double.NEGATIVE_INFINITY;	  stepSize=    Double.NEGATIVE_INFINITY;    phaseSize=    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	17	1	replace
268	[BUG]  [BUGGY]  stepSize=  Double.MIN_VALUE;  stepsize=  Double.NaN;  [CE]  cannot  find  symbol  stepsize  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.MIN_VALUE;  stepsize=  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.MIN_VALUE;  stepsize=  Double.NaN;	  stepSize=    Double.MIN_VALUE;    stepsize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepsize	71	None	replace
269	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	36	None	replace
270	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NaN;  stepSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=  Double.NaN;  stepSize=  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    phaseSize=    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	13	1	replace
271	[BUG]  [BUGGY]  stepSize=  Double.NaN;  stepSize=  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NaN;  stepSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NaN;  stepSize=  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    phaseSize=    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	13	1	replace
272	[BUG]  [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  stepsSize=  Double.POSITIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  stepsSize  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  stepsSize=  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.POSITIVE_INFINITY    +    1;    stepsSize=  Double.POSITIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  stepsSize	57	None	add
273	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  stepSize=  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=    Double.POSITIVE_INFINITY    +    1;    stepSize=  Double.POSITIVE_INFINITY  +  2;	  	compilable	  [FE]  AssertionError  	57	1	add
274	[BUG]  [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  stepSize=  Double.POSITIVE_INFINITY  +  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY  +  1;  stepSize=  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.POSITIVE_INFINITY    +    1;    stepSize=  Double.POSITIVE_INFINITY  +  2;	  	compilable	  [FE]  AssertionError  	57	1	add
275	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Long.NaN;  [CE]  cannot  find  symbol  NaN  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Long.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Long.NaN;	  	non-compiled	[CE]  cannot  find  symbol  NaN	5	None	add
276	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.naN;  [CE]  cannot  find  symbol  naN  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.naN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.naN;	  	non-compiled	[CE]  cannot  find  symbol  naN	5	None	add
277	[BUG]  [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  StepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  StepSize  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  StepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.NEGATIVE_INFINITY;        stepSize=    Double.NEGATIVE_INFINITY;    StepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  StepSize	14	None	add
278	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  expandable);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  expandable);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  expandable);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	23	None	replace
279	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  expansionable);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  expansionable);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  expansionable);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	23	None	replace
280	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  steps	35	None	add
281	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	35	None	add
282	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepSize  ==  null)  {  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	4	None	replace
283	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepStart=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    phaseSize=    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	13	1	replace
284	[BUG]  [BUGGY]  stepStart=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart=  Double.POSITIVE_INFINITY;  stepSize=  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    phaseSize=    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	13	1	replace
285	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  stepStart);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  stepStart);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart),  stepStart);	  stepHandlers.add(new    Integer(stepSize,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	22	None	replace
286	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepHandlers  ==  null)  {  stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepStart    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  incompatible  types	52	None	replace
287	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepHandlers  ==  null)  {  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  if(stepStart    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  incompatible  types	52	None	replace
288	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  state);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  state);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  state);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	23	None	replace
289	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	36	None	replace
290	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepStart=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;	  stepSize=    Double.NEGATIVE_INFINITY;    stepsSize=    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	59	1	replace
291	[BUG]  [BUGGY]  stepStart=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart=  Double.NEGATIVE_INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;	  stepSize=    Double.NEGATIVE_INFINITY;    stepsSize=    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	59	1	replace
292	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    LinkedList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	3	1	replace
293	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    LinkedList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	3	1	replace
294	[BUG]  [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers  =  new  TreeList  <  StepHandler>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    LinkedList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
295	[BUG]  [BUGGY]  if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  stepsHandlers  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  stepsHandlers	45	None	replace
296	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY;  stepsize=  Double.MIN_VALUE;  [CE]  cannot  find  symbol  stepsize  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY;  stepsize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.NEGATIVE_INFINITY;  stepsize=  Double.MIN_VALUE;	  stepSize=    Double.MIN_VALUE;    stepsize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepsize	71	None	replace
297	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepSize  ==  Double.NaN)  {  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	4	None	replace
298	[BUG]  [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  stepsize=  Double.NEGATIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  stepsize  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.NEGATIVE_INFINITY  +  1;  stepsize=  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=    Double.NEGATIVE_INFINITY    +    1;    stepsize=  Double.NEGATIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  stepsize	53	None	add
299	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	24	1	add
300	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	24	1	add
301	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  StepHandler(Double.MAX_VALUE);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  StepHandler(Double.MAX_VALUE);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  StepHandler(Double.MAX_VALUE);	  StepHandler    stepStart    =    Double.NaN;    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	50	None	replace
302	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  StepHandler(Double.NaN,  stepSize);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  StepHandler(Double.NaN,  stepSize);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  StepHandler(Double.NaN,  stepSize);	  StepHandler    stepStart    =    Double.NaN;    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	50	None	replace
303	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>(stepStart);  [CE]  no  suitable  constructor  found  for  TreeSet(double)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>(stepStart);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>(stepStart);	  stepHandlers    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeSet(double)	68	None	replace
304	[BUG]  [BUGGY]  stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  INFINITY  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.INFINITY;  stepSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.POSITIVE_INFINITY;        stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.INFINITY;  stepSize=  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  INFINITY	9	None	add
305	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.NaN;  stepSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=        Double.POSITIVE_INFINITY;        stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.NaN;  stepSize=  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	9	1	add
306	[BUG]  [BUGGY]  stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.NaN;  stepSize=  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.POSITIVE_INFINITY;  stepSize=  Double.NaN;  stepSize=  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.POSITIVE_INFINITY;        stepSize=    Double.POSITIVE_INFINITY;    stepSize=  Double.NaN;  stepSize=  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	9	1	add
307	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandler  stepStart  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	38	None	replace
308	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	38	None	replace
309	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  TreeList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  StepHandlers  stepHandlers  =  new  TreeList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	StepHandlers  stepHandlers  =  new  TreeList  <  StepHandler>();	  StepHandlers    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
310	[BUG]  [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  INFINITY  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.NEGATIVE_INFINITY;  stepSize=  Double.INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.NEGATIVE_INFINITY;        stepSize=    Double.NEGATIVE_INFINITY;    stepSize=  Double.INFINITY;  stepSize=  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  INFINITY	14	None	add
311	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	42	1	replace
312	[BUG]  [BUGGY]  if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	42	1	replace
313	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	42	1	replace
314	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	42	1	replace
315	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  0);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  0);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize,  0);	  stepHandlers.add(new    Integer(stepStart),    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	60	None	replace
316	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	66	None	replace
317	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepStart  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na	  stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepStart    =    Double.NaN;    	non-compiled	[CE]  ';'  expected	66	None	replace
318	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepSize>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize  =  new  ArrayList  <  StepSize>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize  =  new  ArrayList  <  StepSize>();  StepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
319	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(-1);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MIN_VALUE;    setMaxEvaluations(-1);    stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	33	1	add
320	[BUG]  [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=    Double.MIN_VALUE;    stepSize=  Double.MIN_VALUE;  setMaxEvaluations(-1);  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(-1);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=        Double.MIN_VALUE;        stepSize=    Double.MIN_VALUE;    setMaxEvaluations(-1);    stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	33	1	add
321	[BUG]  [BUGGY]  stepSize=  Double.POSITIVE_INFINITY;  StepSize=  Double.MIN_VALUE;  [CE]  cannot  find  symbol  StepSize  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY;  StepSize=  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.POSITIVE_INFINITY;  StepSize=  Double.MIN_VALUE;	  stepSize=    Double.MIN_VALUE;    StepSize=    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  StepSize	31	None	replace
322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	6	1	replace
323	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	6	1	replace
324	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	5	None	add
325	[BUG]  [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  else  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  else  {  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  else  {	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
326	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	8	None	replace
327	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	25	None	replace
328	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	25	1	replace
329	[BUG]  [BUGGY]  if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	25	1	replace
330	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	add	if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	25	1	replace
331	[BUG]  [BUGGY]  if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	if(stepStart  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  AssertionError  	25	1	replace
332	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
333	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.N  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.N  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.N	  	non-compiled	[CE]  ';'  expected	7	None	add
334	[BUG]  [BUGGY]  stepSize=  Double.POSITIVE_INFINITY;  stepInitialized  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  stepInitialized  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;      [BUGGY]  stepSize=  Double.POSITIVE_INFINITY;  stepInitialized  =  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	89	89	1	replace	stepSize=  Double.POSITIVE_INFINITY;  stepInitialized  =  Double.POSITIVE_INFINITY;	  stepSize=    Double.POSITIVE_INFINITY;    stepsInitialized    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  stepInitialized	12	None	replace
