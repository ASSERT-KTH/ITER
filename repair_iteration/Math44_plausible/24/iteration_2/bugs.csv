bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  0,  y,  0,  y.length);	      	non-compiled	[CE]  cannot  find  symbol  expandableODE	5	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  y,  0,  t.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(expandableODE,  0,  y,  0,  t.length);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  0,  y,  0,  t.length);	      	non-compiled	[CE]  cannot  find  symbol  expandableODE	5	None	replace
3	[BUG]  [BUGGY]  t0.setTime(t0);  expandableODE.setPrimaryState(t0);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0.setTime(t0);  expandableODE.setPrimaryState(t0);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0.setTime(t0);  expandableODE.setPrimaryState(t0);	      	non-compiled	[CE]  double  cannot  be  dereferenced	5	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  y.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  y.length);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  t0,  y,  0,  y.length);	      	non-compiled	[CE]  cannot  find  symbol  expandableODE	5	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(t.getDimension(),  0,  y,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(t.getDimension(),  0,  y,  0,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t.getDimension(),  0,  y,  0,  t.length);	      System.arraycopy(equations.getDimension(),    0,    y,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	11	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  [CE]  cannot  find  symbol  expandableODE  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);	      System.arraycopy(equations.getDimension(),    0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	11	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(t.getDimension(),  0,  y,  0,  equations.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(t.getDimension(),  0,  y,  0,  equations.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t.getDimension(),  0,  y,  0,  equations.length);	      System.arraycopy(equations.getDimension(),    0,    y,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	11	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  0,  y.length);  [CE]  cannot  find  symbol  expandableODE  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  0,  y.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  t0,  0,  y.length);	      System.arraycopy(equations.getDimension(),    0,    y,    0,    t0.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	15	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  y,  0,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(t0.getDimension(),  0,  y,  0,  t0.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  y,  0,  t0.length);	      System.arraycopy(equations.getDimension(),    0,    y,    0,    t0.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	15	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  y,  0,  equations.length);  [CE]  cannot  find  symbol  length  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(equations.getDimension(),  0,  y,  0,  equations.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  y,  0,  equations.length);	      System.arraycopy(equations.getDimension(),    0,    y,    0,    t0.length);    	non-compiled	[CE]  cannot  find  symbol  length	15	None	replace
11	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	3	None	replace
12	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t.length);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y);    	non-compiled	[CE]  double  cannot  be  dereferenced	3	None	replace
13	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	3	None	replace
14	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t0);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	3	None	replace
15	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	add	        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	13	1	add
16	[BUG]  [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	13	1	add
17	[BUG]  [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]      ArrayStoreException    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  t.length);	  	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	add
18	[BUG]  [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]        ArrayStoreException    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  t.length);	  	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	add
19	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  expandable);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  expandable);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  expandable);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(expandable);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	17	None	replace
20	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(expandable);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	17	None	replace
21	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t0);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(expandable);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	17	None	replace
22	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	1	None	replace
23	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  t);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  t);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  t);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	1	None	replace
24	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(y0);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	18	None	replace
25	[BUG]  [BUGGY]  t0  =  equations.getT1();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0  =  equations.getT1();  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations.getT1();	      t0    =    equations.getT0();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
26	[BUG]  [BUGGY]  T0  =  equations.getT0();  [CE]  cannot  find  symbol  T0  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  T0  =  equations.getT0();  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	T0  =  equations.getT0();	      t0    =    equations.getT0();    	non-compiled	[CE]  cannot  find  symbol  T0	19	None	replace
27	[BUG]  [BUGGY]  t0  =  Math.max(y0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.max(y0,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(y0,  t.length);	      t0    =    Math.max(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	21	None	replace
28	[BUG]  [BUGGY]  t0  =  Math.max(t1,  y.length);  [CE]  cannot  find  symbol  t1  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.max(t1,  y.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(t1,  y.length);	      t0    =    Math.max(t0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  t1	21	None	replace
29	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  break;  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  break;  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [CE]  '.class'  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  '.class'  expected	9	None	replace
31	[BUG]  [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [CE]  >  expected  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  >  expected	9	None	replace
32	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(y0);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  Integer  t0  =(Integer)equations.get(y0);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(y0);	      Integer    t0    =(Integer)equations.get(t0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	6	None	replace
33	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(0);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  Integer  t0  =(Integer)equations.get(0);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(0);	      Integer    t0    =(Integer)equations.get(t0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	6	None	replace
34	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(y);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  Integer  t0  =(Integer)equations.get(y);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(y);	      Integer    t0    =(Integer)equations.get(t0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	6	None	replace
35	[BUG]  [BUGGY]  Integer  t0  =(Integer)equivalences.get(t0);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  Integer  t0  =(Integer)equivalences.get(t0);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equivalences.get(t0);	      Integer    t0    =(Integer)equations.get(t0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	6	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  0,  equations.length);  [CE]  cannot  find  symbol  length  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  0,  equations.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  t0,  0,  equations.length);	      System.arraycopy(equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  length	16	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t0,  0,  equations.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t0,  0,  equations.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  t0,  0,  equations.length);	      System.arraycopy(equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  t0,  0,  t.length);  [CE]  cannot  find  symbol  equivalents  [FE]                    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalents.getDimension(),  0,  t0,  0,  t.length);	      System.arraycopy(equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  equivalents	16	None	replace
39	[BUG]  [BUGGY]  t0  =  Math.max(t0,  ts.length);  [CE]  cannot  find  symbol  ts  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.max(t0,  ts.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(t0,  ts.length);	      t0    =    Math.max(t0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  ts	20	None	replace
40	[BUG]  [BUGGY]  t0  =  equations.getDimension()  +  1;  [CE]  cannot  find  symbol  expandableODE  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0  =  equations.getDimension()  +  1;  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations.getDimension()  +  1;	      t0    =    equations.getDimension();    	non-compiled	[CE]  cannot  find  symbol  expandableODE	12	None	replace
41	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
42	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  '.class'  expected  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  '.class'  expected	10	None	replace
43	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  '.class'  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  '.class'  expected	8	None	replace
47	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0.length,  y.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0.length,  y.length);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0.length,  y.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	4	None	replace
48	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0.length  -  1);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0.length  -  1);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0.length  -  1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	4	None	replace
49	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator(t);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  Integrator  t0  =  equations.getIntegrator(t);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator(t);	      Integrator    t0    =    equations.getIntegrator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
50	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator(0);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  Integrator  t0  =  equations.getIntegrator(0);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator(0);	      Integrator    t0    =    equations.getIntegrator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
51	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator(t0);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  Integrator  t0  =  equations.getIntegrator(t0);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator(t0);	      Integrator    t0    =    equations.getIntegrator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
52	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  '.class'  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  '.class'  expected	7	None	replace
54	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  1;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  equations);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  equations);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	2	None	replace
56	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  equations);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  equations);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	2	None	replace
57	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  equations);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  equations);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	2	None	replace
58	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  arrays);  [CE]  cannot  find  symbol  arrays  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  arrays);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  arrays);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations);    	non-compiled	[CE]  cannot  find  symbol  arrays	2	None	replace
59	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  t1);  [CE]  cannot  find  symbol  t1  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  t1);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations);    	non-compiled	[CE]  cannot  find  symbol  t1	2	None	replace
60	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  expansion);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  expansion);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations);    	non-compiled	[CE]  cannot  find  symbol  expansion	2	None	replace
61	[BUG]  [BUGGY]  T0  t0  =  equations.getT0();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  T0  t0  =  equations.getT0();  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	T0  t0  =  equations.getT0();	      t0    =    equations.getT0();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
62	[BUG]  [BUGGY]  t0  =  equations,  equations.getT0();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0  =  equations,  equations.getT0();  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations,  equations.getT0();	      t0    =    equations.getT0();    	non-compiled	[CE]  ';'  expected	19	None	replace
63	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  t1);  [CE]  cannot  find  symbol  t1  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  t1);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0);    	non-compiled	[CE]  cannot  find  symbol  t1	1	None	replace
65	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  t.length);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  t.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	4	None	replace
66	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
67	[BUG]  [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  Arrays.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [CE]  cannot  find  symbol  Arrays  [FE]    ArrayStoreException    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  Arrays.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    Arrays.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  Arrays	13	None	add
68	[BUG]  [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  x,  0,  x.length);  [CE]  cannot  find  symbol  x  [FE]      ArrayStoreException    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  x,  0,  x.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  x,  0,  x.length);	  	non-compiled	[CE]  cannot  find  symbol  x	13	None	add
69	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	add	        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	13	1	add
70	[BUG]  [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	13	1	add
71	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  0,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  0,  t0.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  t0,  0,  t0.length);	      System.arraycopy(equations.getDimension(),    0,    y,    0,    t0.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	15	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  y0,  0,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(equations.getDimension(),  0,  y0,  0,  t0.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  y0,  0,  t0.length);	      System.arraycopy(equations.getDimension(),    0,    y,    0,    t0.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	15	None	replace
73	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  t.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  t.length);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  t0,  y,  0,  t.length);	      	non-compiled	[CE]  cannot  find  symbol  expandableODE	5	None	replace
74	[BUG]  [BUGGY]  ExpandableODE  t0  =  equations.getDimension();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  ExpandableODE  t0  =  equations.getDimension();  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	ExpandableODE  t0  =  equations.getDimension();	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(expandableODE,  t0);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  t0);	      	non-compiled	[CE]  cannot  find  symbol  expandableODE	5	None	replace
76	[BUG]  [BUGGY]  t0  =  Math.max(t0,  y);  [CE]  no  suitable  method  found  for  max(double,double[])  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.max(t0,  y);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(t0,  y);	      t0    =    Math.max(t0,    y.length);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double[])	21	None	replace
77	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(x0);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  Integer  t0  =(Integer)equations.get(x0);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(x0);	      Integer    t0    =(Integer)equations.get(t0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	6	None	replace
78	[BUG]  [BUGGY]  Integrator  t0  =  Equations.getIntegrator(equations);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  Integrator  t0  =  Equations.getIntegrator(equations);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  Equations.getIntegrator(equations);	      Integrator    t0    =    equations.getIntegrator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
79	[BUG]  [BUGGY]  Integrator  t0  =  equations,  equations.getIntegrator();  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  Integrator  t0  =  equations,  equations.getIntegrator();  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations,  equations.getIntegrator();	      Integrator    t0    =    equations.getIntegrator();    	non-compiled	[CE]  ';'  expected	22	None	replace
80	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t,  0,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  t,  0,  t.length);	      System.arraycopy(equations.getDimension(),    0,    y,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	11	None	replace
82	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	3	None	replace
83	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t1);  [CE]  cannot  find  symbol  t1  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t1);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y);    	non-compiled	[CE]  cannot  find  symbol  t1	3	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t0,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  t0,  0,  t.length);	      System.arraycopy(equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  1,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  1,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  t0,  1,  t.length);	      System.arraycopy(equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  y0,  0,  y.length);  [CE]  cannot  find  symbol  expandableODE  [FE]    ArrayStoreException    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(equations.getDimension(),  0,  y0,  0,  y.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  y0,  0,  y.length);	      System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	14	None	replace
87	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
88	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
89	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
90	[BUG]  [BUGGY]  t0  =  equations.getDimension();  expandableODE.setPrimaryState(t0);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0  =  equations.getDimension();  expandableODE.setPrimaryState(t0);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations.getDimension();  expandableODE.setPrimaryState(t0);	      	non-compiled	[CE]  cannot  find  symbol  expandableODE	5	None	replace
91	[BUG]  [BUGGY]  int  t0  =  equations.getDimension();  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  int  t0  =  equations.getDimension();  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  t0  =  equations.getDimension();	      	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	5	None	replace
92	[BUG]  [BUGGY]  t0  =  equations.getDimension();  expandableODE.setPrimaryState(y0);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0  =  equations.getDimension();  expandableODE.setPrimaryState(y0);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations.getDimension();  expandableODE.setPrimaryState(y0);	      	non-compiled	[CE]  cannot  find  symbol  expandableODE	5	None	replace
93	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1,  equations);  [CE]  cannot  find  symbol  y1  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1,  equations);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations);    	non-compiled	[CE]  cannot  find  symbol  y1	2	None	replace
94	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  t0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  t0);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  t0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	2	None	replace
95	[BUG]  [BUGGY]  t0  =  Math.max(y0.length,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.max(y0.length,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(y0.length,  t.length);	      t0    =    Math.max(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	21	None	replace
96	[BUG]  [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t0,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]    ArrayStoreException    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]      System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t0,  0,  t.length);	  	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	add
97	[BUG]  [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  >  expected	10	None	replace
98	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
99	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t1);  [CE]  cannot  find  symbol  t1  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t1);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(expandable);    	non-compiled	[CE]  cannot  find  symbol  t1	17	None	replace
100	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator2();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  Integrator  t0  =  equations.getIntegrator2();  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator2();	      Integrator    t0    =    equations.getIntegrator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
101	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  elements.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  y,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(t0.getDimension(),  0,  y,  0,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  y,  0,  t.length);	      System.arraycopy(equations.getDimension(),    0,    y,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	11	None	replace
103	[BUG]  [BUGGY]  t0  =  equations,  y.getT0();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0  =  equations,  y.getT0();  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations,  y.getT0();	      t0    =    equations.getT0();    	non-compiled	[CE]  ';'  expected	19	None	replace
104	[BUG]  [BUGGY]  t0  =  equations.getDimension()  +  2;  [CE]  cannot  find  symbol  expandableODE  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  t0  =  equations.getDimension()  +  2;  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations.getDimension()  +  2;	      t0    =    equations.getDimension();    	non-compiled	[CE]  cannot  find  symbol  expandableODE	12	None	replace
105	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1);  [CE]  cannot  find  symbol  y1  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0);    	non-compiled	[CE]  cannot  find  symbol  y1	1	None	replace
106	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t1);  [CE]  cannot  find  symbol  t1  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t1);  [BUGGY]    expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y);    	non-compiled	[CE]  cannot  find  symbol  t1	3	None	replace
107	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  break;  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  break;  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
108	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
109	[BUG]  [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	      for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  >  expected	8	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(equations,  equations.getDimension(),  0,  t0,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(equations,  equations.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations,  equations.getDimension(),  0,  t0,  0,  t.length);	      System.arraycopy(equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(t1.getDimension(),  0,  t0,  0,  t.length);  [CE]  cannot  find  symbol  t1  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }      [BUGGY]  System.arraycopy(t1.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]    final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t1.getDimension(),  0,  t0,  0,  t.length);	      System.arraycopy(equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  t1	16	None	replace
