projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalStringname){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.equals(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepStart,finalStringname){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>stepHandlers=newHashSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85if(isLastStep){super();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85if(!isLastStep){super();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85if(isLastStep){super();}else{setMaxEvaluations(-1);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(0,0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Incrementor>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Incrementor>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Incrementor>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Incrementor>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this.statesInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,ExpandableStatefulODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,expansionable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.equals(this.expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=name.equals(expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.equals(name)&&isLastStep;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(-1,type);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepStart,finalStringname){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepStart,finalStringname){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepStart,finalintstepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepStart,finaldoublestepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expr);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(name,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.equals(name)?ExpandableStatefulODE:ExpandableStatefulODE;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.events=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.isExpandable();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Increment>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Increment>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(-1,evaluations);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>stepHandlers=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85HashSet<Increment>stepHandlers=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.stepHandlers=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Incrementor>stepHandlers=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Incrementor>stepHandlers=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>stepHandlers=newTreeSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Increment>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Increment>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepSize,finaldoublestepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepStart,finalintStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,true);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.create(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.getInstance();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(2);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85This.expandable=ExpandableStatefulODE.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expansionable.equals(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this.expable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expanable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Increment>stepHandlers=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.errors=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(this.stepStart);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,newIncrementor());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(this.name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>stepHandlers=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(2);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>evaluations=newHashSet<Incrementor>();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(name,expansionable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Increment>stepHandlers=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.expandable();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.expandable(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,ExpandableStatefulODE.DEFAULT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor("Integrator");
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expansionable.equals(this.expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepStart,finaldoublestepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepStart,finaldoublestepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>evaluations=newHashSet<Incrementor>();setMaxEvaluations(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.stepHandlers=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.stepHandlers|=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.stepHandlers=Sets.newHashSet();isFirstStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(0,1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepStart,finalintstepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(stepStart,stepSize,null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Incrementor>steps=Lists.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.isExpandable()&&isLastStep;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.isExpandable()?null:expandable.isExpandable();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.getExpandable();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Increment>stepHandlers=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.events=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger(2);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger(4);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expansionable,name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expansion,name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expansions,name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expandeable,name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>steps=Lists.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>steps=Sets.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>stepHandlers=Sets.newHashSet(eventsStates);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>stepHandlers=Sets.newHashSet(stepStart);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Increment>stepHandlers=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85if(isLastStep){ArrayList<Increment>stepHandlers=Sets.newHashSet();isLastStep=true;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this.statesInitialized,this.stepStart);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this.statesInitialized,this.stepSize);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.equals(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(-1,evaluations,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(0,evaluations);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(-1,evaluations,0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(-1,evaluations,true);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Increment>stepHandlers=Sets.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expanable,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expanable,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(this.expanable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expanable,expansion);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85HashSet<Increment>stepHandlers=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85HashSet<Increment>stepHandlers=Sets.newHashSet();isFirstStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,isLastStep+1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,isFirstStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,isLastStep,statesInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,isLastStep,isInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepStart,finalintStep,isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepSize,finalintStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finalintStep,finaldoublestepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finalintStep,stepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>evaluations=newHashSet<Incrementor>();setMaxEvaluations(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>evaluations=newLinkedHashSet<Incrementor>();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.expandable=isLastStep;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.expandable=expandable;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.expandable=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.expandable=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.errors=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.errors|=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Error.this.errors=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.errors=Collections.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(expansionable,null,name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,expansionable,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,expandable,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(null,null,expansionable,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,evaluations,newIncrementor());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,newIncrementor(),evaluations);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,newIncrementor(),isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.name=name;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expable,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expable,this.statesInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expable,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(this.expable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expandable,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expandable,this.statesInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expandable,false);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(expansion,null,ExpandableStatefulODE.DEFAULT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(expansions,null,ExpandableStatefulODE.DEFAULT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(expanded,null,ExpandableStatefulODE.DEFAULT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,ExpandableStatefulODE.DEFAULT,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.create(name,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.create(name,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.create(this.name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,expandable,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,expandable,true);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85This.expandable=ExpandableStatefulODE.newInstance();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Increment>steps=Lists.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.events=newLinkedList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.events=newjava.util.ArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.events=newHashSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(expansion,null,name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(null,null,expandable,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Incrementor>steps=Sets.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=expandable.getInstance();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.getExpr();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=expandable.getExpr();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepSize,finalStringname){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finalintstepStart,finalStringname){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepStart,finalStringname,booleanisLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepStart,finalStringname,intstepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger(0,1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=name.equals(expandable)?ExpandableStatefulODE:ExpandableStatefulODE;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.equals(expandable)?ExpandableStatefulODE:ExpandableStatefulODE;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=isLastStep?ExpandableStatefulODE.equals(expandable):ExpandableStatefulODE;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(name,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(name.toLowerCase());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(this.stepSize);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(this.stepStart,this.stepSize);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(this.stepSize,this.stepStart);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(this.stepStart,stepSize);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this.expable,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this.expable,this.stepStart);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Incrementor>stepHandlers=Sets.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,false);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=isLastStep.equals(expandable)&&expandable;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=name.equals(expandable)&&isLastStep;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=isLastStep.equals(expanable)&&expandable;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=isLastStep;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.events=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>stepHandlers=newTreeSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Incrementor>stepHandlers=newTreeSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(-1,type,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>evaluations=newHashSet<Incrementor>();setMaxEvaluations(-1,type);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(-1,type,0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepSize,finaldoublestepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor("Integrator",name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor("Integrator,");
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>stepHandlers=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(3);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger(name,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger(name,1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.expandable();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createExpandable();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>stepHandlers=Sets.newHashSet(eventsStates);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>stepHandlers=Sets.newHashSet(stepStart);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(name,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(name,1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(this.name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expansionable;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expr,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expr,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expr,expansion);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expr,this.statesInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.expandable(name,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.expandable(name,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.expandable(this.name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.equals(this.expandableStatefulODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(0,1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(this.name,name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(this.name,this.stepStart);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepSize,finalInteger.MAX_VALUE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepSize,true);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expansionable.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepSize,finalintstepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finalintstepSize,finalintstepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expansionable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expansionable.getName(),name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expansionable.name,name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85finalCollection<Incrementor>stepHandlers=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>stepHandlers=newLinkedList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(1,1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepStart,finalStringstepHandlers){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepStart,finalStringstepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepStart,finalintstepSize,finalStringname){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(expansion,null,ExpandableStatefulODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,ExpandableStatefulODE,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(expansions,null,ExpandableStatefulODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(expandeable,null,ExpandableStatefulODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Increment>steps=Sets.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=expandable.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulOccurred.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>steps=Lists.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>steps=Sets.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(name,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85((ExpandableStatefulODE)this).expandable=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepStart,finalintStep,expandable){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepStart,finalintStep,0){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(3);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85This.events=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85&&!isLastStep){super();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.checkState(!isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85&&isLastStep){super();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,isLastStep-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expable,name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(expable,null,name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionErrorevaluations=newIncrementor();setMaxEvaluations(-1,type);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expandable,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expandable,stateStates);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.expandable(null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,expansionable,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,expandable-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(this.name,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor("Integrator:");
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor("Integrator());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalcharstepSize,finaldoublestepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this.name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this.statesInitialized,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>evaluations=newHashSet<Incrementor>();setMaxEvaluations(2);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionErrorevaluations=newIncrementor();setMaxEvaluations(2);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(0,0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,newIncrementor(),evaluates);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(null,stepStart,name){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepStart,String.valueOf(stepSize)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalcharstepStart,finaldoublestepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.equals(this.expandable)?ExpandableStatefulODE:ExpandableStatefulODE;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(-1,evaluations,stepStart);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>stepHandlers=Sets.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError<Increment>stepHandlers=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(expandeable,null,ExpandableStatefulODE.DEFAULT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Increment>steps=Sets.newLinkedList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expansionable.equals(name)&&isLastStep;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.equals(name)&&isFirstStep;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Incrementor>stepHandlers=newTreeSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expanable,null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this.expable,this.lastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(null,expandable,ExpandableStatefulODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Incrementor>evaluations=newArrayList<Incrementor>();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>stepHandlers=Sets.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.getExpandable();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepSize,finalStringname){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Incrementor>steps=Sets.newLinkedList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger(name,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this,ExpandableStatefulODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Incrementor>steps=Sets.newLinkedList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.checkState(isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Increment>steps=Sets.newLinkedList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.stepHandlers=Collections.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expable,this.isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expable,evaluates);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.create(this.expr);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.checkNotNull(stepHandlers);isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expr.getIntValue());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(this.stepStart-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(this.stepStart-stepSize);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expansionable.isExpandable();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expansionable.equals(name)||expansionable.equals(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepStart,finalStringname,intstepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expanable,expandable.isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(-2,evaluations);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepStart,finalStringname,Integer.MAX_VALUE){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<EventState>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<String>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85if(isLastStep&&isInitialized){super();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85if(isLastStep||isInitialized){super();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expansionable.equals(name)?ExpandableStatefulODE:ExpandableStatefulODE;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expable,expansion);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expable,expandable.isLastStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.create(name-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,ExpandableStatefulODE.DEFAULT,expansionable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable<=1?ExpandableStatefulODE:ExpandableStatefulODE;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85setMaxEvaluations(-1,type);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>stepHandlers=Sets.newHashSet(events);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,newIncrementor(),expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepStart,finallongstepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expr,expansionable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85if(!isLastStep&&isInitialized){super();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepSize,finalintstepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>steps=Sets.newHashMap();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85This.expandable=expandable.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,expandable,null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,expandable,0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>evaluations=newHashSet<Incrementor>();setMaxEvaluations(-1,-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.reset();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(this.stepStart+1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,expandable,ExpandableStatefulODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expandable,expandable.isLastStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expandable,expansion);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>stepHandlers=Sets.newHashSet(events);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85if(isLastStep){List<Increment>stepHandlers=Sets.newHashSet();isLastStep=true;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expansionable.getName(),expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>steps=Sets.newHashMap();
