bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  Incrementor>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  This.eventsStates  =  new  ArrayList  <  Incrementor>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	This.eventsStates  =  new  ArrayList  <  Incrementor>();  isLastStep  =  true;	  if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    Incrementor>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  This	61	None	replace
2	[BUG]  [BUGGY]  stepSize  =  true;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepSize  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepSize  =  true;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    true;    	non-compiled	[CE]  incompatible  types	58	None	replace
3	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    true;    	non-compiled	[CE]  incompatible  types	58	None	replace
4	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  true;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  true;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    true;    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
5	[BUG]  [BUGGY]  setMaxEvaluations(evaluations,  stepStart);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Incrementor,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(evaluations,  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(evaluations,  stepStart);	  setMaxEvaluations(evaluations);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Incrementor,double)	85	None	replace
6	[BUG]  [BUGGY]  setMaxEvaluations(evaluations,  stepSize);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Incrementor,double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(evaluations,  stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(evaluations,  stepSize);	  setMaxEvaluations(evaluations);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Incrementor,double)	85	None	replace
7	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize);  [CE]  no  suitable  constructor  found  for  ArrayList(double)  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize);	  stepHandlers    =    new    ArrayList    <    StepHandler>(stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double)	129	None	replace
8	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  ArrayList(double,double)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize,  stepStart);	  stepHandlers    =    new    ArrayList    <    StepHandler>(stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double,double)	129	None	replace
9	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates);  [CE]  no  suitable  constructor  found  for  ArrayList(Collection<EventState>)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates);	  stepHandlers    =    new    ArrayList    <    StepHandler>(stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Collection<EventState>)	129	None	replace
10	[BUG]  [BUGGY]  stepStart  =  false;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepStart  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepStart  =  false;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    false;    	non-compiled	[CE]  incompatible  types	135	None	replace
11	[BUG]  [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  false;  [CE]  cannot  find  symbol  stepsInitialized  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  false;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    false;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	135	None	replace
12	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(0);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(2);    setMaxEvaluations(0);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	107	1	add
14	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(0);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(0);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(2);    setMaxEvaluations(0);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	107	1	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(0);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(2);    setMaxEvaluations(0);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	107	1	add
16	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(0);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(0);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(2);    setMaxEvaluations(0);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	107	1	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	107	1	add
18	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	107	1	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	107	1	add
20	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	107	1	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(0);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(2);    setMaxEvaluations(0);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	107	1	add
22	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(0);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(0);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(2);    setMaxEvaluations(0);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	107	1	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size());  setMaxEvaluations(eventsStates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(eventsStates.size());    setMaxEvaluations(eventsStates.size());	  	compilable	  [FE]  AssertionError  	88	1	add
24	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.size());  setMaxEvaluations(eventsStates.size());  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size());  setMaxEvaluations(eventsStates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.size());    setMaxEvaluations(eventsStates.size());	  	compilable	  [FE]  AssertionError  	88	1	add
25	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  EventState>  setMaxEvaluations(eventsStates.size());  [CE]  ';'  expected  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  EventState>  setMaxEvaluations(eventsStates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.size());    Set  <  EventState>  setMaxEvaluations(eventsStates.size());	  	non-compiled	[CE]  ';'  expected	88	None	add
26	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  Incrementor>  setMaxEvaluations(eventsStates.size());  [CE]  ';'  expected  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  Incrementor>  setMaxEvaluations(eventsStates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.size());    Set  <  Incrementor>  setMaxEvaluations(eventsStates.size());	  	non-compiled	[CE]  ';'  expected	88	None	add
27	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.size());  setEvaluations(eventsStates.size());  [CE]  cannot  find  symbol  [FE]          MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size());  setEvaluations(eventsStates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.size());    setEvaluations(eventsStates.size());	  	non-compiled	[CE]  cannot  find  symbol	88	None	add
28	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  stepSize,  stepStart);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,double,double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  stepSize,  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  stepSize,  stepStart);	  setMaxEvaluations(eventsStates,    stepStart);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,double,double)	45	None	replace
29	[BUG]  [BUGGY]  setMaxEvaluations(stepHandlers,  eventsStates,  stepStart);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<StepHandler>,Collection<EventState>,double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(stepHandlers,  eventsStates,  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(stepHandlers,  eventsStates,  stepStart);	  setMaxEvaluations(eventsStates,    stepStart);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<StepHandler>,Collection<EventState>,double)	45	None	replace
30	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  stepStart,  statesInitialized);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,double,boolean)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  stepStart,  statesInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  stepStart,  statesInitialized);	  setMaxEvaluations(eventsStates,    stepStart);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,double,boolean)	45	None	replace
31	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  stepStart,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,double,Incrementor)  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  stepStart,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  stepStart,  evaluations);	  setMaxEvaluations(eventsStates,    stepStart);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,double,Incrementor)	45	None	replace
32	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	104	1	add
33	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	104	1	add
34	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
35	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
36	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
37	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
38	[BUG]  [BUGGY]  this.eventsStates  =  Lists.emptyList();  [CE]  cannot  find  symbol  Lists  [FE]          UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Lists.emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  Lists.emptyList();	          this.eventsStates    =    Collections.emptyList();    if(this.eventsStates!=    Collections.emptyList())    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    setMaxEvaluations(-1);    resetEvaluations();    }    	non-compiled	[CE]  cannot  find  symbol  Lists	132	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(1);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(1);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	72	1	add
40	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(1);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(1);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(1);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	72	1	add
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(2);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(2);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	72	1	add
42	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(2);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(2);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(2);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	72	1	add
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(1);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(1);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	72	1	add
44	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(1);  setMaxEvaluations(4);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(1);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(1);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	72	1	add
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(2);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(2);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	72	1	add
46	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(2);  setMaxEvaluations(4);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(2);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(2);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	72	1	add
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(3);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(3);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	72	1	add
48	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(3);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(3);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(3);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	72	1	add
49	[BUG]  [BUGGY]  setEvaluations(eventsStates);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvaluations(eventsStates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvaluations(eventsStates);	  setEvaluations(events);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
50	[BUG]  [BUGGY]  setEvaluations(statesInitialized);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvaluations(statesInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvaluations(statesInitialized);	  setEvaluations(events);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
51	[BUG]  [BUGGY]  setEvaluations(errors);  [CE]  cannot  find  symbol  errors  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvaluations(errors);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvaluations(errors);	  setEvaluations(events);    	non-compiled	[CE]  cannot  find  symbol  errors	84	None	replace
52	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  evaluations.size()  -  1);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  evaluations.size()  -  1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  evaluations.size()  -  1);	  setMaxEvaluations(-1L,    evaluations.size());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
53	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  stepSize.size());  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  stepSize.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  stepSize.size());	  setMaxEvaluations(-1L,    evaluations.size());    	non-compiled	[CE]  double  cannot  be  dereferenced	6	None	replace
54	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  stepsInitialized.size());  [CE]  cannot  find  symbol  stepsInitialized  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  stepsInitialized.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  stepsInitialized.size());	  setMaxEvaluations(-1L,    evaluations.size());    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	6	None	replace
55	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	          this.eventsStates    =    Collections.emptyList();    if(this.eventsStates!=    Collections.emptyList())    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    resetEvaluations();    }    	compilable	  [FE]  UnsupportedOperationException  	134	1	replace
56	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	          this.eventsStates    =    Collections.emptyList();    if(this.eventsStates!=    Collections.emptyList())    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    resetEvaluations();    }    	compilable	  [FE]  UnsupportedOperationException  	134	1	replace
57	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepsInitialized  =  true;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepsInitialized  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepsInitialized  =  true;	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
58	[BUG]  [BUGGY]  stepsInitialized  =  true;  [CE]  cannot  find  symbol  stepsInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepsInitialized  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepsInitialized  =  true;	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	99	None	replace
59	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	91	None	replace
60	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	91	None	replace
61	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  MaxCountExceededException  	91	1	replace
62	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  MaxCountExceededException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  MaxCountExceededException  	91	1	replace
63	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  Collections.EMPTYList();	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
64	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;	  	compilable	  [FE]  UnsupportedOperationException  	7	1	add
65	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;	  	compilable	  [FE]  UnsupportedOperationException  	7	1	add
66	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	7	1	add
67	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	7	1	add
68	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  This.eventsStates  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  This  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  This.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    This.eventsStates  =  Collections.EMPTY_LIST;	  	non-compiled	[CE]  cannot  find  symbol  This	7	None	add
69	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	7	1	add
70	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	7	1	add
71	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  stepSize,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,double,Incrementor)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  stepSize,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  stepSize,  evaluations);	  setMaxEvaluations(eventsStates,    evaluations);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,double,Incrementor)	42	None	replace
72	[BUG]  [BUGGY]  setMaxEvaluations(events,  stepSize,  evaluations);  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(events,  stepSize,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(events,  stepSize,  evaluations);	  setMaxEvaluations(eventsStates,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  events	42	None	replace
73	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  stepsInitialized,  evaluations);  [CE]  cannot  find  symbol  stepsInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  stepsInitialized,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  stepsInitialized,  evaluations);	  setMaxEvaluations(eventsStates,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	42	None	replace
74	[BUG]  [BUGGY]  setMaxEvaluations(exprs);  [CE]  cannot  find  symbol  exprs  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(exprs);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(exprs);	  setMaxEvaluations(evaluators);    	non-compiled	[CE]  cannot  find  symbol  exprs	109	None	replace
75	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  LinkedList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandlers  stepHandlers  =  new  LinkedList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandlers  stepHandlers  =  new  LinkedList  <  StepHandler>();	  StepHandlers    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
76	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandlers  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandlers  stepHandlers  =  new  TreeSet  <  StepHandler>();	  StepHandlers    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
77	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>();	  StepHandlers    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
78	[BUG]  [BUGGY]  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	Set  <  Increment>  steps  =  new  HashSet  <  Increment>();	  setMaxEvaluations(2);    Set    <    Increment>    steps    =    new    HashSet    <    Increment>();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
79	[BUG]  [BUGGY]  setMaxEvaluations(1);  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();	  setMaxEvaluations(2);    Set    <    Increment>    steps    =    new    HashSet    <    Increment>();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
80	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	118	1	replace
81	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	118	1	replace
82	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	118	1	replace
83	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  MaxCountExceededException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	118	1	replace
84	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	118	1	replace
85	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  MaxCountExceededException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	118	1	replace
86	[BUG]  [BUGGY]  setMaxEvaluations(1.0);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double)  [FE]        MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1.0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1.0);	  setMaxEvaluations(1);    setMaxEvaluations(1.0);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double)	112	None	replace
87	[BUG]  [BUGGY]  setMaxEvaluations(1);  setMaxEvaluations(1.0,  evaluations.size());  [CE]  cannot  find  symbol  [FE]          MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);  setMaxEvaluations(1.0,  evaluations.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);  setMaxEvaluations(1.0,  evaluations.size());	  setMaxEvaluations(1);    setMaxEvaluations(1.0);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
88	[BUG]  [BUGGY]  setMaxEvaluations(1.0,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double,Incrementor)  [FE]            MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1.0,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1.0,  evaluations);	  setMaxEvaluations(1);    setMaxEvaluations(1.0);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double,Incrementor)	112	None	replace
89	[BUG]  [BUGGY]  setMaxEvaluations(stepStart,  stepSize);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double,double)  [FE]          MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(stepStart,  stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(stepStart,  stepSize);	  setMaxEvaluations(stepSize);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double,double)	48	None	replace
90	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  stepSize);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,double)  [FE]            MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  stepSize);	  setMaxEvaluations(stepSize);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,double)	48	None	replace
91	[BUG]  [BUGGY]  setMaxEvaluations(stepSize,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double,Incrementor)  [FE]              MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(stepSize,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(stepSize,  evaluations);	  setMaxEvaluations(stepSize);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double,Incrementor)	48	None	replace
92	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  evaluations.size);  [CE]  cannot  find  symbol  size  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  evaluations.size);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  evaluations.size);	  setMaxEvaluations(-1L,    evaluations.length);    	non-compiled	[CE]  cannot  find  symbol  size	120	None	replace
93	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  stepSize.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  stepSize.length);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  stepSize.length);	  setMaxEvaluations(-1L,    evaluations.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	120	None	replace
94	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  stepSize);  [CE]  no  suitable  method  found  for  setMaxEvaluations(long,double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  stepSize);	  setMaxEvaluations(-1L,    evaluations.length);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(long,double)	120	None	replace
95	[BUG]  [BUGGY]  if(steps!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  steps  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(steps!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(steps!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	98	None	replace
96	[BUG]  [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	steps  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	98	None	replace
97	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	98	None	replace
98	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
99	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
100	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
101	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
102	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  setMaxEvaluations(-1);  resetEvaluations();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  setMaxEvaluations(-1);  resetEvaluations();  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	add
103	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  This.eventsStates  =  Collections.  <  EventState>emptyList();  [CE]  cannot  find  symbol  This  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  This.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    This.eventsStates  =  Collections.  <  EventState>emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	9	None	add
104	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
105	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
106	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	94	None	add
107	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	94	None	add
108	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	94	None	add
109	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	94	None	add
110	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	94	None	add
111	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	116	None	replace
112	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  >  expected	31	None	replace
113	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  >  expected	31	None	replace
114	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	compilable	  [FE]  MaxCountExceededException  	31	1	replace
115	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  MaxCountExceededException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	compilable	  [FE]  MaxCountExceededException  	31	1	replace
116	[BUG]  [BUGGY]  setEvaluations(eventsStates.size());  [CE]  cannot  find  symbol  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvaluations(eventsStates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvaluations(eventsStates.size());	  setMaxEvaluations(eventsStates.size());    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size()  -  1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(eventsStates.size()  -  1);	  setMaxEvaluations(eventsStates.size());    	compilable	  [FE]  AssertionError  	89	1	replace
118	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.size()  -  1);  [FE]  AssertionError  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size()  -  1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.size()  -  1);	  setMaxEvaluations(eventsStates.size());    	compilable	  [FE]  AssertionError  	89	1	replace
119	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size()  +  1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(eventsStates.size()  +  1);	  setMaxEvaluations(eventsStates.size());    	compilable	  [FE]  MaxCountExceededException  	89	1	replace
120	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.size()  +  1);  [FE]  MaxCountExceededException  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size()  +  1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.size()  +  1);	  setMaxEvaluations(eventsStates.size());    	compilable	  [FE]  MaxCountExceededException  	89	1	replace
121	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	35	1	add
122	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	35	1	add
123	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	35	None	add
124	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	35	1	add
125	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	35	1	add
126	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.EMPTYList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.EMPTYList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.EMPTYList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
127	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
128	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
129	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
130	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events	  	non-compiled	[CE]  not  a  statement	30	None	add
131	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this	  	non-compiled	[CE]  not  a  statement	30	None	add
132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	82	1	add
133	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	82	1	add
134	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	82	1	add
135	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	82	1	add
136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	82	1	add
137	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	82	1	add
138	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	82	None	add
139	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
140	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  LinkedList  <  Incrementor>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  LinkedList  <  Incrementor>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)  {  this.eventsStates  =  new  LinkedList  <  Incrementor>();  isLastStep  =  true;  }	  this.eventsStates    =    new    LinkedList    <    Incrementor>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(2);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(3);    setMaxEvaluations(2);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	19	1	add
142	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(2);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(2);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(3);    setMaxEvaluations(2);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	19	1	add
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(3);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(3);    setMaxEvaluations(3);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	19	1	add
144	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(3);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(3);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(3);    setMaxEvaluations(3);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	19	1	add
145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(2);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(3);    setMaxEvaluations(2);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	19	1	add
146	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(2);  setMaxEvaluations(4);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(2);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(3);    setMaxEvaluations(2);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	19	1	add
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(1);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(3);    setMaxEvaluations(1);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	19	1	add
148	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(1);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(1);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(3);    setMaxEvaluations(1);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	19	1	add
149	[BUG]  [BUGGY]  setEventsStates(-eventsStates);  [CE]  bad  operand  type  Collection<EventState>  for  unary  operator  '-'  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEventsStates(-eventsStates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEventsStates(-eventsStates);	  setMaxEvaluations(-eventsStates);    	non-compiled	[CE]  bad  operand  type  Collection<EventState>  for  unary  operator  '-'	130	None	replace
150	[BUG]  [BUGGY]  setEvents(-eventsStates);  [CE]  bad  operand  type  Collection<EventState>  for  unary  operator  '-'  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvents(-eventsStates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvents(-eventsStates);	  setMaxEvaluations(-eventsStates);    	non-compiled	[CE]  bad  operand  type  Collection<EventState>  for  unary  operator  '-'	130	None	replace
151	[BUG]  [BUGGY]  setStates(-eventsStates);  [CE]  bad  operand  type  Collection<EventState>  for  unary  operator  '-'  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setStates(-eventsStates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setStates(-eventsStates);	  setMaxEvaluations(-eventsStates);    	non-compiled	[CE]  bad  operand  type  Collection<EventState>  for  unary  operator  '-'	130	None	replace
152	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  MaxCountExceededException  	95	1	replace
153	[BUG]  [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  MaxCountExceededException  	95	1	replace
154	[BUG]  [BUGGY]  null  =  new  ArrayList  <  StepHandler>();  [CE]  unexpected  type  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  null  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	null  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  unexpected  type	95	None	replace
155	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	resetOccurred  =  true;	  resetOccurred    =    false;    	compilable	  [FE]  MaxCountExceededException  	102	1	replace
156	[BUG]  [BUGGY]  resetOccurred  =  true;  [FE]  MaxCountExceededException  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred  =  true;	  resetOccurred    =    false;    	compilable	  [FE]  MaxCountExceededException  	102	1	replace
157	[BUG]  [BUGGY]  ResetOccurred  =  true;  [CE]  cannot  find  symbol  ResetOccurred  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  ResetOccurred  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	ResetOccurred  =  true;	  resetOccurred    =    false;    	non-compiled	[CE]  cannot  find  symbol  ResetOccurred	102	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	21	1	add
159	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	21	1	add
160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	21	1	add
161	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	21	1	add
162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	21	1	add
163	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	21	1	add
164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(3);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	21	1	add
165	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(3);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(3);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	21	1	add
166	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(events);  [CE]  cannot  find  symbol  events  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(events);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(events);	  	non-compiled	[CE]  cannot  find  symbol  events	21	None	add
167	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeList  <  Increment>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  TreeList  <  Increment>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  TreeList  <  Increment>();	  this.eventsStates    =    new    TreeSet    <    Increment>();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	80	1	add
169	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	80	1	add
170	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	80	1	add
171	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	80	1	add
172	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
173	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  for(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  for(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  for(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	non-compiled	[CE]  not  a  statement	80	None	add
174	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	  	non-compiled	[CE]  ';'  expected	80	None	add
175	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  MaxCountExceededException  	52	1	replace
176	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [FE]  MaxCountExceededException  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  MaxCountExceededException  	52	1	replace
177	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  false;  [CE]  cannot  find  symbol  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  false;	  this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
178	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	70	1	add
179	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	70	1	add
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	70	1	add
181	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	70	1	add
182	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	70	1	add
183	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	70	1	add
184	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	70	1	add
185	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	70	1	add
186	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	70	1	add
187	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(4);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	70	1	add
188	[BUG]  [BUGGY]  setMaxEvaluations(events,  stepSize);  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(events,  stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(events,  stepSize);	  setMaxEvaluations(events,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  events	103	None	replace
189	[BUG]  [BUGGY]  setMaxEvaluations(events,  stepStart);  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(events,  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(events,  stepStart);	  setMaxEvaluations(events,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  events	103	None	replace
190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(1);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	68	1	add
191	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(1);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(1);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	68	1	add
192	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	68	1	add
193	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	68	1	add
194	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(1);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	68	1	add
195	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(1);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(1);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	68	1	add
196	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(3);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	68	1	add
197	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(3);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(3);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	68	1	add
198	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  evaluations,  statesInitialized);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,Incrementor,boolean)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  evaluations,  statesInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  evaluations,  statesInitialized);	  setMaxEvaluations(eventsStates,    statesInitialized);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,Incrementor,boolean)	43	None	replace
199	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  stepsInitialized);  [CE]  cannot  find  symbol  stepsInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  stepsInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  stepsInitialized);	  setMaxEvaluations(eventsStates,    statesInitialized);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	43	None	replace
200	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  stepSize,  statesInitialized);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,double,boolean)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  stepSize,  statesInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  stepSize,  statesInitialized);	  setMaxEvaluations(eventsStates,    statesInitialized);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,double,boolean)	43	None	replace
201	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	isLastStep    =    true;    isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	55	1	add
202	[BUG]  [BUGGY]  isLastStep  =  true;  isLastStep  =  true;  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep    =    true;    isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	55	1	add
203	[BUG]  [BUGGY]  isLastStep  =  true;  if(expandable.isInitialized())  {  isLastStep  =  true;  }  else  {  evaluates.add(new  Integer(stepSize,  stepStart));  }  [CE]  cannot  find  symbol  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  if(expandable.isInitialized())  {  isLastStep  =  true;  }  else  {  evaluates.add(new  Integer(stepSize,  stepStart));  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep    =    true;    if(expandable.isInitialized())  {  isLastStep  =  true;  }  else  {  evaluates.add(new  Integer(stepSize,  stepStart));  }	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
204	[BUG]  [BUGGY]  isLastStep  =  true;  if(expandable.isInitialized())  {  isLastStep  =  true;  }  else  {  evaluates.add(new  Integer(stepSize,  stepSize));  }  [CE]  cannot  find  symbol  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  if(expandable.isInitialized())  {  isLastStep  =  true;  }  else  {  evaluates.add(new  Integer(stepSize,  stepSize));  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep    =    true;    if(expandable.isInitialized())  {  isLastStep  =  true;  }  else  {  evaluates.add(new  Integer(stepSize,  stepSize));  }	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
205	[BUG]  [BUGGY]  isLastStep  =  true;  if(expandable.isEmpty())  {  isLastStep  =  true;  }  else  {  evaluates.add(new  Integer(stepSize,  stepStart));  }  [CE]  cannot  find  symbol  [FE]          MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  if(expandable.isEmpty())  {  isLastStep  =  true;  }  else  {  evaluates.add(new  Integer(stepSize,  stepStart));  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep    =    true;    if(expandable.isEmpty())  {  isLastStep  =  true;  }  else  {  evaluates.add(new  Integer(stepSize,  stepStart));  }	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
206	[BUG]  [BUGGY]  isLastStep  =  true;  if(expandable.isEmpty())  {  isLastStep  =  true;  }  else  {  evaluates.add(new  Integer(stepSize,  stepSize));  }  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  if(expandable.isEmpty())  {  isLastStep  =  true;  }  else  {  evaluates.add(new  Integer(stepSize,  stepSize));  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep    =    true;    if(expandable.isEmpty())  {  isLastStep  =  true;  }  else  {  evaluates.add(new  Integer(stepSize,  stepSize));  }	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
207	[BUG]  [BUGGY]  setEventsStates(eventsStates,  stepStart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEventsStates(eventsStates,  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEventsStates(eventsStates,  stepStart);	  setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
208	[BUG]  [BUGGY]  setEventsStates(eventsStates.values());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEventsStates(eventsStates.values());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEventsStates(eventsStates.values());	  setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
209	[BUG]  [BUGGY]  setEventsStates(eventsStates.size());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEventsStates(eventsStates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEventsStates(eventsStates.size());	  setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
210	[BUG]  [BUGGY]  stepHandlersInitialized  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  stepHandlersInitialized  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlersInitialized  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlersInitialized  =  new  ArrayList  <  StepHandler>();	  stepsInitialized    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  stepHandlersInitialized	87	None	replace
211	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
212	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
213	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
214	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList()  [CE]  ';'  expected  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList()  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList()	  	non-compiled	[CE]  ';'  expected	37	None	add
215	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
216	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	stepHandlers  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    LinkedList    <    StepHandler>();    	compilable	  [FE]  MaxCountExceededException  	86	1	replace
217	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  [FE]  MaxCountExceededException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    LinkedList    <    StepHandler>();    	compilable	  [FE]  MaxCountExceededException  	86	1	replace
218	[BUG]  [BUGGY]  stepHandlers  =  new  HashSet  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  HashSet  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlers  =  new  HashSet  <  StepHandler>();	  stepHandlers    =    new    LinkedList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
219	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	64	1	add
220	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	64	1	add
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	64	1	add
222	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	64	1	add
223	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(1);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	64	1	add
224	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(1);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(1);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	64	1	add
225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(1);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	64	1	add
226	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(1);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(1);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	64	1	add
227	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	64	1	add
228	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	64	1	add
229	[BUG]  [BUGGY]  setEvents(eventsStates);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvents(eventsStates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvents(eventsStates);	  setEvents(events);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
230	[BUG]  [BUGGY]  setEvents(events,  stepStart);  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvents(events,  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvents(events,  stepStart);	  setEvents(events);    	non-compiled	[CE]  cannot  find  symbol  events	110	None	replace
231	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  Incrementor>();  isLastStep  =  false;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  LinkedList  <  Incrementor>();  isLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  LinkedList  <  Incrementor>();  isLastStep  =  false;	  this.eventsStates    =    new    ArrayList    <    Incrementor>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
232	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  Incrementor>();  isLastStep  =  false;  }  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  Incrementor>();  isLastStep  =  false;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  Incrementor>();  isLastStep  =  false;  }	  this.eventsStates    =    new    ArrayList    <    Incrementor>();    isLastStep    =    false;    	non-compiled	[CE]  incompatible  types	59	None	replace
233	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  false;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  false;	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    false;    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
234	[BUG]  [BUGGY]  this.eventsStates  =  Collections.newArrayList();  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.newArrayList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  Collections.newArrayList();	  this.eventsStates    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
235	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]              UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates  =  new  ArrayList();	  this.eventsStates    =    Lists.newArrayList();    	compilable	  [FE]  MaxCountExceededException  	11	1	replace
236	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList();  [FE]  MaxCountExceededException  [FE]              UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList();	  this.eventsStates    =    Lists.newArrayList();    	compilable	  [FE]  MaxCountExceededException  	11	1	replace
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	113	1	add
238	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	113	1	add
239	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	113	None	add
240	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	113	None	add
241	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	113	None	add
242	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	28	1	add
243	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	28	1	add
244	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  This	28	None	add
245	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	28	1	add
246	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	28	1	add
247	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  not  a  statement	28	None	add
248	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	137	None	replace
249	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	137	1	replace
250	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  MaxCountExceededException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	137	1	replace
251	[BUG]  [BUGGY]  null  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  unexpected  type  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  null  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	null  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	non-compiled	[CE]  unexpected  type	137	None	replace
252	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	53	1	add
253	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	53	1	add
254	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  ';'  expected  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	non-compiled	[CE]  ';'  expected	53	None	add
255	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	53	None	add
256	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);  setMaxEvaluations(4);	  setMaxEvaluations(2);    setMaxEvaluations(4);    	compilable	  [FE]  MaxCountExceededException  	24	1	replace
257	[BUG]  [BUGGY]  setMaxEvaluations(1);  setMaxEvaluations(4);  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);  setMaxEvaluations(4);	  setMaxEvaluations(2);    setMaxEvaluations(4);    	compilable	  [FE]  MaxCountExceededException  	24	1	replace
258	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(3);  setMaxEvaluations(4);	  setMaxEvaluations(2);    setMaxEvaluations(4);    	compilable	  [FE]  MaxCountExceededException  	24	1	replace
259	[BUG]  [BUGGY]  setMaxEvaluations(3);  setMaxEvaluations(4);  [FE]  MaxCountExceededException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(3);  setMaxEvaluations(4);	  setMaxEvaluations(2);    setMaxEvaluations(4);    	compilable	  [FE]  MaxCountExceededException  	24	1	replace
260	[BUG]  [BUGGY]  if(eventsStates!=  null)  {  setMaxEvaluations(0);  setMaxEvaluations(eventsStates);  }  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>)  [FE]              MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(eventsStates!=  null)  {  setMaxEvaluations(0);  setMaxEvaluations(eventsStates);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(eventsStates!=  null)  {  setMaxEvaluations(0);  setMaxEvaluations(eventsStates);  }	  setMaxEvaluations(0);    setMaxEvaluations(eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>)	67	None	replace
261	[BUG]  [BUGGY]  setMaxEvaluations(0);  setMaxEvaluations(eventsStates,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,Incrementor)  [FE]                MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);  setMaxEvaluations(eventsStates,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);  setMaxEvaluations(eventsStates,  evaluations);	  setMaxEvaluations(0);    setMaxEvaluations(eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,Incrementor)	67	None	replace
262	[BUG]  [BUGGY]  setMaxEvaluations(0);  setMaxEvaluations(eventsStates,  statesInitialized);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,boolean)  [FE]                  MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);  setMaxEvaluations(eventsStates,  statesInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);  setMaxEvaluations(eventsStates,  statesInitialized);	  setMaxEvaluations(0);    setMaxEvaluations(eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,boolean)	67	None	replace
263	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventsState>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventsState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  LinkedList  <  EventsState>();	  this.eventsStates    =    new    ArrayList    <    EventsState>();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(3);    setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	46	1	add
265	[BUG]  [BUGGY]  setMaxEvaluations(3);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(3);    setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	46	1	add
266	[BUG]  [BUGGY]  setMaxEvaluations(3);  Set  <  Integer>  setMaxEvaluations(3);  [CE]  ';'  expected  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  Set  <  Integer>  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(3);    Set  <  Integer>  setMaxEvaluations(3);	  	non-compiled	[CE]  ';'  expected	46	None	add
267	[BUG]  [BUGGY]  setMaxEvaluations(3);  Set  <  Integer>  setMaxEvaluations(4);  [CE]  ';'  expected  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  Set  <  Integer>  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(3);    Set  <  Integer>  setMaxEvaluations(4);	  	non-compiled	[CE]  ';'  expected	46	None	add
268	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	isLastStep  =  false;	  isLastStep    =    true;    	compilable	  [FE]  MaxCountExceededException  	56	1	replace
269	[BUG]  [BUGGY]  isLastStep  =  false;  [FE]  MaxCountExceededException  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep  =  false;	  isLastStep    =    true;    	compilable	  [FE]  MaxCountExceededException  	56	1	replace
270	[BUG]  [BUGGY]  isLastStep  = " ";  [CE]  incompatible  types  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  = " ";  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep  = " ";	  isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	56	None	replace
271	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  stepStart);  [CE]  no  suitable  method  found  for  setMaxEvaluations(long,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  stepStart);	  setMaxEvaluations(-1L,    evaluates);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(long,double)	119	None	replace
272	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  stepsInitialized);  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  stepsInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  stepsInitialized);	  setMaxEvaluations(-1L,    evaluates);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	119	None	replace
273	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  steps);  [CE]  cannot  find  symbol  steps  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  steps);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  steps);	  setMaxEvaluations(-1L,    evaluates);    	non-compiled	[CE]  cannot  find  symbol  steps	119	None	replace
274	[BUG]  [BUGGY]  This.eventsStates  =  new  java.util.ArrayList  <  Integer>();  [CE]  cannot  find  symbol  This  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  This.eventsStates  =  new  java.util.ArrayList  <  Integer>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	This.eventsStates  =  new  java.util.ArrayList  <  Integer>();	  this.eventsStates    =    new    java.util.ArrayList    <    Integer>();    	non-compiled	[CE]  cannot  find  symbol  This	13	None	replace
275	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
276	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
277	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
278	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	32	1	add
279	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	32	1	add
280	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this	  	non-compiled	[CE]  not  a  statement	32	None	add
281	[BUG]  [BUGGY]  setMaxEvaluations(1);  setMaxEvaluations(eventsStates);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>)  [FE]                MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);  setMaxEvaluations(eventsStates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);  setMaxEvaluations(eventsStates);	  setMaxEvaluations(1);    setMaxEvaluations(events);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>)	76	None	replace
282	[BUG]  [BUGGY]  setMaxEvaluations(2);  setMaxEvaluations(events);  [CE]  cannot  find  symbol  events  [FE]                  MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);  setMaxEvaluations(events);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);  setMaxEvaluations(events);	  setMaxEvaluations(1);    setMaxEvaluations(events);    	non-compiled	[CE]  cannot  find  symbol  events	76	None	replace
283	[BUG]  [BUGGY]  stepStart  =  true;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepStart  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepStart  =  true;	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    true;    	non-compiled	[CE]  incompatible  types	128	None	replace
284	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  true;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  true;	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    true;    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
285	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  stepStart  =  true;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandler  stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  stepStart  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandler  stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  stepStart  =  true;	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    true;    	non-compiled	[CE]  incompatible  types	128	None	replace
286	[BUG]  [BUGGY]  this.eventsStates  =  Lists.  <  EventState>emptyList();  [CE]  cannot  find  symbol  Lists  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Lists.  <  EventState>emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  Lists.  <  EventState>emptyList();	  this.eventsStates    =    Collections.    <    EventState>emptyList();    	non-compiled	[CE]  cannot  find  symbol  Lists	10	None	replace
287	[BUG]  [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	92	None	replace
288	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	92	None	replace
289	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	92	None	replace
290	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  This  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	This.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  This	126	None	replace
291	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepsInitialized  =  false;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepsInitialized  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepsInitialized  =  false;	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    false;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
292	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	117	1	add
293	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	117	1	add
294	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  This	117	None	add
295	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	117	1	add
296	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	117	1	add
297	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	117	1	add
298	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	117	1	add
299	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  This	79	None	replace
300	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(2);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(4);    setMaxEvaluations(2);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	23	1	add
301	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(2);  setMaxEvaluations(4);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(2);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(4);    setMaxEvaluations(2);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	23	1	add
302	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(3);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(4);    setMaxEvaluations(3);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	23	1	add
303	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(3);  setMaxEvaluations(4);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(3);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(4);    setMaxEvaluations(3);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	23	1	add
304	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(2);  setMaxEvaluations(5);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(4);    setMaxEvaluations(2);  setMaxEvaluations(5);	  	compilable	  [FE]  AssertionError  	23	1	add
305	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(2);  setMaxEvaluations(5);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(2);  setMaxEvaluations(5);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(4);    setMaxEvaluations(2);  setMaxEvaluations(5);	  	compilable	  [FE]  AssertionError  	23	1	add
306	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(1);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(4);    setMaxEvaluations(1);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	23	1	add
307	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(1);  setMaxEvaluations(4);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(1);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(4);    setMaxEvaluations(1);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	23	1	add
308	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  steps);  [CE]  cannot  find  symbol  steps  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  steps);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  steps);	  setMaxEvaluations(eventsStates,    evaluates);    	non-compiled	[CE]  cannot  find  symbol  steps	44	None	replace
309	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	115	1	add
310	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	115	1	add
311	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	115	None	add
312	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	115	None	add
313	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  setMaxEvaluations(-1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	115	1	add
314	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  setMaxEvaluations(-1);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  setMaxEvaluations(-1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	115	1	add
315	[BUG]  [BUGGY]  setMaxEvaluations(stepSize);  setMaxEvaluations(1);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(stepSize);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(stepSize);  setMaxEvaluations(1);	  setMaxEvaluations(2);    setMaxEvaluations(1);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double)	22	None	replace
316	[BUG]  [BUGGY]  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  setMaxEvaluations(2);  [CE]  cannot  find  symbol  [FE]        MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  setMaxEvaluations(2);	  setMaxEvaluations(2);    Set    <    Increment>    steps    =    new    HashSet    <    Increment>();    setMaxEvaluations(2);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
317	[BUG]  [BUGGY]  Set  <  Increment>  steps  =  new  LinkedHashSet  <  Increment>();  setMaxEvaluations(2);  [CE]  cannot  find  symbol  [FE]          MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  Set  <  Increment>  steps  =  new  LinkedHashSet  <  Increment>();  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	Set  <  Increment>  steps  =  new  LinkedHashSet  <  Increment>();  setMaxEvaluations(2);	  setMaxEvaluations(2);    Set    <    Increment>    steps    =    new    HashSet    <    Increment>();    setMaxEvaluations(2);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
318	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	17	1	add
319	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	17	1	add
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	17	1	add
321	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(1);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	17	1	add
322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(3);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	17	1	add
323	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(3);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(3);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	17	1	add
324	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	17	1	add
325	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	17	1	add
326	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	17	1	add
327	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	17	1	add
328	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  expandable);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,ExpandableStatefulODE)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  expandable);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  expandable);	  setMaxEvaluations(expandable);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>,ExpandableStatefulODE)	111	None	replace
329	[BUG]  [BUGGY]  setMaxEvaluations(expandable,  stepStart);  [CE]  no  suitable  method  found  for  setMaxEvaluations(ExpandableStatefulODE,double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(expandable,  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(expandable,  stepStart);	  setMaxEvaluations(expandable);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(ExpandableStatefulODE,double)	111	None	replace
330	[BUG]  [BUGGY]  setMaxEvaluations(events,  expandable);  [CE]  cannot  find  symbol  events  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(events,  expandable);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(events,  expandable);	  setMaxEvaluations(expandable);    	non-compiled	[CE]  cannot  find  symbol  events	111	None	replace
331	[BUG]  [BUGGY]  setMaxEvaluations(stepSize,  expandable);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double,ExpandableStatefulODE)  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(stepSize,  expandable);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(stepSize,  expandable);	  setMaxEvaluations(expandable);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double,ExpandableStatefulODE)	111	None	replace
332	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	90	1	add
333	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	90	1	add
334	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	90	None	add
335	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	90	None	add
336	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    steps  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  steps	90	None	add
337	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	39	1	add
338	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	39	1	add
339	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
340	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
341	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
342	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList()  [CE]  ';'  expected  [FE]            UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList()  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList()	  	non-compiled	[CE]  ';'  expected	39	None	add
343	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates  =  new  TreeSet  <  EventState>();	  this.eventsStates    =    new    LinkedList    <    EventState>();    	compilable	  [FE]  ClassCastException  	15	1	replace
344	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [FE]  ClassCastException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  TreeSet  <  EventState>();	  this.eventsStates    =    new    LinkedList    <    EventState>();    	compilable	  [FE]  ClassCastException  	15	1	replace
345	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  resetOccurred  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	resetOccurred    =    false;    resetOccurred  =  false;	  	compilable	  [FE]  AssertionError  	101	1	add
346	[BUG]  [BUGGY]  resetOccurred  =  false;  resetOccurred  =  false;  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  resetOccurred  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    resetOccurred  =  false;	  	compilable	  [FE]  AssertionError  	101	1	add
347	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	resetOccurred    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	101	1	add
348	[BUG]  [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	101	1	add
349	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	resetOccurred    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	101	1	add
350	[BUG]  [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	101	1	add
351	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	resetOccurred    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	101	1	add
352	[BUG]  [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]          MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	101	1	add
353	[BUG]  [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  Incrementor>();  isLastStep  =  false;  [CE]  incompatible  types  [FE]            MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  Incrementor>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    this.eventsStates  =  new  ArrayList  <  Incrementor>();  isLastStep  =  false;	  	non-compiled	[CE]  incompatible  types	101	None	add
354	[BUG]  [BUGGY]  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  setMaxEvaluations(3);  [CE]  cannot  find  symbol  [FE]          MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  setMaxEvaluations(3);	  setMaxEvaluations(2);    Set    <    Increment>    steps    =    new    HashSet    <    Increment>();    setMaxEvaluations(3);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
355	[BUG]  [BUGGY]  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  setMaxEvaluations(4);  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  setMaxEvaluations(4);	  setMaxEvaluations(2);    Set    <    Increment>    steps    =    new    HashSet    <    Increment>();    setMaxEvaluations(3);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
356	[BUG]  [BUGGY]  Set  <  Increment>  steps  =  new  LinkedHashSet  <  Increment>();  setMaxEvaluations(3);  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  Set  <  Increment>  steps  =  new  LinkedHashSet  <  Increment>();  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	Set  <  Increment>  steps  =  new  LinkedHashSet  <  Increment>();  setMaxEvaluations(3);	  setMaxEvaluations(2);    Set    <    Increment>    steps    =    new    HashSet    <    Increment>();    setMaxEvaluations(3);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
357	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	51	1	add
358	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	51	1	add
359	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [CE]  cannot  find  symbol  This  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  This	51	None	add
360	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	51	1	add
361	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	51	1	add
362	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  false;  [CE]  cannot  find  symbol  hasLastStep  [FE]          MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  hasLastStep	51	None	add
363	[BUG]  [BUGGY]  null  =  new  LinkedList  <  EventState>();  this.eventsStates  =  new  LinkedList  <  EventState>();  [CE]  unexpected  type  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  null  =  new  LinkedList  <  EventState>();  this.eventsStates  =  new  LinkedList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	null  =  new  LinkedList  <  EventState>();  this.eventsStates  =  new  LinkedList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  unexpected  type	29	None	replace
364	[BUG]  [BUGGY]  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  not  a  statement	125	None	replace
365	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	125	1	replace
366	[BUG]  [BUGGY]  ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [FE]  MaxCountExceededException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	125	1	replace
367	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	125	1	replace
368	[BUG]  [BUGGY]  Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [FE]  MaxCountExceededException  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	125	1	replace
369	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  stepSize,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(long,double,Incrementor)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  stepSize,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  stepSize,  evaluations);	  setMaxEvaluations(-1L,    evaluations);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(long,double,Incrementor)	3	None	replace
370	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  stepStart,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(long,double,Incrementor)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  stepStart,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  stepStart,  evaluations);	  setMaxEvaluations(-1L,    evaluations);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(long,double,Incrementor)	3	None	replace
371	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  evaluations,  stepStart);  [CE]  no  suitable  method  found  for  setMaxEvaluations(long,Incrementor,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  evaluations,  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  evaluations,  stepStart);	  setMaxEvaluations(-1L,    evaluations);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(long,Incrementor,double)	3	None	replace
372	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  evaluations,  stepSize);  [CE]  no  suitable  method  found  for  setMaxEvaluations(long,Incrementor,double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  evaluations,  stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  evaluations,  stepSize);	  setMaxEvaluations(-1L,    evaluations);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(long,Incrementor,double)	3	None	replace
373	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(3);  setMaxEvaluations(2);	  setMaxEvaluations(2);    setMaxEvaluations(2);    	compilable	  [FE]  MaxCountExceededException  	18	1	replace
374	[BUG]  [BUGGY]  setMaxEvaluations(3);  setMaxEvaluations(2);  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(3);  setMaxEvaluations(2);	  setMaxEvaluations(2);    setMaxEvaluations(2);    	compilable	  [FE]  MaxCountExceededException  	18	1	replace
375	[BUG]  [BUGGY]  stepSize  =  false;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepSize  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepSize  =  false;	  stepsInitialized    =    false;    	non-compiled	[CE]  incompatible  types	1	None	replace
376	[BUG]  [BUGGY]  stepHandlersInitialized  =  false;  [CE]  cannot  find  symbol  stepHandlersInitialized  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlersInitialized  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlersInitialized  =  false;	  stepsInitialized    =    false;    	non-compiled	[CE]  cannot  find  symbol  stepHandlersInitialized	1	None	replace
377	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
378	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
379	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	77	None	add
380	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  [CE]  cannot  find  symbol  isFirstStep  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	77	None	add
381	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	77	1	add
382	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	77	1	add
383	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(0);  setMaxEvaluations(0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(0);	  	compilable	  [FE]  AssertionError  	62	1	add
384	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(0);  setMaxEvaluations(0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(0);  setMaxEvaluations(0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(0);	  	compilable	  [FE]  AssertionError  	62	1	add
385	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(1);  setMaxEvaluations(0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);	  	compilable	  [FE]  AssertionError  	62	1	add
386	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(1);  setMaxEvaluations(0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(1);  setMaxEvaluations(0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);	  	compilable	  [FE]  AssertionError  	62	1	add
387	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(0);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	62	1	add
388	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(0);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(0);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	62	1	add
389	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(  stepStart);  setMaxEvaluations(0);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double)  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(  stepStart);  setMaxEvaluations(0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(0);    setMaxEvaluations(  stepStart);  setMaxEvaluations(0);	  	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double)	62	None	add
390	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(1);  setMaxEvaluations(0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);	  	compilable	  [FE]  AssertionError  	74	1	add
391	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(1);  setMaxEvaluations(0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(1);  setMaxEvaluations(0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);	  	compilable	  [FE]  AssertionError  	74	1	add
392	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(2);  setMaxEvaluations(0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(0);	  	compilable	  [FE]  AssertionError  	74	1	add
393	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(2);  setMaxEvaluations(0);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(2);  setMaxEvaluations(0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(0);	  	compilable	  [FE]  AssertionError  	74	1	add
394	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(2);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	74	1	add
395	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(2);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(2);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	74	1	add
396	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(1);  setMaxEvaluations(  1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(  1);	  	compilable	  [FE]  AssertionError  	74	1	add
397	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(1);  setMaxEvaluations(  1);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(1);  setMaxEvaluations(  1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(  1);	  	compilable	  [FE]  AssertionError  	74	1	add
398	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	compilable	  [FE]  MaxCountExceededException  	33	1	replace
399	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	compilable	  [FE]  MaxCountExceededException  	33	1	replace
400	[BUG]  [BUGGY]  This.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]          UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  This.eventsStates  =  Collections.emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	This.eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    This.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  This	106	None	replace
401	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    true;    	non-compiled	[CE]  incompatible  types	57	None	replace
402	[BUG]  [BUGGY]  this.eventsStates  =  new  HashSet  <  Integer>();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  HashSet  <  Integer>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  HashSet  <  Integer>();	  this.eventsStates    =    new    LinkedHashSet    <    Integer>();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
403	[BUG]  [BUGGY]  setMaxEvaluations(-1,  -1L,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(int,long,Incrementor)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1,  -1L,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1,  -1L,  evaluations);	  setMaxEvaluations(-1,    -1L);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(int,long,Incrementor)	5	None	replace
404	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  -1L);  [CE]  no  suitable  method  found  for  setMaxEvaluations(long,long)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  -1L);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  -1L);	  setMaxEvaluations(-1,    -1L);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(long,long)	5	None	replace
405	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  -1L,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(long,long,Incrementor)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  -1L,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  -1L,  evaluations);	  setMaxEvaluations(-1,    -1L);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(long,long,Incrementor)	5	None	replace
406	[BUG]  [BUGGY]  setMaxEvaluations(-1,  -1L,  stepSize);  [CE]  no  suitable  method  found  for  setMaxEvaluations(int,long,double)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1,  -1L,  stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1,  -1L,  stepSize);	  setMaxEvaluations(-1,    -1L);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(int,long,double)	5	None	replace
407	[BUG]  [BUGGY]  setMaxEvaluations(stepSize);  setMaxEvaluations(3);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(stepSize);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(stepSize);  setMaxEvaluations(3);	  setMaxEvaluations(2);    setMaxEvaluations(3);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double)	20	None	replace
408	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	51	1	add
409	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	51	1	add
410	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMinEvaluations(1);  setMaxEvaluations(1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMinEvaluations(1);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(1);    setMinEvaluations(1);  setMaxEvaluations(1);	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
411	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  false;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  false;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    false;    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
412	[BUG]  [BUGGY]  if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	91	None	replace
413	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	91	None	replace
414	[BUG]  [BUGGY]  setMaxEvaluations(-1,  -1,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(int,int,Incrementor)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1,  -1,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1,  -1,  evaluations);	  setMaxEvaluations(-1,    -1L);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(int,int,Incrementor)	5	None	replace
415	[BUG]  [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  Incrementor>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  Incrementor>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  Incrementor>();  isLastStep  =  true;	  	non-compiled	[CE]  incompatible  types	55	None	add
416	[BUG]  [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  Incrementor>();  [CE]  incompatible  types  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  Incrementor>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  Incrementor>();	  	non-compiled	[CE]  incompatible  types	55	None	add
417	[BUG]  [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  Incrementor>();  stepsInitialized  =  true;  [CE]  incompatible  types  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  Incrementor>();  stepsInitialized  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  Incrementor>();  stepsInitialized  =  true;	  	non-compiled	[CE]  incompatible  types	55	None	add
418	[BUG]  [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  Increment>();  isLastStep  =  true;  [CE]  cannot  find  symbol  [FE]          MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  Increment>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  Increment>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
419	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandler  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  StepHandler	94	None	add
420	[BUG]  [BUGGY]  setEvents(evaluators);  [CE]  cannot  find  symbol  evaluators  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvents(evaluators);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvents(evaluators);	  setEvents(events);    	non-compiled	[CE]  cannot  find  symbol  evaluators	110	None	replace
421	[BUG]  [BUGGY]  setEvents(evaluations);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvents(evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvents(evaluations);	  setEvents(events);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
422	[BUG]  [BUGGY]  resetOccurred  =  false;  ResetOccurred  =  false;  [CE]  cannot  find  symbol  ResetOccurred  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  ResetOccurred  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    ResetOccurred  =  false;	  	non-compiled	[CE]  cannot  find  symbol  ResetOccurred	101	None	add
423	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(expandable  ==  null)  {  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	resetOccurred    =    false;    if(expandable  ==  null)  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	101	1	add
424	[BUG]  [BUGGY]  resetOccurred  =  false;  if(expandable  ==  null)  {  isLastStep  =  false;  }  [FE]  AssertionError  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(expandable  ==  null)  {  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    if(expandable  ==  null)  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	101	1	add
425	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(expandable!=  null)  {  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	resetOccurred    =    false;    if(expandable!=  null)  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	101	1	add
426	[BUG]  [BUGGY]  resetOccurred  =  false;  if(expandable!=  null)  {  isLastStep  =  false;  }  [FE]  AssertionError  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(expandable!=  null)  {  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    if(expandable!=  null)  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	101	1	add
427	[BUG]  [BUGGY]  resetOccurred  =  false;  if(experimentors!=  null)  {  isLastStep  =  false;  }  [CE]  cannot  find  symbol  experimentors  [FE]          MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(experimentors!=  null)  {  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    if(experimentors!=  null)  {  isLastStep  =  false;  }	  	non-compiled	[CE]  cannot  find  symbol  experimentors	101	None	add
428	[BUG]  [BUGGY]  Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incompatible  types	126	None	replace
429	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
430	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this	  	non-compiled	[CE]  not  a  statement	32	None	add
431	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events	  	non-compiled	[CE]  not  a  statement	32	None	add
432	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(2);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(4);    setMaxEvaluations(2);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	23	1	add
433	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(2);  setMaxEvaluations(3);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(4);  setMaxEvaluations(2);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(4);    setMaxEvaluations(2);  setMaxEvaluations(3);	  	compilable	  [FE]  AssertionError  	23	1	add
434	[BUG]  [BUGGY]  if(events!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  events  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(events!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(events!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	36	None	replace
435	[BUG]  [BUGGY]  if(events!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  events  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(events!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(events!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	36	None	replace
436	[BUG]  [BUGGY]  if(events!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  events  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(events!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(events!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	36	None	replace
437	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(1);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(0);        setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	62	1	add
438	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(1);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(1);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	62	1	add
439	[BUG]  [BUGGY]  this.evaluations  =  new  ArrayList  <  EventState>();  [CE]  incompatible  types  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.evaluations  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.evaluations  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    	non-compiled	[CE]  incompatible  types	38	None	replace
440	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  steps	114	None	replace
441	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  steps	114	None	replace
442	[BUG]  [BUGGY]  if(eventsStates!=  null)  {  setMaxEvaluations(1);  setMaxEvaluations(eventsStates);  }  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>)  [FE]              MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(eventsStates!=  null)  {  setMaxEvaluations(1);  setMaxEvaluations(eventsStates);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(eventsStates!=  null)  {  setMaxEvaluations(1);  setMaxEvaluations(eventsStates);  }	  setMaxEvaluations(0);    setMaxEvaluations(eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>)	67	None	replace
443	[BUG]  [BUGGY]  if(eventsStates!=  null)  {  setMaxEvaluations(0);  setMaxEvaluations(eventsStates);  }  else  {  statesInitialized  =  false;  }  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>)  [FE]                MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(eventsStates!=  null)  {  setMaxEvaluations(0);  setMaxEvaluations(eventsStates);  }  else  {  statesInitialized  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(eventsStates!=  null)  {  setMaxEvaluations(0);  setMaxEvaluations(eventsStates);  }  else  {  statesInitialized  =  false;  }	  setMaxEvaluations(0);    setMaxEvaluations(eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>)	67	None	replace
444	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
445	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	37	1	add
446	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	37	1	add
447	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	37	1	add
448	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	37	1	add
449	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.values());  [CE]  cannot  find  symbol  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.values());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.values());	  setMaxEvaluations(eventsStates.size());    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
450	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
451	[BUG]  [BUGGY]  setEventsStates(events);  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEventsStates(events);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEventsStates(events);	  setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol  events	127	None	replace
452	[BUG]  [BUGGY]  setEventsStates(evaluators);  [CE]  cannot  find  symbol  evaluators  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEventsStates(evaluators);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEventsStates(evaluators);	  setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol  evaluators	127	None	replace
453	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	95	None	replace
454	[BUG]  [BUGGY]  if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	95	None	replace
455	[BUG]  [BUGGY]  setMaxEvaluations(stepSize);  setMaxEvaluations(4);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(stepSize);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(stepSize);  setMaxEvaluations(4);	  setMaxEvaluations(2);    setMaxEvaluations(4);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double)	24	None	replace
456	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	78	None	replace
457	[BUG]  [BUGGY]  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  exprStates  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  exprStates	78	None	replace
458	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	82	1	add
459	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	82	1	add
460	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	82	1	add
461	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	82	1	add
462	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	82	1	add
463	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	82	1	add
464	[BUG]  [BUGGY]  setEvaluations(-eventsStates);  [CE]  bad  operand  type  Collection<EventState>  for  unary  operator  '-'  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvaluations(-eventsStates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvaluations(-eventsStates);	  setMaxEvaluations(-eventsStates);    	non-compiled	[CE]  bad  operand  type  Collection<EventState>  for  unary  operator  '-'	130	None	replace
465	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  incompatible  types	90	None	add
466	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	90	1	add
467	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	90	1	add
468	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  true;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  true;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    true;    	non-compiled	[CE]  incompatible  types	58	None	replace
469	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	80	1	add
470	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	80	1	add
471	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	80	1	add
472	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	80	1	add
473	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	80	1	add
474	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	80	1	add
475	[BUG]  [BUGGY]  setMaxEvaluations(expandable,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(ExpandableStatefulODE,Incrementor)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(expandable,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(expandable,  evaluations);	  setMaxEvaluations(expandable);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(ExpandableStatefulODE,Incrementor)	111	None	replace
476	[BUG]  [BUGGY]  this.eventsStates  =  new  List  <  EventState>();  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  List  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  List  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	137	None	replace
477	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
478	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
479	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
480	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
481	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  Collections.EMPTY_LIST  =  Collections.EMPTY_LIST;  [CE]  cannot  assign  a  value  to  final  variable  EMPTY_LIST  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  Collections.EMPTY_LIST  =  Collections.EMPTY_LIST;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    Collections.EMPTY_LIST  =  Collections.EMPTY_LIST;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  EMPTY_LIST	7	None	add
482	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
483	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	30	1	add
484	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	30	1	add
485	[BUG]  [BUGGY]  setMaxEvaluations(evaluations,  isLastStep);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Incrementor,boolean)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(evaluations,  isLastStep);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(evaluations,  isLastStep);	  setMaxEvaluations(evaluations);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Incrementor,boolean)	85	None	replace
486	[BUG]  [BUGGY]  setMaxEvaluations(evaluations,  stepsInitialized);  [CE]  cannot  find  symbol  stepsInitialized  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(evaluations,  stepsInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(evaluations,  stepsInitialized);	  setMaxEvaluations(evaluations);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	85	None	replace
487	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  true;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  true;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    true;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
488	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  stepsInitialized.length);  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  stepsInitialized.length);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  stepsInitialized.length);	  setMaxEvaluations(-1L,    evaluations.length);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	120	None	replace
489	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	116	None	replace
490	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	116	None	replace
491	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collections.sort(this.eventsStates);  this.eventsStates  =  Collections.emptyList();  [CE]  no  suitable  method  found  for  sort(Collection<EventState>)  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collections.sort(this.eventsStates);  this.eventsStates  =  Collections.emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    Collections.sort(this.eventsStates);  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  no  suitable  method  found  for  sort(Collection<EventState>)	35	None	add
492	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList()  [CE]  ';'  expected  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList()  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList()	  	non-compiled	[CE]  ';'  expected	104	None	add
493	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
494	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.events  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.events  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.events	  	non-compiled	[CE]  not  a  statement	104	None	add
495	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	117	1	add
496	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	117	1	add
497	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	117	1	add
498	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	117	1	add
499	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  not  a  statement	28	None	add
500	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	28	1	add
501	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	28	1	add
502	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(expable);  [CE]  cannot  find  symbol  expable  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(expable);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(expable);	  	non-compiled	[CE]  cannot  find  symbol  expable	64	None	add
503	[BUG]  [BUGGY]  setOccurred  =  true;  [CE]  cannot  find  symbol  setOccurred  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setOccurred  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setOccurred  =  true;	  resetOccurred    =    false;    	non-compiled	[CE]  cannot  find  symbol  setOccurred	102	None	replace
504	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  wasLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  wasLastStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  wasLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  wasLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  wasLastStep	118	None	replace
505	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  ISLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  ISLastStep  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  ISLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  ISLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  ISLastStep	118	None	replace
506	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  TreeList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandlers  stepHandlers  =  new  TreeList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandlers  stepHandlers  =  new  TreeList  <  StepHandler>();	  StepHandlers    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
507	[BUG]  [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol  events	34	None	replace
508	[BUG]  [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(1);  }  [CE]  cannot  find  symbol  events  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(1);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol  events	34	None	replace
509	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	113	None	add
510	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	113	1	add
511	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	113	1	add
512	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(expable);  [CE]  cannot  find  symbol  expable  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(expable);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(expable);	  	non-compiled	[CE]  cannot  find  symbol  expable	21	None	add
513	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	93	None	replace
514	[BUG]  [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  steps  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	98	None	replace
515	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	125	1	replace
516	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  MaxCountExceededException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	125	1	replace
517	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	125	1	replace
518	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  MaxCountExceededException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	125	1	replace
519	[BUG]  [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  events  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  events	29	None	replace
520	[BUG]  [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  events  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  events	29	None	replace
521	[BUG]  [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  events  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  events	29	None	replace
522	[BUG]  [BUGGY]  isLastStep  =  null;  [CE]  incompatible  types  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  null;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep  =  null;	  isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	56	None	replace
523	[BUG]  [BUGGY]  hasLastStep  =  false;  [CE]  cannot  find  symbol  hasLastStep  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  hasLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	hasLastStep  =  false;	  isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasLastStep	56	None	replace
524	[BUG]  [BUGGY]  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  setMaxEvaluations(1);  [CE]  cannot  find  symbol  [FE]        MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  setMaxEvaluations(1);	  setMaxEvaluations(2);    Set    <    Increment>    steps    =    new    HashSet    <    Increment>();    setMaxEvaluations(2);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
525	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(3);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(3);    setMaxEvaluations(3);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	19	1	add
526	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(3);  setMaxEvaluations(4);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(3);  setMaxEvaluations(3);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(3);    setMaxEvaluations(3);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	19	1	add
527	[BUG]  [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  events  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  cannot  find  symbol  events	33	None	replace
528	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  events  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.events  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  cannot  find  symbol  events	33	None	replace
529	[BUG]  [BUGGY]  this.errors  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  errors  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.errors  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.errors  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  cannot  find  symbol  errors	33	None	replace
530	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(2);  setMaxEvaluations(events);  [CE]  cannot  find  symbol  events  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(2);  setMaxEvaluations(events);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(0);    setMaxEvaluations(2);  setMaxEvaluations(events);	  	non-compiled	[CE]  cannot  find  symbol  events	74	None	add
531	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart,  stepSize);  [CE]  no  suitable  constructor  found  for  ArrayList(double,double)  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart,  stepSize);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart,  stepSize);	  stepHandlers    =    new    ArrayList    <    StepHandler>(stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double,double)	129	None	replace
532	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  evaluates.size());  [CE]  cannot  find  symbol  evaluates  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  evaluates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  evaluates.size());	  setMaxEvaluations(-1L,    evaluations.size());    	non-compiled	[CE]  cannot  find  symbol  evaluates	6	None	replace
533	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	70	1	add
534	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(2);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(2);    setMaxEvaluations(2);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	70	1	add
535	[BUG]  [BUGGY]  setMaxEvaluations(stepHandlers);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<StepHandler>)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(stepHandlers);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(stepHandlers);	  setMaxEvaluations(evaluators);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<StepHandler>)	109	None	replace
536	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  ';'  expected	83	None	replace
537	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
538	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
539	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
540	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	115	None	add
541	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	115	1	add
542	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	115	1	add
543	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(1);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(1);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	72	1	add
544	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(1);  setMaxEvaluations(2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(1);  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(1);  setMaxEvaluations(2);	  	compilable	  [FE]  AssertionError  	72	1	add
545	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  ArrayList  <  Integer>  eventsStates  =  new  java.util.ArrayList  <  Integer>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	ArrayList  <  Integer>  eventsStates  =  new  java.util.ArrayList  <  Integer>();	  this.eventsStates    =    new    java.util.ArrayList    <    Integer>();    	compilable	  [FE]  MaxCountExceededException  	13	1	replace
546	[BUG]  [BUGGY]  ArrayList  <  Integer>  eventsStates  =  new  java.util.ArrayList  <  Integer>();  [FE]  MaxCountExceededException  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  ArrayList  <  Integer>  eventsStates  =  new  java.util.ArrayList  <  Integer>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	ArrayList  <  Integer>  eventsStates  =  new  java.util.ArrayList  <  Integer>();	  this.eventsStates    =    new    java.util.ArrayList    <    Integer>();    	compilable	  [FE]  MaxCountExceededException  	13	1	replace
547	[BUG]  [BUGGY]  setMaxEvaluations(stepHandlers,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<StepHandler>,Incrementor)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(stepHandlers,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(stepHandlers,  evaluations);	  setMaxEvaluations(events,    evaluations);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<StepHandler>,Incrementor)	103	None	replace
548	[BUG]  [BUGGY]  setMaxEvaluations(events,  stepStart,  evaluations);  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(events,  stepStart,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(events,  stepStart,  evaluations);	  setMaxEvaluations(eventsStates,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  events	42	None	replace
549	[BUG]  [BUGGY]  setMaxEvaluations(events,  stepsInitialized,  evaluations);  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(events,  stepsInitialized,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(events,  stepsInitialized,  evaluations);	  setMaxEvaluations(eventsStates,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  events	42	None	replace
550	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  stepsInitialized,  evaluations);  [CE]  cannot  find  symbol  stepsInitialized  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  stepsInitialized,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  stepsInitialized,  evaluations);	  setMaxEvaluations(-1L,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	3	None	replace
551	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  ';'  expected	81	None	replace
552	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	81	None	replace
553	[BUG]  [BUGGY]  setMaxEvaluations(1);  setMaxEvaluations(stepSize);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double)  [FE]                MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);  setMaxEvaluations(stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);  setMaxEvaluations(stepSize);	  setMaxEvaluations(1);    setMaxEvaluations(events);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double)	76	None	replace
554	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
555	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
556	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Arrays.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [CE]  cannot  find  symbol  Arrays  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Arrays.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    Arrays.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();	  	non-compiled	[CE]  cannot  find  symbol  Arrays	9	None	add
557	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.size());  setEvents(eventsStates.size());  [CE]  cannot  find  symbol  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size());  setEvents(eventsStates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.size());    setEvents(eventsStates.size());	  	non-compiled	[CE]  cannot  find  symbol	88	None	add
558	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  Increment>  eventsStates  =  new  HashSet  <  Increment>();  [CE]  cannot  find  symbol  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  Increment>  eventsStates  =  new  HashSet  <  Increment>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.size());    Set  <  Increment>  eventsStates  =  new  HashSet  <  Increment>();	  	non-compiled	[CE]  cannot  find  symbol	88	None	add
559	[BUG]  [BUGGY]  setEvaluations(evaluators);  [CE]  cannot  find  symbol  evaluators  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvaluations(evaluators);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvaluations(evaluators);	  setEvaluations(events);    	non-compiled	[CE]  cannot  find  symbol  evaluators	84	None	replace
560	[BUG]  [BUGGY]  setEvaluations(expandable);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvaluations(expandable);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvaluations(expandable);	  setEvaluations(events);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
561	[BUG]  [BUGGY]  setMaxEvaluations(stepStart);  setMaxEvaluations(3);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(stepStart);  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(stepStart);  setMaxEvaluations(3);	  setMaxEvaluations(2);    setMaxEvaluations(3);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double)	20	None	replace
562	[BUG]  [BUGGY]  setMaxEvaluations(3);  Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  setMaxEvaluations(3);  [CE]  cannot  find  symbol  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(3);    Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  setMaxEvaluations(3);	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
563	[BUG]  [BUGGY]  setMaxEvaluations(3);  Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  setMaxEvaluations(4);  [CE]  cannot  find  symbol  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(3);    Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  setMaxEvaluations(4);	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
564	[BUG]  [BUGGY]  setMaxEvaluations(3);  Set  <  Integer>  steps  =  new  HashSet  <  Integer>();  setMaxEvaluations(3);  [CE]  cannot  find  symbol  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  Set  <  Integer>  steps  =  new  HashSet  <  Integer>();  setMaxEvaluations(3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(3);    Set  <  Integer>  steps  =  new  HashSet  <  Integer>();  setMaxEvaluations(3);	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
565	[BUG]  [BUGGY]  this.eventsStates  =  Lists.newLinkedList();  [CE]  cannot  find  symbol  Lists  [FE]            UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Lists.newLinkedList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  Lists.newLinkedList();	  this.eventsStates    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	11	None	replace
566	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	94	None	add
567	[BUG]  [BUGGY]  setEventsStates(eventsStates,  evaluations);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEventsStates(eventsStates,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEventsStates(eventsStates,  evaluations);	  setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
568	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(4);	  setMaxEvaluations(2);    setMaxEvaluations(4);    	compilable	  [FE]  MaxCountExceededException  	24	1	replace
569	[BUG]  [BUGGY]  setMaxEvaluations(4);  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(4);	  setMaxEvaluations(2);    setMaxEvaluations(4);    	compilable	  [FE]  MaxCountExceededException  	24	1	replace
570	[BUG]  [BUGGY]  setEventsStates(events,  evaluations);  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEventsStates(events,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEventsStates(events,  evaluations);	  setMaxEvaluations(eventsStates,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  events	42	None	replace
571	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	113	None	add
572	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(1.0);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(1.0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(1.0);	  	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double)	64	None	add
573	[BUG]  [BUGGY]  setMaxEvaluations(maxEvaluations);  [CE]  cannot  find  symbol  maxEvaluations  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(maxEvaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(maxEvaluations);	  setMaxEvaluations(1);    setMaxEvaluations(0);    	non-compiled	[CE]  cannot  find  symbol  maxEvaluations	75	None	replace
574	[BUG]  [BUGGY]  Iterator  <  EventState>  events  =  new  ArrayList  <  EventState>();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  Iterator  <  EventState>  events  =  new  ArrayList  <  EventState>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	Iterator  <  EventState>  events  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incompatible  types	126	None	replace
575	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  setMaxEvaluations(  0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(3);    setMaxEvaluations(  0);	  	compilable	  [FE]  AssertionError  	46	1	add
576	[BUG]  [BUGGY]  setMaxEvaluations(3);  setMaxEvaluations(  0);  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  setMaxEvaluations(  0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(3);    setMaxEvaluations(  0);	  	compilable	  [FE]  AssertionError  	46	1	add
577	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
578	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    true;    	non-compiled	[CE]  incompatible  types	128	None	replace
579	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>(eventsStates.size());  setMaxEvaluations(eventsStates.size());  [CE]  cannot  find  symbol  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>(eventsStates.size());  setMaxEvaluations(eventsStates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.size());    Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>(eventsStates.size());  setMaxEvaluations(eventsStates.size());	  	non-compiled	[CE]  cannot  find  symbol	88	None	add
580	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>();  setMaxEvaluations(eventsStates.size());  [CE]  cannot  find  symbol  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>();  setMaxEvaluations(eventsStates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.size());    Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>();  setMaxEvaluations(eventsStates.size());	  	non-compiled	[CE]  cannot  find  symbol	88	None	add
581	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  EventState>  eventsStates  =  setEventsStates(eventsStates.size());  [CE]  cannot  find  symbol  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  EventState>  eventsStates  =  setEventsStates(eventsStates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.size());    Set  <  EventState>  eventsStates  =  setEventsStates(eventsStates.size());	  	non-compiled	[CE]  cannot  find  symbol	88	None	add
582	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>(eventsStates.size());  [CE]  cannot  find  symbol  [FE]          MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates.size());  Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>(eventsStates.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates.size());    Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>(eventsStates.size());	  	non-compiled	[CE]  cannot  find  symbol	88	None	add
583	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    true;    	compilable	  [FE]  MaxCountExceededException  	57	1	replace
584	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  MaxCountExceededException  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    true;    	compilable	  [FE]  MaxCountExceededException  	57	1	replace
585	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
586	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
587	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
588	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList()  [CE]  ';'  expected  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList()  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList()	  	non-compiled	[CE]  ';'  expected	9	None	add
589	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
590	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
591	[BUG]  [BUGGY]  stepHandlers  =  new  TreeMap  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  TreeMap  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlers  =  new  TreeMap  <  StepHandler>();	  stepHandlers    =    new    LinkedList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
592	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	68	1	add
593	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(1);  setMaxEvaluations(0);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(1);    setMaxEvaluations(0);  setMaxEvaluations(1);	  	compilable	  [FE]  AssertionError  	68	1	add
594	[BUG]  [BUGGY]  setEvents(events,  evaluations);  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvents(events,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvents(events,  evaluations);	  setMaxEvaluations(events,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  events	103	None	replace
595	[BUG]  [BUGGY]  setMaxEvaluations(-eventsStates,  evaluations);  [CE]  bad  operand  type  Collection<EventState>  for  unary  operator  '-'  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-eventsStates,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-eventsStates,  evaluations);	  setMaxEvaluations(-eventsStates);    	non-compiled	[CE]  bad  operand  type  Collection<EventState>  for  unary  operator  '-'	130	None	replace
596	[BUG]  [BUGGY]  setMaxEvaluations(evaluations,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(Incrementor,Incrementor)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(evaluations,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(evaluations,  evaluations);	  setMaxEvaluations(evaluations);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Incrementor,Incrementor)	85	None	replace
597	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  steps	114	None	replace
598	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
599	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  >  expected	31	None	replace
600	[BUG]  [BUGGY]  setMaxEvaluations(1.0,  evaluations.size());  [CE]  cannot  find  symbol  [FE]        MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1.0,  evaluations.size());  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1.0,  evaluations.size());	  setMaxEvaluations(1);    setMaxEvaluations(1.0);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
601	[BUG]  [BUGGY]  setEvaluators(evaluators);  [CE]  cannot  find  symbol  evaluators  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvaluators(evaluators);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvaluators(evaluators);	  setMaxEvaluations(evaluators);    	non-compiled	[CE]  cannot  find  symbol  evaluators	109	None	replace
602	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  newList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  newList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(isLastStep)  {  this.eventsStates  =  newList  <  EventState>();  isLastStep  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
603	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  List  <  EventState>();  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  List  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  List  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	137	None	replace
604	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	137	1	replace
605	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  MaxCountExceededException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	137	1	replace
606	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  stepStart,  stateInitialized);  [CE]  cannot  find  symbol  stateInitialized  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  stepStart,  stateInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  stepStart,  stateInitialized);	  setMaxEvaluations(eventsStates,    stepStart);    	non-compiled	[CE]  cannot  find  symbol  stateInitialized	45	None	replace
607	[BUG]  [BUGGY]  setMaxEvaluations(eventsStates,  stepStart,  evaluates);  [CE]  cannot  find  symbol  evaluates  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(eventsStates,  stepStart,  evaluates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(eventsStates,  stepStart,  evaluates);	  setMaxEvaluations(eventsStates,    stepStart);    	non-compiled	[CE]  cannot  find  symbol  evaluates	45	None	replace
608	[BUG]  [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(  stepStart);  setMaxEvaluations(1);  [CE]  no  suitable  method  found  for  setMaxEvaluations(double)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(0);    setMaxEvaluations(0);  setMaxEvaluations(  stepStart);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(0);        setMaxEvaluations(0);    setMaxEvaluations(  stepStart);  setMaxEvaluations(1);	  	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(double)	62	None	add
609	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  events  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  events	81	None	replace
610	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
611	[BUG]  [BUGGY]  setMinimumEvaluations(1);  setMaxEvaluations(1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMinimumEvaluations(1);  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMinimumEvaluations(1);  setMaxEvaluations(1);	  setMaxEvaluations(1);    setMaxEvaluations(1);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
612	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  MaxCountExceededException  	95	1	replace
613	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  MaxCountExceededException  	95	1	replace
614	[BUG]  [BUGGY]  Set  <  StepHandler>  stepHandlers  =  new  HashSet  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  Set  <  StepHandler>  stepHandlers  =  new  HashSet  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	Set  <  StepHandler>  stepHandlers  =  new  HashSet  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
615	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	7	1	add
616	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	7	1	add
617	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  resetEvaluations();  }	  	compilable	  [FE]  UnsupportedOperationException  	7	1	add
618	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  resetEvaluations();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  resetEvaluations();  }	  	compilable	  [FE]  UnsupportedOperationException  	7	1	add
619	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
620	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  setMaxEvaluations(-1);  resetEvaluations();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  setMaxEvaluations(-1);  resetEvaluations();  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	add
621	[BUG]  [BUGGY]  setMaxEvaluations(statesInitialized,  eventsStates);  [CE]  no  suitable  method  found  for  setMaxEvaluations(boolean,Collection<EventState>)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(statesInitialized,  eventsStates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(statesInitialized,  eventsStates);	  setMaxEvaluations(eventsStates,    statesInitialized);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(boolean,Collection<EventState>)	43	None	replace
622	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates	  	non-compiled	[CE]  not  a  statement	30	None	add
623	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventStatement>();  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventStatement>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	this.eventsStates  =  new  ArrayList  <  EventStatement>();	          this.eventsStates    =    Collections.emptyList();    if(this.eventsStates!=    Collections.emptyList())    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    setMaxEvaluations(-1);    resetEvaluations();    }    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
624	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(3);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(3);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	72	1	add
625	[BUG]  [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(3);  setMaxEvaluations(4);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1);    setMaxEvaluations(3);  setMaxEvaluations(3);  setMaxEvaluations(4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1);        setMaxEvaluations(3);    setMaxEvaluations(3);  setMaxEvaluations(4);	  	compilable	  [FE]  AssertionError  	72	1	add
626	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    stepHandlers    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	116	None	replace
627	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
628	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
629	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  }	  	compilable	  [FE]  UnsupportedOperationException  	104	1	add
630	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  }	  	compilable	  [FE]  UnsupportedOperationException  	104	1	add
631	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(isLastStep)  {  isLastStep  =  false;  resetOccurred  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	resetOccurred    =    false;    if(isLastStep)  {  isLastStep  =  false;  resetOccurred  =  false;  }	  	compilable	  [FE]  AssertionError  	101	1	add
632	[BUG]  [BUGGY]  resetOccurred  =  false;  if(isLastStep)  {  isLastStep  =  false;  resetOccurred  =  false;  }  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(isLastStep)  {  isLastStep  =  false;  resetOccurred  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    if(isLastStep)  {  isLastStep  =  false;  resetOccurred  =  false;  }	  	compilable	  [FE]  AssertionError  	101	1	add
633	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(isLastStep)  {  isLastStep  =  true;  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	resetOccurred    =    false;    if(isLastStep)  {  isLastStep  =  true;  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	101	1	add
634	[BUG]  [BUGGY]  resetOccurred  =  false;  if(isLastStep)  {  isLastStep  =  true;  isLastStep  =  false;  }  [FE]  AssertionError  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(isLastStep)  {  isLastStep  =  true;  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    if(isLastStep)  {  isLastStep  =  true;  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	101	1	add
635	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(isLastStep)  {  resetOccurred  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	resetOccurred    =    false;    if(isLastStep)  {  resetOccurred  =  false;  }	  	compilable	  [FE]  AssertionError  	101	1	add
636	[BUG]  [BUGGY]  resetOccurred  =  false;  if(isLastStep)  {  resetOccurred  =  false;  }  [FE]  AssertionError  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(isLastStep)  {  resetOccurred  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    if(isLastStep)  {  resetOccurred  =  false;  }	  	compilable	  [FE]  AssertionError  	101	1	add
637	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(isLastStep)  {  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	resetOccurred    =    false;    if(isLastStep)  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	101	1	add
638	[BUG]  [BUGGY]  resetOccurred  =  false;  if(isLastStep)  {  isLastStep  =  false;  }  [FE]  AssertionError  [FE]          MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  resetOccurred  =  false;  if(isLastStep)  {  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	resetOccurred    =    false;    if(isLastStep)  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	101	1	add
639	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  }	  	compilable	  [FE]  UnsupportedOperationException  	39	1	add
640	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  }	  	compilable	  [FE]  UnsupportedOperationException  	39	1	add
641	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates	  	non-compiled	[CE]  not  a  statement	32	None	add
642	[BUG]  [BUGGY]  setEventStates(events);  [CE]  cannot  find  symbol  events  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEventStates(events);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEventStates(events);	  setEvents(events);    	non-compiled	[CE]  cannot  find  symbol  events	110	None	replace
643	[BUG]  [BUGGY]  setEvents(stepStart);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setEvents(stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setEvents(stepStart);	  setEvents(events);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
644	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	55	1	add
645	[BUG]  [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	55	1	add
646	[BUG]  [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  incompatible  types	55	None	add
647	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	82	1	add
648	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(!isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	82	1	add
649	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  false;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  false;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  false;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    true;    	non-compiled	[CE]  incompatible  types	58	None	replace
650	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(  0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	setMaxEvaluations(2);        setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(  0);	  	compilable	  [FE]  AssertionError  	21	1	add
651	[BUG]  [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(  0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(2);    setMaxEvaluations(1);  setMaxEvaluations(2);  setMaxEvaluations(  0);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(2);        setMaxEvaluations(1);    setMaxEvaluations(2);  setMaxEvaluations(  0);	  	compilable	  [FE]  AssertionError  	21	1	add
652	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  evaluations.size()  -  stepStart);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  evaluations.size()  -  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  evaluations.size()  -  stepStart);	  setMaxEvaluations(-1L,    evaluations.size());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
653	[BUG]  [BUGGY]  setMaxEvaluations(-1L,  evaluations.size()  -  stepSize);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(-1L,  evaluations.size()  -  stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(-1L,  evaluations.size()  -  stepSize);	  setMaxEvaluations(-1L,    evaluations.size());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
654	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  MaxCountExceededException  	36	1	replace
655	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [FE]  MaxCountExceededException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  MaxCountExceededException  	36	1	replace
656	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  UnsupportedOperationException  	36	1	replace
657	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  UnsupportedOperationException  	36	1	replace
658	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  UnsupportedOperationException  	36	1	replace
659	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  UnsupportedOperationException  	36	1	replace
660	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates	  	non-compiled	[CE]  not  a  statement	37	None	add
661	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates!=    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
662	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	92	None	replace
663	[BUG]  [BUGGY]  setMaxEvaluations(1,  -1L,  evaluations);  [CE]  no  suitable  method  found  for  setMaxEvaluations(int,long,Incrementor)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(1,  -1L,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(1,  -1L,  evaluations);	  setMaxEvaluations(-1,    -1L);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(int,long,Incrementor)	5	None	replace
664	[BUG]  [BUGGY]  setMaxEvaluations(3);  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  setMaxEvaluations(3);  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	setMaxEvaluations(3);  Set  <  Increment>  steps  =  new  HashSet  <  Increment>();	  setMaxEvaluations(2);    Set    <    Increment>    steps    =    new    HashSet    <    Increment>();    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
665	[BUG]  [BUGGY]  if(this.stepSize!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  resetEvaluations();  }  [CE]  incomparable  types:  double  and  <null>  [FE]              UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.stepSize!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(this.stepSize!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  resetEvaluations();  }	          this.eventsStates    =    Collections.emptyList();    if(this.eventsStates!=    Collections.emptyList())    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    resetEvaluations();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	134	None	replace
666	[BUG]  [BUGGY]  if(this.stepSize!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  resetEvaluations();  }  [CE]  incomparable  types:  double  and  <null>  [FE]                UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.stepSize!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(this.stepSize!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  resetEvaluations();  }	          this.eventsStates    =    Collections.emptyList();    if(this.eventsStates!=    Collections.emptyList())    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    resetEvaluations();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	134	None	replace
667	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	118	1	replace
668	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	118	1	replace
669	[BUG]  [BUGGY]  if(eventsStates!=  null)  {  setMaxEvaluations(0);  setMaxEvaluations(eventsStates);  }  else  {  stateInitialized  =  false;  }  [CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>)  [FE]              MaxCountExceededException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(eventsStates!=  null)  {  setMaxEvaluations(0);  setMaxEvaluations(eventsStates);  }  else  {  stateInitialized  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(eventsStates!=  null)  {  setMaxEvaluations(0);  setMaxEvaluations(eventsStates);  }  else  {  stateInitialized  =  false;  }	  setMaxEvaluations(0);    setMaxEvaluations(eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations(Collection<EventState>)	67	None	replace
670	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.events  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  events  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.events  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	93	93	1	replace	if(this.eventsStates  ==  null)  {  this.events  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  events	29	None	replace
