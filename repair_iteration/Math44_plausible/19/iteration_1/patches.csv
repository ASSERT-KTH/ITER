bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.remove(i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.remove(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.remove(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluates.remove(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluates.remove(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluates.remove(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN_VALUE)  {  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN_VALUE)  {	  if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.getType()    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN_VALUE  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN_VALUE  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN_VALUE	  if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.getType()    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
7	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN_VAL  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN_VAL  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN_VAL	  if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.getType()    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(i).reset();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(i).reset();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(i).reset();  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i).reset();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluations.get(i).reset();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluations.get(i).reset();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluations.get(i).reset();  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i).reset();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.get(i).reset();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.get(i).reset();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.get(i).reset();  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i).reset();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluations.get(i).reset();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluations.get(i).reset();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluations.get(i).reset();  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i).reset();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
12	[BUG]  [BUGGY]  evaluates.removeCount(0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  evaluates.removeCount(0);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	evaluates.removeCount(0);	  evaluates.removeCount();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  evaluations.removeCount();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  evaluations.removeCount();  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	evaluations.removeCount();	  evaluates.removeCount();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  evaluates.remove(0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  evaluates.remove(0);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	evaluates.remove(0);	  evaluates.removeCount();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(i);  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(i);  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(i);  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    int    stepStart    =    evaluates.get(i);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    int    stepStart    =    evaluates.get(i);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    int    stepStart    =    evaluates.get(i);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(0);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(0);  if(state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(0);  if(state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(!state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(!state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(!state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  this.events.remove(events.size());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  this.events.remove(events.size());  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.events.remove(events.size());	  this.events.remove(events.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  this.events.remove(evaluations.size());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  this.events.remove(evaluations.size());  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.events.remove(evaluations.size());	  this.events.remove(events.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  this.events.remove(evaluations.size()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  this.events.remove(evaluations.size()  -  1);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.events.remove(evaluations.size()  -  1);	  this.events.remove(events.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  this.events.remove(0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  this.events.remove(0);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.events.remove(0);	  this.events.remove(events.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.get(i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.get(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.get(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.remove(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.remove(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.remove(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(0);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(0);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.removeCount(evaluations.get(0));  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.removeCount(evaluations.get(0));  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.removeCount(evaluations.get(0));  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.removeCount(evaluations.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.removeCount(evaluations.get(1));  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.removeCount(evaluations.get(1));  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.removeCount(evaluations.get(1));  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.removeCount(evaluations.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
31	[BUG]  [BUGGY]  evaluates.removeCount(evaluations.get(0));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  evaluates.removeCount(evaluations.get(0));  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	evaluates.removeCount(evaluations.get(0));	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.removeCount(evaluations.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.addCount(evaluations.get(0));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.addCount(evaluations.get(0));  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.addCount(evaluations.get(0));  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.removeCount(evaluations.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
33	[BUG]  [BUGGY]  Incrementor  state  =(Integer)evaluations.get(0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Incrementor  state  =(Integer)evaluations.get(0);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Incrementor  state  =(Integer)evaluations.get(0);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  Incrementor  state  =(Integer)evaluations.get(0);  if(state.isLastStep)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Incrementor  state  =(Integer)evaluations.get(0);  if(state.isLastStep)  {  continue;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Incrementor  state  =(Integer)evaluations.get(0);  if(state.isLastStep)  {  continue;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  Incrementor  state  =(Integer)evaluations.get(i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Incrementor  state  =(Integer)evaluations.get(i);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Incrementor  state  =(Integer)evaluations.get(i);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(1);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(1);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.remove(0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.remove(0);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.remove(0);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluates.remove(0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluates.remove(0);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluates.remove(0);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(0);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(0);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(1);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(1);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.remove(0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.remove(0);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.remove(0);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluates.remove(0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluates.remove(0);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluates.remove(0);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
44	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(0);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(0);  if(state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(0);  if(state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(!state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(!state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(!state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  Incrementor  state  =(Integer)evaluations.get(0);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Incrementor  state  =(Integer)evaluations.get(0);  if(state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Incrementor  state  =(Integer)evaluations.get(0);  if(state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)values.get(i);  if(state.isLastStep)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)values.get(i);  if(state.isLastStep)  {  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)values.get(i);  if(state.isLastStep)  {	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.get(i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.get(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.get(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluations.get(i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluations.get(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluations.get(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluates.get(i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluates.get(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluates.get(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
55	[BUG]  [BUGGY]  this.eventsStates.remove(evaluation);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  this.eventsStates.remove(evaluation);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.eventsStates.remove(evaluation);	  this.eventsStates.remove(name);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
56	[BUG]  [BUGGY]  this.eventsStates.remove(evaluations.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  this.eventsStates.remove(evaluations.size()  -  1);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.eventsStates.remove(evaluations.size()  -  1);	  this.eventsStates.remove(name);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
57	[BUG]  [BUGGY]  this.eventsStates.remove(evaluations.size());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  this.eventsStates.remove(evaluations.size());  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.eventsStates.remove(evaluations.size());	  this.eventsStates.remove(name);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
58	[BUG]  [BUGGY]  this.eventsStates.remove(evaluator);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  this.eventsStates.remove(evaluator);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.eventsStates.remove(evaluator);	  this.eventsStates.remove(name);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
59	[BUG]  [BUGGY]  evaluates.resetCount();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  evaluates.resetCount();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	evaluates.resetCount();	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
60	[BUG]  [BUGGY]  evaluates.remove(name);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  evaluates.remove(name);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	evaluates.remove(name);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
61	[BUG]  [BUGGY]  int  stepSize  =  evaluates.size();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  int  stepSize  =  evaluates.size();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	int  stepSize  =  evaluates.size();	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  Incrementor  evaluator  =  getEvaluationsInstance(null);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Incrementor  evaluator  =  getEvaluationsInstance(null);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Incrementor  evaluator  =  getEvaluationsInstance(null);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
63	[BUG]  [BUGGY]  int  stepStart  =  evaluates.size();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  int  stepStart  =  evaluates.size();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	int  stepStart  =  evaluates.size();	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i).reset();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  Integer  i  =  evaluates.get(i);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Integer  i  =  evaluates.get(i);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Integer  i  =  evaluates.get(i);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i).reset();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluations();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Integer[]  evaluations  =  getEvaluations();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Integer[]  evaluations  =  getEvaluations();	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i).reset();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
66	[BUG]  [BUGGY]  Integer  i  =  evaluates.get(name);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Integer  i  =  evaluates.get(name);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Integer  i  =  evaluates.get(name);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i).reset();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
67	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
68	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
69	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(1);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(1);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.remove(0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.remove(0);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.remove(0);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
71	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluates.remove(0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluates.remove(0);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluates.remove(0);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
72	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(1);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(1);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
73	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.remove(0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.remove(0);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.remove(0);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
74	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
75	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
76	[BUG]  [BUGGY]  if(expandeable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(expandeable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(expandeable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
77	[BUG]  [BUGGY]  if(expandeable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(expandeable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(expandeable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
78	[BUG]  [BUGGY]  this.eventsStates.remove(evaluators.size()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  this.eventsStates.remove(evaluators.size()  -  1);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.eventsStates.remove(evaluators.size()  -  1);	  this.eventsStates.remove(name);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
79	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN	  if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.getType()    ==    Integer.MIN_VALUE)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
80	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
81	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
82	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluations.get(i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluations.get(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluations.get(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
84	[BUG]  [BUGGY]  int  stepSize  =  evaluates.get(i);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  int  stepSize  =  evaluates.get(i);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	int  stepSize  =  evaluates.get(i);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    int    stepStart    =    evaluates.get(i);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
85	[BUG]  [BUGGY]  int  stepHandlers  =  evaluates.get(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  int  stepHandlers  =  evaluates.get(i);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	int  stepHandlers  =  evaluates.get(i);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    int    stepStart    =    evaluates.get(i);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
86	[BUG]  [BUGGY]  Integrator  stepHandlers  =  evaluates.get(i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Integrator  stepHandlers  =  evaluates.get(i);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Integrator  stepHandlers  =  evaluates.get(i);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    int    stepStart    =    evaluates.get(i);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
87	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    continue;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
88	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    continue;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
89	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
90	[BUG]  [BUGGY]  Integer  evaluator  =  getEvaluationsInitialized();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Integer  evaluator  =  getEvaluationsInitialized();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Integer  evaluator  =  getEvaluationsInitialized();	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.removeCount(evaluations.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
91	[BUG]  [BUGGY]  Integer  evaluator  =  getEvaluationsInitialized(evaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  Integer  evaluator  =  getEvaluationsInitialized(evaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	Integer  evaluator  =  getEvaluationsInitialized(evaluations);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.removeCount(evaluations.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
92	[BUG]  [BUGGY]  evaluates.clear();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  evaluates.clear();  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	evaluates.clear();	  evaluates.removeCount();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
93	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.get(i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.get(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.get(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
94	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(0);  if(state.isLastStep)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(0);  if(state.isLastStep)  {  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(0);  if(state.isLastStep)  {	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integrator)evaluations.get(i);    if(state.isLastStep)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
95	[BUG]  [BUGGY]  this.eventsStates.remove(0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  this.eventsStates.remove(0);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.eventsStates.remove(0);	  this.eventsStates.remove(name);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.removeCount(evaluations.get(i));  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.removeCount(evaluations.get(i));  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.removeCount(evaluations.get(i));  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.removeCount(evaluations.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluates.remove(i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluates.remove(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluates.remove(i);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
98	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(0);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(0);  if(state.isLastStep)  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(0);  if(state.isLastStep)  {  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  int  stepStart  =  evaluates.get(i);  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  int  stepStart  =  evaluates.get(i);  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  int  stepStart  =  evaluates.get(i);  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    int    stepStart    =    evaluates.get(i);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(0);  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(0);  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(0);  return;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    int    stepStart    =    evaluates.get(i);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
101	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.get(i).reset();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.get(i).reset();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.get(i).reset();  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i).reset();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
102	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(0).reset();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(0).reset();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(0).reset();  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.get(i).reset();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
103	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(0);  if(state.isLastStep)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  void  resetEvaluations()  {  evaluations.resetCount();    [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(0);  if(state.isLastStep)  {  continue;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(0);  if(state.isLastStep)  {  continue;  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    Incrementor    state    =(Integer)evaluations.get(i);    if(state.isLastStep)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
