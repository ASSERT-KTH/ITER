projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.stepHandlers=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=newArrayList<Integer>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=Collections.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsInitialized=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newArrayList<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newLinkedList<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87StepHandlersstepHandlers=newArrayList<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=expandable;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expr=ExpandableStatefulODE.create(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expr=ExpandableStatefulODE.getInstance();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsStates=Collections.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=newHashSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=newArrayList<EventStatement>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newArrayList<StepHandler>(events);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newTreeSet<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expr=ExpandableStatefulODE.create(name,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expr=ExpandableStatefulODE.create(name,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expr=ExpandableStatefulODE.create(name+1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newTreeSet<StepHandler>();stepHandlers=newTreeSet<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newTreeSet<StepHandler>();StepHandlers=newTreeSet<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newTreeSet<StepHandler>();StepHandler>stepHandlers=newTreeSet<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newTreeSet<StepHandler>();stepsInitialized=newTreeSet<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=newLinkedList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=newTreeSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87StepHandlersstepHandlers=newLinkedList<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87StepHandlersstepHandlers=newTreeSet<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87StepHandlersstepHandlers=newTreeMap<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newArrayList<StepHandler>(eventsStates);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newArrayList<StepHandler>(events.size());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newArrayList<StepHandler>(events.length);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.stepHandlers=newLinkedList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.stepHandlers=newjava.util.ArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.stepHandlers=newTreeSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsStates=Collections.EMPTY_LIST;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsStates=Lists.newArrayList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsStates=Collections.<EventState>emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expansion=ExpandableStatefulODE.getInstance();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expr=expandable.getInstance();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=newLinkedHashSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newHashSet<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor();Incrementorevaluations=newIncrementor();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor();Incrementorassessments=newIncrementor();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor();Integerevaluations=newIncrementor();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor();Incrementorappraisals=newIncrementor();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor();INCrementorevaluations=newIncrementor();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=Collections.EMPTY_LIST;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=Lists.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsInitialized=newLinkedList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87This.eventsInitialized=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=newLinkedList<Integer>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=newjava.util.ArrayList<Integer>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsStates=Collections.emptyList();this.eventsStates=Collections.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsStates=Collections.emptyList();Collections.emptyList();this.eventsStates=Collections.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsStates=Collections.emptyList();This.eventsStates=Collections.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsStates=Collections.emptyList();ArrayList<EventState>eventsStates=Collections.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsStates=Collections.emptyList();these.eventsStates=Collections.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=ExpandableStatefulODE;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=newExpandableStatefulODE();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor(name.toLowerCase());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=expandable;this.expandable=expandable;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=expandable;if(expandable!=null){this.expandable=expandable;}else{setMaxEvaluations(-1);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=expandable;if(expandable!=null){this.expandable=expandable;}else{setMaxEvaluations(1);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=expandable;if(expandable!=null){this.expandable=expandable;}else{isLastStep=false;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=expandable;if(expandable!=null){this.expandable=expandable;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=newLinkedList<EventStatement>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=newTreeSet<EventStatement>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=expansionable;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor();Collection<Incrementor>evaluations=newIncrementor();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor();Integratorevaluations=newIncrementor();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.stepHandlers=newHashSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.stepHandlers=newObjectList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newTreeSet<StepHandler>();steps=newTreeSet<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newInteger();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=Collections.EMPTY_LIST.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newArrayList<StepHandler>(stepHandlers);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsInitialization=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87This.events=newArrayList<Integer>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newTreeList<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsStates=Collections.emptyList();ArrayList<EventState>steps=Collections.emptyList();this.eventsStates=Collections.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsStates=Collections.emptyList();This.eventsStates=Collections.emptyList();this.eventsStates=Collections.emptyList();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=expandable;if(expandable!=null){if(isLastStep){expandable=newExpandableStatefulODE();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=expandable;This.expandable=expandable;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.events=newHashSet<EventStatement>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87This.events=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor();Incrementorevaluations=newIncrementor();this.events=newIncrementor();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor();Incrementorevaluations=newIncrementor();this.eventsStates=newIncrementor();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87Incrementorevaluations=newIncrementor();Incrementorevaluations=newIncrementor();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.eventsStates=Collections.unmodifiableCollection();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.stepHandlers=newTreeMap<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newTreeMap<StepHandler>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87This.events=newArrayList<EventStatement>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=expandable;if(expandable!=null){this.expandable=expandable;}else{this.expandable=expandable;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expandable=expandable;if(expandable!=null){this.expandable=expandable;}else{setMaxEvaluations();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87this.expr=ExpandableStatefulODE.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java87stepHandlers=newTreeSet<StepHandler>(events);
